name: jira
connection_types:
  jira:
    name: jira
    fields: {}
    reference: ""
icon_uri: ""
is_connection_optional: false
actions:
- name: InviteUser
  display_name: Create User
  description: Create user
  enabled: true
  parameters:
    displayName:
      display_name: Display Name
      type: string
      description: A suggested display name for the user. If the user has an Atlassian
        account, their display name is not changed. If the user does not have an Atlassian
        account, this display name is used as a suggestion for creating an account.
        The user is sent an email asking them to set their display name and privacy
        preferences.
      placeholder: ""
      required: true
      default: ""
      pattern: ""
      options: []
      index: 1
      format: ""
      is_multi: false
    emailAddress:
      display_name: Email
      type: string
      description: The email address for the user.
      placeholder: ""
      required: true
      default: ""
      pattern: ""
      options: []
      index: 2
      format: ""
      is_multi: false
  action_to_run: http.post
  action_to_run_param_values:
    body: '{"displayName":"{{params.displayName}}","emailAddress":"{{params.emailAddress}}"}'
    contentType: application/json
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/user''}}'
  is_connection_optional: ""
- name: GetAllUsers
  display_name: Get All Users
  description: Get all users
  enabled: true
  parameters:
    maxResults:
      display_name: Max Results
      type: integer
      description: The maximum number of items to return.
      placeholder: ""
      required: false
      default: "50"
      pattern: ""
      options: []
      index: 3
      format: int32
      is_multi: false
    startAt:
      display_name: Start At
      type: integer
      description: The index of the first item to return.
      placeholder: ""
      required: false
      default: "0"
      pattern: ""
      options: []
      index: 2
      format: int32
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/users/search''}}{{''?startAt='' + params.startAt + ''&maxResults=''
      + params.maxResults}}'
  is_connection_optional: ""
- name: GetProject
  display_name: Get Project
  description: Get project
  enabled: true
  parameters:
    projectIdOrKey:
      display_name: Project ID or key
      type: string
      description: The project ID or project key (case sensitive).
      placeholder: ""
      required: true
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/project/'' + params.projectIdOrKey}}{{''?expand='' + params.expand
      + ''&properties='' + params.properties}}'
  is_connection_optional: ""
- name: ListIssues
  display_name: Search For Issues Using Jql
  description: Search for issues using JQL (GET)
  enabled: true
  parameters:
    jql:
      display_name: Query
      type: string
      description: |-
        The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:

         *  If no JQL expression is provided, all issues are returned.
         *  `username` and `userkey` cannot be used as search terms due to privacy reasons. Use `accountId` instead.
         *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.
      placeholder: 'Example: project = HSP'
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/search''}}{{''?jql='' + params.jql + ''&startAt='' + params.startAt
      + ''&maxResults='' + params.maxResults + ''&validateQuery='' + params.validateQuery
      + ''&fields='' + params.fields + ''&expand='' + params.expand + ''&properties=''
      + params.properties + ''&fieldsByKeys='' + params.fieldsByKeys}}'
  is_connection_optional: ""
- name: GetProjects
  display_name: Search Projects
  description: Get projects paginated
  enabled: true
  parameters:
    maxResults:
      display_name: Max number of results
      type: integer
      description: The maximum number of items to return per page.
      placeholder: ""
      required: false
      default: "50"
      pattern: ""
      options: []
      index: 999
      format: int32
      is_multi: false
    startAt:
      display_name: Start at
      type: integer
      description: The index of the first item to return in a page of results (page
        offset).
      placeholder: ""
      required: false
      default: "0"
      pattern: ""
      options: []
      index: 999
      format: int64
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/project/search''}}{{''?startAt='' + params.startAt + ''&maxResults=''
      + params.maxResults + ''&orderBy='' + params.orderBy + ''&id='' + params.id
      + ''&query='' + params.query + ''&typeKey='' + params.typeKey + ''&categoryId=''
      + params.categoryId + ''&action='' + params.action + ''&expand='' + params.expand
      + ''&status='' + params.status + ''&properties='' + params.properties + ''&propertyQuery=''
      + params.propertyQuery}}'
  is_connection_optional: ""
