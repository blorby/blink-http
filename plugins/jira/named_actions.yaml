name: jira
connection_types:
  jira:
    name: jira
    fields: {}
    reference: ""
icon_uri: ""
is_connection_optional: false
actions:
- name: InviteUser
  display_name: Create User
  description: Create user
  enabled: true
  parameters:
    applicationKeys:
      display_name: ""
      type: array
      description: Deprecated, do not use.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    displayName:
      display_name: Display Name
      type: string
      description: A suggested display name for the user. If the user has an Atlassian
        account, their display name is not changed. If the user does not have an Atlassian
        account, this display name is used as a suggestion for creating an account.
        The user is sent an email asking them to set their display name and privacy
        preferences.
      placeholder: ""
      required: true
      default: ""
      pattern: ""
      options: []
      index: 1
      format: ""
      is_multi: false
    emailAddress:
      display_name: Email
      type: string
      description: The email address for the user.
      placeholder: ""
      required: true
      default: ""
      pattern: ""
      options: []
      index: 2
      format: ""
      is_multi: false
    key:
      display_name: ""
      type: string
      description: This property is no longer available. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
        for details.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    name:
      display_name: ""
      type: string
      description: This property is no longer available. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/)
        for details.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    password:
      display_name: ""
      type: string
      description: This property is no longer available. If the user has an Atlassian
        account, their password is not changed. If the user does not have an Atlassian
        account, they are sent an email asking them set up an account.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    self:
      display_name: ""
      type: string
      description: The URL of the user.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
  action_to_run: http.post
  action_to_run_param_values:
    body: '{"displayName":"{{params.displayName}}","emailAddress":"{{params.emailAddress}}"}'
    contentType: application/json
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/user''}}'
  is_connection_optional: ""
- name: GetAllUsers
  display_name: Get All Users
  description: Get all users
  enabled: true
  parameters:
    maxResults:
      display_name: Max Results
      type: integer
      description: The maximum number of items to return.
      placeholder: ""
      required: false
      default: "50"
      pattern: ""
      options: []
      index: 3
      format: int32
      is_multi: false
    startAt:
      display_name: Start At
      type: integer
      description: The index of the first item to return.
      placeholder: ""
      required: false
      default: "0"
      pattern: ""
      options: []
      index: 2
      format: int32
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/users/search''}}{{''?startAt='' + params.startAt + ''&maxResults=''
      + params.maxResults}}'
  is_connection_optional: ""
- name: GetProject
  display_name: Get Project
  description: Get project
  enabled: true
  parameters:
    expand:
      display_name: ""
      type: string
      description: |-
        Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:

         *  `description` The project description.
         *  `issueTypes` The issue types associated with the project.
         *  `lead` The project lead.
         *  `projectKeys` All project keys associated with the project.
         *  `issueTypeHierarchy` The project issue type hierarchy.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    projectIdOrKey:
      display_name: Project ID or key
      type: string
      description: The project ID or project key (case sensitive).
      placeholder: ""
      required: true
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    properties:
      display_name: ""
      type: array
      description: A list of project properties to return for the project. This parameter
        accepts a comma-separated list.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/project/'' + params.projectIdOrKey}}{{''?expand='' + params.expand
      + ''&properties='' + params.properties}}'
  is_connection_optional: ""
- name: ListIssues
  display_name: Search For Issues Using Jql
  description: Search for issues using JQL (GET)
  enabled: true
  parameters:
    expand:
      display_name: ""
      type: string
      description: |-
        Use [expand](#expansion) to include additional information about issues in the response. This parameter accepts a comma-separated list. Expand options include:

         *  `renderedFields` Returns field values rendered in HTML format.
         *  `names` Returns the display name of each field.
         *  `schema` Returns the schema describing a field type.
         *  `transitions` Returns all possible transitions for the issue.
         *  `operations` Returns all possible operations for the issue.
         *  `editmeta` Returns information about how each field can be edited.
         *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.
         *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    fields:
      display_name: ""
      type: array
      description: |-
        A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:

         *  `*all` Returns all fields.
         *  `*navigable` Returns navigable fields.
         *  Any issue field, prefixed with a minus to exclude.

        Examples:

         *  `summary,comment` Returns only the summary and comments fields.
         *  `-description` Returns all navigable (default) fields except description.
         *  `*all,-comment` Returns all fields except comments.

        This parameter may be specified multiple times. For example, `fields=field1,field2&fields=field3`.

        Note: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    fieldsByKeys:
      display_name: ""
      type: bool
      description: Reference fields by their key (rather than ID).
      placeholder: ""
      required: false
      default: "false"
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    jql:
      display_name: Query
      type: string
      description: |-
        The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:

         *  If no JQL expression is provided, all issues are returned.
         *  `username` and `userkey` cannot be used as search terms due to privacy reasons. Use `accountId` instead.
         *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.
      placeholder: 'Example: project = HSP'
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    maxResults:
      display_name: ""
      type: integer
      description: The maximum number of items to return per page. To manage page
        size, Jira may return fewer items per page where a large number of fields
        are requested. The greatest number of items returned per page is achieved
        when requesting `id` or `key` only.
      placeholder: ""
      required: false
      default: "50"
      pattern: ""
      options: []
      index: 999
      format: int32
      is_multi: false
    properties:
      display_name: ""
      type: array
      description: A list of issue property keys for issue properties to include in
        the results. This parameter accepts a comma-separated list. Multiple properties
        can also be provided using an ampersand separated list. For example, `properties=prop1,prop2&properties=prop3`.
        A maximum of 5 issue property keys can be specified.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    startAt:
      display_name: ""
      type: integer
      description: The index of the first item to return in a page of results (page
        offset).
      placeholder: ""
      required: false
      default: "0"
      pattern: ""
      options: []
      index: 999
      format: int32
      is_multi: false
    validateQuery:
      display_name: ""
      type: dropdown
      description: |-
        Determines how to validate the JQL query and treat the validation results. Supported values are:

         *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).
         *  `warn` Returns all errors as warnings.
         *  `none` No validation is performed.
         *  `true` *Deprecated* A legacy synonym for `strict`.
         *  `false` *Deprecated* A legacy synonym for `warn`.

        Note: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value.
      placeholder: ""
      required: false
      default: strict
      pattern: ""
      options:
      - strict
      - warn
      - none
      - "true"
      - "false"
      index: 999
      format: ""
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/search''}}{{''?jql='' + params.jql + ''&startAt='' + params.startAt
      + ''&maxResults='' + params.maxResults + ''&validateQuery='' + params.validateQuery
      + ''&fields='' + params.fields + ''&expand='' + params.expand + ''&properties=''
      + params.properties + ''&fieldsByKeys='' + params.fieldsByKeys}}'
  is_connection_optional: ""
- name: GetProjects
  display_name: Search Projects
  description: Get projects paginated
  enabled: true
  parameters:
    action:
      display_name: ""
      type: dropdown
      description: |-
        Filter results by projects for which the user can:

         *  `view` the project, meaning that they have one of the following permissions:

             *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
             *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
             *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
         *  `browse` the project, meaning that they have the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
         *  `edit` the project, meaning that they have one of the following permissions:

             *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
             *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
      placeholder: ""
      required: false
      default: view
      pattern: ""
      options:
      - view
      - browse
      - edit
      index: 999
      format: ""
      is_multi: false
    categoryId:
      display_name: ""
      type: integer
      description: The ID of the project's category. A complete list of category IDs
        is found using the [Get all project categories](#api-rest-api-3-projectCategory-get)
        operation.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: int64
      is_multi: false
    expand:
      display_name: ""
      type: string
      description: |-
        Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:

         *  `description` Returns the project description.
         *  `projectKeys` Returns all project keys associated with a project.
         *  `lead` Returns information about the project lead.
         *  `issueTypes` Returns all issue types associated with the project.
         *  `url` Returns the URL associated with the project.
         *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    id:
      display_name: ""
      type: array
      description: The project IDs to filter the results by. To include multiple IDs,
        provide an ampersand-separated list. For example, `id=10000&id=10001`. Up
        to 50 project IDs can be provided.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    maxResults:
      display_name: Max number of results
      type: integer
      description: The maximum number of items to return per page.
      placeholder: ""
      required: false
      default: "50"
      pattern: ""
      options: []
      index: 999
      format: int32
      is_multi: false
    orderBy:
      display_name: ""
      type: dropdown
      description: |-
        [Order](#ordering) the results by a field.

         *  `category` Sorts by project category. A complete list of category IDs is found using [Get all project categories](#api-rest-api-3-projectCategory-get).
         *  `issueCount` Sorts by the total number of issues in each project.
         *  `key` Sorts by project key.
         *  `lastIssueUpdatedTime` Sorts by the last issue update time.
         *  `name` Sorts by project name.
         *  `owner` Sorts by project lead.
         *  `archivedDate` EXPERIMENTAL. Sorts by project archived date.
         *  `deletedDate` EXPERIMENTAL. Sorts by project deleted date.
      placeholder: ""
      required: false
      default: key
      pattern: ""
      options:
      - category
      - -category
      - +category
      - key
      - -key
      - +key
      - name
      - -name
      - +name
      - owner
      - -owner
      - +owner
      - issueCount
      - -issueCount
      - +issueCount
      - lastIssueUpdatedDate
      - -lastIssueUpdatedDate
      - +lastIssueUpdatedDate
      - archivedDate
      - +archivedDate
      - -archivedDate
      - deletedDate
      - +deletedDate
      - -deletedDate
      index: 999
      format: ""
      is_multi: false
    properties:
      display_name: ""
      type: array
      description: EXPERIMENTAL. A list of project properties to return for the project.
        This parameter accepts a comma-separated list.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    propertyQuery:
      display_name: ""
      type: string
      description: EXPERIMENTAL. A query string used to search properties. The query
        string cannot be specified using a JSON object. For example, to search for
        the value of `nested` from `{"something":{"nested":1,"other":2}}` use `[thepropertykey].something.nested=1`.
        Note that the propertyQuery key is enclosed in square brackets to enable searching
        where the propertyQuery key includes dot (.) or equals (=) characters.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    query:
      display_name: ""
      type: string
      description: Filter the results using a literal string. Projects with a matching
        `key` or `name` are returned (case insensitive).
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    startAt:
      display_name: Start at
      type: integer
      description: The index of the first item to return in a page of results (page
        offset).
      placeholder: ""
      required: false
      default: "0"
      pattern: ""
      options: []
      index: 999
      format: int64
      is_multi: false
    status:
      display_name: ""
      type: array
      description: |-
        EXPERIMENTAL. Filter results by project status:

         *  `live` Search live projects.
         *  `archived` Search archived projects.
         *  `deleted` Search deleted projects, those in the recycle bin.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
    typeKey:
      display_name: ""
      type: string
      description: Orders results by the [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes).
        This parameter accepts a comma-separated list. Valid values are `business`,
        `service_desk`, and `software`.
      placeholder: ""
      required: false
      default: ""
      pattern: ""
      options: []
      index: 999
      format: ""
      is_multi: false
  action_to_run: http.get
  action_to_run_param_values:
    url: '{{(exists(connection.jira.REQUEST_URL) ? connection.jira.REQUEST_URL : ''https://your-domain.atlassian.net''),
      + ''/rest/api/3/project/search''}}{{''?startAt='' + params.startAt + ''&maxResults=''
      + params.maxResults + ''&orderBy='' + params.orderBy + ''&id='' + params.id
      + ''&query='' + params.query + ''&typeKey='' + params.typeKey + ''&categoryId=''
      + params.categoryId + ''&action='' + params.action + ''&expand='' + params.expand
      + ''&status='' + params.status + ''&properties='' + params.properties + ''&propertyQuery=''
      + params.propertyQuery}}'
  is_connection_optional: ""
