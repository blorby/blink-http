openapi: 3.0.0
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: https://www.datadoghq.com/support/
  description: Collection of all Datadog Public endpoints.
  title: Datadog API V2 Collection
  version: "1.0"
servers:
  - url: https://{subdomain}.{site}
    variables:
      site:
        default: datadoghq.com
        description: The regional site for our customers.
        enum:
          - datadoghq.com
          - us3.datadoghq.com
          - datadoghq.eu
          - ddog-gov.com
      subdomain:
        default: api
        description: The subdomain where the API is deployed.
  - url: '{protocol}://{name}'
    variables:
      name:
        default: api.datadoghq.com
        description: Full site DNS name.
      protocol:
        default: https
        description: The protocol for accessing the API.
  - url: https://{subdomain}.{site}
    variables:
      site:
        default: datadoghq.com
        description: Any Datadog deployment.
      subdomain:
        default: api
        description: The subdomain where the API is deployed.
security:
  - apiKeyAuth: []
    appKeyAuth: []
tags:
  - description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
    name: Dashboard Lists
  - description: Create, update, delete, and retrieve services which can be associated
      with incidents.
    name: Incident Services
  - description: Create, update, delete and retrieve teams which can be associated with
      incidents.
    name: Incident Teams
  - description: Manage incident response.
    name: Incidents
  - description: |-
      Manage your Datadog API and application keys. You need an API key and
      an application key for a user with the required permissions to interact
      with these endpoints. The full list of API and application keys can be
      seen on your [Datadog API page](https://app.datadoghq.com/account/settings#api).
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/account_management/api-app-keys/
    name: Key Management
  - description: Search your logs and send them to your Datadog platform over HTTP.
    name: Logs
  - description: |-
      Archives forward all the logs ingested to a cloud storage system.

      See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)
      for a list of the archives currently configured in our UI.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/logs/archives/
    name: Logs Archives
  - description: Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics)
      for your organization.
    externalDocs:
      description: Find out more at
      url: https://docs.datadoghq.com/logs/logs_to_metrics/
    name: Logs Metrics
  - description: |-
      The metrics endpoint allows you to:

      - Post metrics data so it can be graphed on Datadog’s dashboards
      - Query metrics from any time period
      - Modify tag configurations for metrics
      - View tags and volumes for metrics

      **Note**: A graph can only contain a set number of points
      and as the timeframe over which a metric is viewed increases,
      aggregation between points occurs to stay below that set number.

      The Post, Patch, and Delete `manage_tags` API methods can only be performed by
      a user who has the `Manage Tags for Metrics` permission.
    name: Metrics
  - description: The processes API allows you to query processes data for your organization.
    name: Processes
  - description: |-
      The Roles API is used to create and manage Datadog roles, what
      [global permissions](https://docs.datadoghq.com/account_management/rbac/)
      they grant, and which users belong to them.

      Permissions related to specific account assets can be granted to roles
      in the Datadog application without using this API. For example, granting
      read access on a specific log index to a role can be done in Datadog from the
      [Pipelines page](https://app.datadoghq.com/logs/pipelines).
    name: Roles
  - description: |-
      Detection rules for generating signals and listing of generated
      signals.
    name: Security Monitoring
  - description: Create, edit, and disable users.
    externalDocs:
      url: https://docs.datadoghq.com/account_management/users
    name: Users
paths:

  ##### v1

  /:
    get:
      description: Get information about Datadog IP ranges.
      operationId: GetIPRanges
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRanges'
          description: OK
      security: []
      servers:
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: The regional site for our customers.
              enum:
                - datadoghq.com
                - us3.datadoghq.com
                - datadoghq.eu
                - ddog-gov.com
            subdomain:
              default: ip-ranges
              description: The subdomain where the API is deployed.
        - url: '{protocol}://{name}'
          variables:
            name:
              default: ip-ranges.datadoghq.com
              description: Full site DNS name.
            protocol:
              default: https
              description: The protocol for accessing the API.
        - url: https://{subdomain}.datadoghq.com
          variables:
            subdomain:
              default: ip-ranges
              description: The subdomain where the API is deployed.
      summary: List IP Ranges
      tags:
        - IP Ranges
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/api_key:
    get:
      description: Get all API keys available for your account.
      operationId: ListAPIKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyListResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all API keys
      tags:
        - Key Management
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Creates an API key with a given name.
      operationId: CreateAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: DeleteAPIKey
        parameters:
          - name: key
            source: <RESPONSE_PATH>
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/api_key/{key}:
    delete:
      description: Delete a given API key.
      operationId: DeleteAPIKey
      parameters:
        - description: The specific API key you are working with.
          explode: false
          in: path
          name: key
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an API key
      tags:
        - Key Management
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a given API key.
      operationId: GetAPIKey
      parameters:
        - description: The specific API key you are working with.
          explode: false
          in: path
          name: key
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get API key
      tags:
        - Key Management
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit an API key name.
      operationId: UpdateAPIKey
      parameters:
        - description: The specific API key you are working with.
          explode: false
          in: path
          name: key
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Edit an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/application_key:
    get:
      description: Get all application keys available for your Datadog account.
      operationId: ListApplicationKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyListResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all application keys
      tags:
        - Key Management
      x-menu-order: 6
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Create an application key with a given name.
      operationId: CreateApplicationKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
      summary: Create an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        operationId: DeleteApplicationKey
        parameters:
          - name: key
            source: <RESPONSE_PATH>
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/application_key/{key}:
    delete:
      description: Delete a given application key.
      operationId: DeleteApplicationKey
      parameters:
        - description: The specific APP key you are working with.
          explode: false
          in: path
          name: key
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an application key
      tags:
        - Key Management
      x-menu-order: 10
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a given application key.
      operationId: GetApplicationKey
      parameters:
        - description: The specific APP key you are working with.
          explode: false
          in: path
          name: key
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get an application key
      tags:
        - Key Management
      x-menu-order: 8
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit an application key name.
      operationId: UpdateApplicationKey
      parameters:
        - description: The specific APP key you are working with.
          explode: false
          in: path
          name: key
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKey'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
      summary: Edit an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-menu-order: 9
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/check_run:
    post:
      description: |-
        Submit a list of Service Checks.

        **Note**: A valid API key is required.
      operationId: SubmitServiceCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChecks'
        description: Service Check request body.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAccepted'
          description: Payload accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Request timeout
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Payload too large
      security:
        - apiKeyAuth: []
      summary: Submit a Service Check
      tags:
        - Service Checks
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/daily_custom_reports:
    get:
      description: Get daily custom reports.
      operationId: GetDailyCustomReports
      parameters:
        - description: The number of files to return in the response. `[default=60]`.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: The identifier of the first page to return. This parameter is
            used for the pagination feature `[default=0]`.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: 'The direction to sort by: `[desc, asc]`.'
          explode: true
          in: query
          name: sort_dir
          required: false
          schema:
            $ref: '#/components/schemas/UsageSortDirection'
          style: form
        - description: 'The field to sort by: `[computed_on, size, start_date, end_date]`.'
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/UsageSort'
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCustomReportsResponse'
          description: OK
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get the list of available daily custom reports
      tags:
        - Usage Metering
      x-menu-order: 20
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/daily_custom_reports/{report_id}:
    get:
      description: Get specified daily custom reports.
      operationId: GetSpecifiedDailyCustomReports
      parameters:
        - description: Date of the report in the format `YYYY-MM-DD`.
          explode: false
          in: path
          name: report_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSpecifiedCustomReportsResponse'
          description: OK
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        "404":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get specified daily custom reports
      tags:
        - Usage Metering
      x-menu-order: 21
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/dashboard:
    delete:
      description: Delete dashboards using the specified IDs. If there are any failures,
        no dashboards will be deleted (partial success is not allowed).
      operationId: DeleteDashboards
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    - id: 123-abc-456
                      type: dashboard
                    - id: 789-def-101
                      type: dashboard
            schema:
              $ref: '#/components/schemas/DashboardBulkDeleteRequest'
        description: Delete dashboards request body.
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Dashboards Not Found
      summary: Delete dashboards
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
    get:
      description: |-
        Get all dashboards.

        **Note**: This query will only return custom created or cloned dashboards.
        This query will not return preset dashboards.
      operationId: ListDashboards
      parameters:
        - description: |-
            When `true`, this query only returns shared custom created
            or cloned dashboards.
          explode: true
          in: query
          name: filter[shared]
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardSummary'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Get all dashboards
      tags:
        - Dashboards
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    patch:
      description: Restore dashboards using the specified IDs. If there are any failures,
        no dashboards will be restored (partial success is not allowed).
      operationId: RestoreDashboards
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    - id: 123-abc-456
                      type: dashboard
                    - id: 789-def-101
                      type: dashboard
            schema:
              $ref: '#/components/schemas/DashboardRestoreRequest'
        description: Restore dashboards request body.
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Dashboards Not Found
      summary: Restore deleted dashboards
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
    post:
      description: |-
        Create a dashboard using the specified options. When defining queries in your widgets, take note of which queries should have the `as_count()` or `as_rate()` modifiers appended.
        Refer to the following [documentation](https://docs.datadoghq.com/developers/metrics/type_modifiers/?tab=count#in-application-modifiers) for more information on these modifiers.
      operationId: CreateDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Create a dashboard request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Create a new dashboard
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-given:
        dashboard:
          parameters:
            - file: dashboard_payload.json
              name: body
          step: there is a valid "dashboard" in the system
      x-menu-order: 1
      x-undo:
        operationId: DeleteDashboard
        parameters:
          - name: dashboard_id
            source: id
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/dashboard/lists/manual:
    get:
      description: Fetch all of your existing dashboard list definitions.
      operationId: ListDashboardLists
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListListResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all dashboard lists
      tags:
        - Dashboard Lists
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Create an empty dashboard list.
      operationId: CreateDashboardList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardList'
        description: Create a dashboard list request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: DeleteDashboardList
        parameters:
          - name: list_id
            source: id
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/dashboard/lists/manual/{list_id}:
    delete:
      description: Delete a dashboard list.
      operationId: DeleteDashboardList
      parameters:
        - description: ID of the dashboard list to delete.
          explode: false
          in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete a dashboard list
      tags:
        - Dashboard Lists
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Fetch an existing dashboard list's definition.
      operationId: GetDashboardList
      parameters:
        - description: ID of the dashboard list to fetch.
          explode: false
          in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get a dashboard list
      tags:
        - Dashboard Lists
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Update the name of a dashboard list.
      operationId: UpdateDashboardList
      parameters:
        - description: ID of the dashboard list to update.
          explode: false
          in: path
          name: list_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardList'
        description: Update a dashboard list request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/dashboard/{dashboard_id}:
    delete:
      description: Delete a dashboard using the specified ID.
      operationId: DeleteDashboard
      parameters:
        - description: The ID of the dashboard.
          explode: false
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDeleteResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Dashboards Not Found
      summary: Delete a dashboard
      tags:
        - Dashboards
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a dashboard using the specified ID.
      operationId: GetDashboard
      parameters:
        - description: The ID of the dashboard.
          explode: false
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Get a dashboard
      tags:
        - Dashboards
      x-menu-order: 7
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Update a dashboard using the specified ID.
      operationId: UpdateDashboard
      parameters:
        - description: The ID of the dashboard.
          explode: false
          in: path
          name: dashboard_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dashboard'
        description: Update Dashboard request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Update a dashboard
      tags:
        - Dashboards
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/downtime:
    get:
      description: Get all scheduled downtimes.
      operationId: ListDowntimes
      parameters:
        - description: Only return downtimes that are active when the request is made.
          explode: true
          in: query
          name: current_only
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Downtime'
                type: array
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all downtimes
      tags:
        - Downtimes
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Schedule a downtime.
      operationId: CreateDowntime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downtime'
        description: Schedule a downtime request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Schedule a downtime
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: TODO
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/downtime/cancel/by_scope:
    post:
      description: Delete all downtimes that match the scope of `X`.
      operationId: CancelDowntimesByScope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDowntimesByScopeRequest'
        description: Scope to cancel downtimes for.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CanceledDowntimesIds'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtimes not found
      summary: Cancel downtimes by scope
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/downtime/{downtime_id}:
    delete:
      description: Cancel a downtime.
      operationId: CancelDowntime
      parameters:
        - description: ID of the downtime to cancel.
          explode: false
          in: path
          name: downtime_id
          required: true
          schema:
            example: 123456
            format: int64
            type: integer
          style: simple
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
      summary: Cancel a downtime
      tags:
        - Downtimes
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get downtime detail by `downtime_id`.
      operationId: GetDowntime
      parameters:
        - description: ID of the downtime to fetch.
          explode: false
          in: path
          name: downtime_id
          required: true
          schema:
            example: 123456
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
      summary: Get a downtime
      tags:
        - Downtimes
      x-menu-order: 5
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Update a single downtime by `downtime_id`.
      operationId: UpdateDowntime
      parameters:
        - description: ID of the downtime to update.
          explode: false
          in: path
          name: downtime_id
          required: true
          schema:
            example: 123456
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downtime'
        description: Update a downtime request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
      summary: Update a downtime
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/events:
    get:
      description: |-
        The event stream can be queried and filtered by time, priority, sources and tags.

        **Notes**:
        - If the event you’re querying contains markdown formatting of any kind,
        you may see characters such as `%`,`\`,`n` in your output.

        - This endpoint returns a maximum of `1000` most recent results. To return additional results,
        identify the last timestamp of the last result and set that as the `end` query time to
        paginate the results. You can also use the page parameter to specify which set of `1000` results to return.
      operationId: ListEvents
      parameters:
        - description: POSIX timestamp.
          explode: true
          in: query
          name: start
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: POSIX timestamp.
          explode: true
          in: query
          name: end
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: Priority of your events, either `low` or `normal`.
          explode: true
          in: query
          name: priority
          required: false
          schema:
            $ref: '#/components/schemas/EventPriority'
          style: form
        - description: A comma separated string of sources.
          explode: true
          in: query
          name: sources
          required: false
          schema:
            type: string
          style: form
        - description: A comma separated list indicating what tags, if any, should be
            used to filter the list of monitors by scope.
          example: host:host0
          explode: true
          in: query
          name: tags
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Set unaggregated to `true` to return all events within the specified [`start`,`end`] timeframe.
            Otherwise if an event is aggregated to a parent event with a timestamp outside of the timeframe,
            it won't be available in the output. Aggregated events with `is_aggregate=true` in the response will still be returned unless exclude_aggregate is set to `true.`
          explode: true
          in: query
          name: unaggregated
          required: false
          schema:
            type: boolean
          style: form
        - description: |-
            Set `exclude_aggregate` to `true` to only return unaggregated events where `is_aggregate=false` in the response. If the `exclude_aggregate` parameter is set to `true`,
            then the unaggregated parameter is ignored and will be `true` by default.
          explode: true
          in: query
          name: exclude_aggregate
          required: false
          schema:
            type: boolean
          style: form
        - description: |-
            By default 1000 results are returned per request. Set page to the number of the page to return with `0` being the first page. The page parameter can only be used
            when either unaggregated or exclude_aggregate is set to `true.`
          explode: true
          in: query
          name: page
          required: false
          schema:
            format: int32
            maximum: 2147483647
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Query the event stream
      tags:
        - Events
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: |-
        This endpoint allows you to post events to the stream.
        Tag them, set priority and event aggregate them with other events.
      operationId: CreateEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateRequest'
        description: Event request object
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
      security:
        - apiKeyAuth: []
      summary: Post an event
      tags:
        - Events
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/events/{event_id}:
    get:
      description: |-
        This endpoint allows you to query for event details.

        **Note**: If the event you’re querying contains markdown formatting of any kind,
        you may see characters such as `%`,`\`,`n` in your output.
      operationId: GetEvent
      parameters:
        - description: The ID of the event.
          explode: false
          in: path
          name: event_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Get an event
      tags:
        - Events
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/graph/snapshot:
    get:
      description: |-
        Take graph snapshots.
        **Note**: When a snapshot is created, there is some delay before it is available.
      operationId: GetGraphSnapshot
      parameters:
        - description: The metric query.
          explode: true
          in: query
          name: metric_query
          required: false
          schema:
            type: string
          style: form
        - description: The POSIX timestamp of the start of the query.
          explode: true
          in: query
          name: start
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: The POSIX timestamp of the end of the query.
          explode: true
          in: query
          name: end
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: A query that adds event bands to the graph.
          explode: true
          in: query
          name: event_query
          required: false
          schema:
            type: string
          style: form
        - description: |-
            A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.
            The JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)
            and should be formatted to a single line then URL encoded.
          explode: true
          in: query
          name: graph_def
          required: false
          schema:
            type: string
          style: form
        - description: A title for the graph. If no title is specified, the graph does
            not have a title.
          explode: true
          in: query
          name: title
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphSnapshot'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Take graph snapshots
      tags:
        - Snapshots
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/host/{host_name}/mute:
    post:
      description: Mute a host.
      operationId: MuteHost
      parameters:
        - description: Name of the host to mute.
          explode: false
          in: path
          name: host_name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostMuteSettings'
        description: Mute a host request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostMuteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Mute a host
      tags:
        - Hosts
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/host/{host_name}/unmute:
    post:
      description: Unmutes a host. This endpoint takes no JSON arguments.
      operationId: UnmuteHost
      parameters:
        - description: Name of the host to unmute.
          explode: false
          in: path
          name: host_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostMuteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Unmute a host
      tags:
        - Hosts
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/hosts:
    get:
      description: |-
        This endpoint allows searching for hosts by name, alias, or tag.
        Hosts live within the past 3 hours are included by default.
        Retention is 7 days.
        Results are paginated with a max of 1000 results at a time.
      operationId: ListHosts
      parameters:
        - description: String to filter search results.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            type: string
          style: form
        - description: Sort hosts by this field.
          explode: true
          in: query
          name: sort_field
          required: false
          schema:
            type: string
          style: form
        - description: Direction of sort. Options include `asc` and `desc`.
          explode: true
          in: query
          name: sort_dir
          required: false
          schema:
            type: string
          style: form
        - description: Host result to start search from.
          explode: true
          in: query
          name: start
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Number of hosts to return. Max 1000.
          explode: true
          in: query
          name: count
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Number of seconds since UNIX epoch from which you want to search
            your hosts.
          explode: true
          in: query
          name: from
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Include information on the muted status of hosts and when the
            mute expires.
          explode: true
          in: query
          name: include_muted_hosts_data
          required: false
          schema:
            type: boolean
          style: form
        - description: Include additional metadata about the hosts (agent_version, machine,
            platform, processor, etc.).
          explode: true
          in: query
          name: include_hosts_metadata
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all hosts for your organization
      tags:
        - Hosts
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/hosts/totals:
    get:
      description: |-
        This endpoint returns the total number of active and up hosts in your Datadog account.
        Active means the host has reported in the past hour, and up means it has reported in the past two hours.
      operationId: GetHostTotals
      parameters:
        - description: Number of seconds from which you want to get total number of
            active hosts.
          explode: true
          in: query
          name: from
          required: false
          schema:
            format: int64
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTotals'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get the total number of active hosts
      tags:
        - Hosts
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/integration/aws:
    delete:
      description: Delete a Datadog-AWS integration matching the specified `account_id`
        and `role_name parameters`.
      operationId: DeleteAWSAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountDeleteRequest'
        description: AWS request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict Error
      summary: Delete an AWS integration
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
    get:
      description: List all Datadog-AWS integrations available in your Datadog organization.
      operationId: ListAWSAccounts
      parameters:
        - description: Only return AWS accounts that matches this `account_id`.
          explode: true
          in: query
          name: account_id
          required: false
          schema:
            type: string
          style: form
        - description: Only return AWS accounts that matches this role_name.
          explode: true
          in: query
          name: role_name
          required: false
          schema:
            type: string
          style: form
        - description: Only return AWS accounts that matches this `access_key_id`.
          explode: true
          in: query
          name: access_key_id
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: List all AWS integrations
      tags:
        - AWS Integration
      x-menu-order: 6
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: |-
        Create a Datadog-Amazon Web Services integration.
        Using the `POST` method updates your integration configuration
        by adding your new configuration to the existing one in your Datadog organization.
        A unique AWS Account ID for role based authentication.
      operationId: CreateAWSAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: AWS Request Object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict Error
      summary: Create an AWS integration
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-menu-order: 8
      x-undo:
        operationId: DeleteAWSAccount
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: Update a Datadog-Amazon Web Services integration.
      operationId: UpdateAWSAccount
      parameters:
        - description: Only return AWS accounts that matches this `account_id`.
          explode: true
          in: query
          name: account_id
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Only return AWS accounts that match this `role_name`.
            Required if `account_id` is specified.
          explode: true
          in: query
          name: role_name
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Only return AWS accounts that matches this `access_key_id`.
            Required if none of the other two options are specified.
          explode: true
          in: query
          name: access_key_id
          required: false
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: AWS request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict Error
      summary: Update an AWS integration
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-menu-order: 9
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/aws/available_namespace_rules:
    get:
      description: List all namespace rules for a given Datadog-AWS integration. This
        endpoint takes no arguments.
      operationId: ListAvailableAWSNamespaces
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  value:
                    - namespace1
                    - namespace2
                    - namespace3
                items:
                  type: string
                type: array
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: List namespace rules
      tags:
        - AWS Integration
      x-menu-order: 5
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/integration/aws/filtering:
    delete:
      description: Delete a tag filtering entry.
      operationId: DeleteAWSTagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSTagFilterDeleteRequest'
        description: Delete a tag filtering entry for a given AWS account and `dd-aws`
          namespace.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Delete a tag filtering entry
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
    get:
      description: Get all AWS tag filters.
      operationId: ListAWSTagFilters
      parameters:
        - description: Only return AWS filters that matches this `account_id`.
          explode: true
          in: query
          name: account_id
          required: true
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSTagFilterListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Get all AWS tag filters
      tags:
        - AWS Integration
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Set an AWS tag filter.
      operationId: CreateAWSTagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSTagFilterCreateRequest'
        description: |-
          Set an AWS tag filter using an `aws_account_identifier`, `namespace`, and filtering string.
          Namespace options are `application_elb`, `elb`, `lambda`, `network_elb`, `rds`, `sqs`, and `custom`.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Set an AWS tag filter
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: DeleteAWSTagFilter
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/aws/generate_new_external_id:
    put:
      description: Generate a new AWS external ID for a given AWS account ID and role
        name pair.
      operationId: CreateNewAWSExternalID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: |-
          Your Datadog role delegation name.
          For more information about your AWS account Role name,
          see the [Datadog AWS integration configuration info](https://docs.datadoghq.com/integrations/amazon_web_services/#setup).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Generate a new external ID
      tags:
        - AWS Integration
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/aws/logs:
    delete:
      description: Delete a Datadog-AWS logs configuration by removing the specific
        Lambda ARN associated with a given AWS account.
      operationId: DeleteAWSLambdaARN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: Delete AWS Lambda ARN request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Delete an AWS Logs integration
      tags:
        - AWS Logs Integration
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
    get:
      description: List all Datadog-AWS Logs integrations configured in your Datadog
        account.
      operationId: ListAWSLogsIntegrations
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  - account_id: "123456789101"
                    lambdas: []
                    services:
                      - s3
                      - elb
                      - elbv2
                      - cloudfront
                      - redshift
                      - lambda
                items:
                  $ref: '#/components/schemas/AWSLogsListResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: List all AWS Logs integrations
      tags:
        - AWS Logs Integration
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Attach the Lambda ARN of the Lambda created for the Datadog-AWS
        log collection to your AWS account ID to enable log collection.
      operationId: CreateAWSLambdaARN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: AWS Log Lambda Async request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Add AWS Log Lambda ARN
      tags:
        - AWS Logs Integration
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: DeleteAWSLambdaARN
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/aws/logs/check_async:
    post:
      description: |-
        Test if permissions are present to add a log-forwarding triggers for the given services and AWS account. The input
        is the same as for Enable an AWS service log collection. Subsequent requests will always repeat the above, so this
        endpoint can be polled intermittently instead of blocking.

        - Returns a status of 'created' when it's checking if the Lambda exists in the account.
        - Returns a status of 'waiting' while checking.
        - Returns a status of 'checked and ok' if the Lambda exists.
        - Returns a status of 'error' if the Lambda does not exist.
      operationId: CheckAWSLogsLambdaAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: Check AWS Log Lambda Async request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLogsAsyncResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Check that an AWS Lambda Function exists
      tags:
        - AWS Logs Integration
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/aws/logs/services:
    get:
      description: Get the list of current AWS services that Datadog offers automatic
        log collection. Use returned service IDs with the services parameter for the
        Enable an AWS service log collection API endpoint.
      operationId: ListAWSLogsServices
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  - id: s3
                    label: S3 Access Logs
                  - id: elb
                    label: Classic ELB Access Logs
                  - id: elbv2
                    label: Application ELB Access Logs
                  - id: cloudfront
                    label: CloudFront Access Logs
                  - id: redshift
                    label: Redshift Logs
                  - id: lambda
                    label: Lambda Cloudwatch Logs
                items:
                  $ref: '#/components/schemas/AWSLogsListServicesResponse'
                type: array
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Get list of AWS log ready services
      tags:
        - AWS Logs Integration
      x-menu-order: 4
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Enable automatic log collection for a list of services. This should
        be run after running `CreateAWSLambdaARN` to save the configuration.
      operationId: EnableAWSLogServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSLogsServicesRequest'
        description: Enable AWS Log Services request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Enable an AWS Logs integration
      tags:
        - AWS Logs Integration
      x-codegen-request-body-name: body
      x-menu-order: 5
      x-undo:
        operationId: TODO
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/aws/logs/services_async:
    post:
      description: |-
        Test if permissions are present to add log-forwarding triggers for the
        given services and AWS account. Input is the same as for `EnableAWSLogServices`.
        Done async, so can be repeatedly polled in a non-blocking fashion until
        the async request completes.

        - Returns a status of `created` when it's checking if the permissions exists
          in the AWS account.
        - Returns a status of `waiting` while checking.
        - Returns a status of `checked and ok` if the Lambda exists.
        - Returns a status of `error` if the Lambda does not exist.
      operationId: CheckAWSLogsServicesAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSLogsServicesRequest'
        description: Check AWS Logs Async Services request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLogsAsyncResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Check permissions for log services
      tags:
        - AWS Logs Integration
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/azure:
    delete:
      description: Delete a given Datadog-Azure integration from your Datadog account.
      operationId: DeleteAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Delete a given Datadog-Azure integration request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Delete an Azure integration
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
    get:
      description: List all Datadog-Azure integrations configured in your Datadog
        account.
      operationId: ListAzureIntegration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureAccountListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: List all Azure integrations
      tags:
        - Azure Integration
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: |-
        Create a Datadog-Azure integration.

        Using the `POST` method updates your integration configuration by adding your new
        configuration to the existing one in your Datadog organization.

        Using the `PUT` method updates your integration configuration by replacing your
        current configuration with the new one sent to your Datadog organization.
      operationId: CreateAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Create a Datadog-Azure integration for your Datadog account request
          body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Create an Azure integration
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: DeleteAzureIntegration
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        Update a Datadog-Azure integration. Requires an existing `tenant_name` and `client_id`.
        Any other fields supplied will overwrite existing values. To overwrite `tenant_name` or `client_id`,
        use `new_tenant_name` and `new_client_id`. To leave a field unchanged, do not supply that field in the payload.
      operationId: UpdateAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Update a Datadog-Azure integration request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Update an Azure integration
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/azure/host_filters:
    post:
      description: Update the defined list of host filters for a given Datadog-Azure
        integration.
      operationId: UpdateAzureHostFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Update a Datadog-Azure integration's host filters request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Update Azure integration host filters
      tags:
        - Azure Integration
      x-codegen-request-body-name: body
      x-menu-order: 5
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/gcp:
    delete:
      description: Delete a given Datadog-GCP integration.
      operationId: DeleteGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Delete a given Datadog-GCP integration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Delete a GCP integration
      tags:
        - GCP Integration
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
    get:
      description: List all Datadog-GCP integrations configured in your Datadog account.
      operationId: ListGCPIntegration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPAccountListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: List all GCP integrations
      tags:
        - GCP Integration
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Create a Datadog-GCP integration.
      operationId: CreateGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Create a Datadog-GCP integration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Create a GCP integration
      tags:
        - GCP Integration
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: DeleteGCPIntegration
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        Update a Datadog-GCP integrations host_filters and/or auto-mute.
        Requires a `project_id` and `client_email`, however these fields cannot be updated.
        If you need to update these fields, delete and use the create (`POST`) endpoint.
        The unspecified fields will keep their original values.
      operationId: UpdateGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Update a Datadog-GCP integration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Update a GCP integration
      tags:
        - GCP Integration
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/pagerduty/configuration/services:
    post:
      description: Create a new service object in the PagerDuty integration.
      operationId: CreatePagerDutyIntegrationService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagerDutyService'
        description: Create a new service object request body.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagerDutyServiceName'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Create a new service object
      tags:
        - PagerDuty Integration
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        operationId: DeletePagerDutyIntegrationService
        parameters:
          - name: service_name
            source: service_name
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/pagerduty/configuration/services/{service_name}:
    delete:
      description: Delete a single service object in the Datadog-PagerDuty integration.
      operationId: DeletePagerDutyIntegrationService
      parameters:
        - description: The service name
          explode: false
          in: path
          name: service_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Delete a single service object
      tags:
        - PagerDuty Integration
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get service name in the Datadog-PagerDuty integration.
      operationId: GetPagerDutyIntegrationService
      parameters:
        - description: The service name.
          explode: false
          in: path
          name: service_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagerDutyServiceName'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Get a single service object
      tags:
        - PagerDuty Integration
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Update a single service object in the Datadog-PagerDuty integration.
      operationId: UpdatePagerDutyIntegrationService
      parameters:
        - description: The service name
          explode: false
          in: path
          name: service_name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagerDutyServiceKey'
        description: Update an existing service object request body.
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Update a single service object
      tags:
        - PagerDuty Integration
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels:
    get:
      description: Get a list of all channels configured for your Datadog-Slack integration.
      operationId: GetSlackIntegrationChannels
      parameters:
        - description: Your Slack account name.
          explode: false
          in: path
          name: account_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannels'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Get all channels in a Slack integration
      tags:
        - Slack Integration
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Add a channel to your Datadog-Slack integration.
      operationId: CreateSlackIntegrationChannel
      parameters:
        - description: Your Slack account name.
          explode: false
          in: path
          name: account_name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackIntegrationChannel'
        description: Payload describing Slack channel to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Create a Slack integration channel
      tags:
        - Slack Integration
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels/{channel_name}:
    delete:
      description: Remove a channel from your Datadog-Slack integration.
      operationId: RemoveSlackIntegrationChannel
      parameters:
        - description: Your Slack account name.
          explode: false
          in: path
          name: account_name
          required: true
          schema:
            type: string
          style: simple
        - description: The name of the Slack channel being operated on.
          explode: false
          in: path
          name: channel_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: The channel was removed successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Remove a Slack integration channel
      tags:
        - Slack Integration
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a channel configured for your Datadog-Slack integration.
      operationId: GetSlackIntegrationChannel
      parameters:
        - description: Your Slack account name.
          explode: false
          in: path
          name: account_name
          required: true
          schema:
            type: string
          style: simple
        - description: The name of the Slack channel being operated on.
          explode: false
          in: path
          name: channel_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Get a Slack integration channel
      tags:
        - Slack Integration
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json
    patch:
      description: Update a channel used in your Datadog-Slack integration.
      operationId: UpdateSlackIntegrationChannel
      parameters:
        - description: Your Slack account name.
          explode: false
          in: path
          name: account_name
          required: true
          schema:
            type: string
          style: simple
        - description: The name of the Slack channel being operated on.
          explode: false
          in: path
          name: channel_name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackIntegrationChannel'
        description: Payload describing fields and values to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
      summary: Update a Slack integration channel
      tags:
        - Slack Integration
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/logs-queries/list:
    post:
      description: |-
        List endpoint returns logs that match a log search query.
        [Results are paginated][1].

        **If you are considering archiving logs for your organization,
        consider use of the Datadog archive capabilities instead of the log list API.
        See [Datadog Logs Archive documentation][2].**

        [1]: /logs/guide/collect-multiple-logs-with-pagination
        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsListRequest'
        description: Logs filter
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Search logs
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/logs/config/index-order:
    get:
      description: Get the current order of your log indexes. This endpoint takes
        no JSON arguments.
      operationId: GetLogsIndexOrder
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexesOrder'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get indexes order
      tags:
        - Logs Indexes
      x-menu-order: 5
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: |-
        This endpoint updates the index order of your organization.
        It returns the index order object passed in the request body when the request is successful.
      operationId: UpdateLogsIndexOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndexesOrder'
        description: Object containing the new ordered list of index names
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexesOrder'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Update indexes order
      tags:
        - Logs Indexes
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/logs/config/indexes:
    get:
      description: |-
        The Index object describes the configuration of a log index.
        This endpoint returns an array of the `LogIndex` objects of your organization.
      operationId: ListLogIndexes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexListResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all indexes
      tags:
        - Logs Indexes
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Creates a new index. Returns the Index object passed in the request
        body when the request is successful.
      operationId: CreateLogsIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndex'
        description: Object containing the new index.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Invalid Parameter Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create an index
      tags:
        - Logs Indexes
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: TODO
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/logs/config/indexes/{name}:
    get:
      description: Get one log index from your organization. This endpoint takes no
        JSON arguments.
      operationId: GetLogsIndex
      parameters:
        - description: Name of the log index.
          explode: false
          in: path
          name: name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Not Found
      summary: Get an index
      tags:
        - Logs Indexes
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: |-
        Update an index as identified by its name.
        Returns the Index object passed in the request body when the request is successful.

        Using the `PUT` method updates your index’s configuration by **replacing**
        your current configuration with the new one sent to your Datadog organization.
      operationId: UpdateLogsIndex
      parameters:
        - description: Name of the log index.
          explode: false
          in: path
          name: name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndexUpdateRequest'
        description: Object containing the new `LogsIndexUpdateRequest`.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Invalid Parameter Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Too Many Requests
      summary: Update an index
      tags:
        - Logs Indexes
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/logs/config/pipeline-order:
    get:
      description: |-
        Get the current order of your pipelines.
        This endpoint takes no JSON arguments.
      operationId: GetLogsPipelineOrder
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipelinesOrder'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get pipeline order
      tags:
        - Logs Pipelines
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: |-
        Update the order of your pipelines. Since logs are processed sequentially, reordering a pipeline may change
        the structure and content of the data processed by other pipelines and their processors.

        **Note**: Using the `PUT` method updates your pipeline order by replacing your current order
        with the new one sent to your Datadog organization.
      operationId: UpdateLogsPipelineOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsPipelinesOrder'
        description: Object containing the new ordered list of pipeline IDs.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipelinesOrder'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Unprocessable Entity
      summary: Update pipeline order
      tags:
        - Logs Pipelines
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/logs/config/pipelines:
    get:
      description: |-
        Get all pipelines from your organization.
        This endpoint takes no JSON arguments.
      operationId: ListLogsPipelines
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipelineList'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all pipelines
      tags:
        - Logs Pipelines
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Create a pipeline in your organization.
      operationId: CreateLogsPipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsPipeline'
        description: Definition of the new pipeline.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create a pipeline
      tags:
        - Logs Pipelines
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        operationId: DeleteLogsPipeline
        parameters:
          - name: pipeline_id
            source: id
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/logs/config/pipelines/{pipeline_id}:
    delete:
      description: |-
        Delete a given pipeline from your organization.
        This endpoint takes no JSON arguments.
      operationId: DeleteLogsPipeline
      parameters:
        - description: ID of the pipeline to delete.
          explode: false
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Delete a pipeline
      tags:
        - Logs Pipelines
      x-menu-order: 6
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: |-
        Get a specific pipeline from your organization.
        This endpoint takes no JSON arguments.
      operationId: GetLogsPipeline
      parameters:
        - description: ID of the pipeline to get.
          explode: false
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get a pipeline
      tags:
        - Logs Pipelines
      x-menu-order: 5
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: |-
        Update a given pipeline configuration to change it’s processors or their order.

        **Note**: Using this method updates your pipeline configuration by **replacing**
        your current configuration with the new one sent to your Datadog organization.
      operationId: UpdateLogsPipeline
      parameters:
        - description: ID of the pipeline to delete.
          explode: false
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsPipeline'
        description: New definition of the pipeline.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsPipeline'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Update a pipeline
      tags:
        - Logs Pipelines
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/metrics:
    get:
      description: Get the list of actively reporting metrics from a given time until
        now.
      operationId: ListActiveMetrics
      parameters:
        - description: Seconds since the Unix epoch.
          explode: true
          in: query
          name: from
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: |-
            Hostname for filtering the list of metrics returned.
            If set, metrics retrieved are those with the corresponding hostname tag.
          explode: true
          in: query
          name: host
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.
            Cannot be combined with other filters.
          example: env IN (staging,test) AND service:web
          explode: true
          in: query
          name: tag_filter
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get active metrics list
      tags:
        - Metrics
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/metrics/{metric_name}:
    get:
      description: Get metadata about a specific metric.
      operationId: GetMetricMetadata
      parameters:
        - description: Name of the metric for which to get metadata.
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMetadata'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get metric metadata
      tags:
        - Metrics
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit metadata of a specific metric. Find out more about [supported
        types](https://docs.datadoghq.com/developers/metrics).
      operationId: UpdateMetricMetadata
      parameters:
        - description: Name of the metric for which to edit metadata.
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricMetadata'
        description: New metadata.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMetadata'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Edit metric metadata
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/monitor:
    get:
      description: Get details about the specified monitor from your organization.
      operationId: ListMonitors
      parameters:
        - description: |-
            When specified, shows additional information about the group states.
            Choose one or more from `all`, `alert`, `warn`, and `no data`.
          explode: true
          in: query
          name: group_states
          required: false
          schema:
            example: alert
            type: string
          style: form
        - description: A string to filter monitors by name.
          explode: true
          in: query
          name: name
          required: false
          schema:
            type: string
          style: form
        - description: |-
            A comma separated list indicating what tags, if any, should be used to filter the list of monitors by scope.
            For example, `host:host0`.
          explode: true
          in: query
          name: tags
          required: false
          schema:
            example: host:host0
            type: string
          style: form
        - description: |-
            A comma separated list indicating what service and/or custom tags, if any, should be used to filter the list of monitors.
            Tags created in the Datadog UI automatically have the service key prepended. For example, `service:my-app`.
          explode: true
          in: query
          name: monitor_tags
          required: false
          schema:
            example: service:my-app
            type: string
          style: form
        - description: If this argument is set to true, then the returned data includes
            all current downtimes for each monitor.
          explode: true
          in: query
          name: with_downtimes
          required: false
          schema:
            type: boolean
          style: form
        - description: Monitor ID offset.
          explode: true
          in: query
          name: id_offset
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: The page to start paginating from. If this argument is not specified,
            the request returns all monitors without pagination.
          explode: true
          in: query
          name: page
          required: false
          schema:
            example: 0
            format: int64
            type: integer
          style: form
        - description: The number of monitors to return per page. If the page argument
            is not specified, the default behavior returns all monitors without a `page_size`
            limit. However, if page is specified and `page_size` is not, the argument
            defaults to 100.
          explode: true
          in: query
          name: page_size
          required: false
          schema:
            example: 20
            format: int32
            maximum: 1000
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Monitor'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all monitor details
      tags:
        - Monitors
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: |-
        Create a monitor using the specified options.

        #### Monitor Types

        The type of monitor chosen from:

        - anomaly: `query alert`
        - APM: `query alert` or `trace-analytics alert`
        - composite: `composite`
        - custom: `service check`
        - event: `event alert`
        - forecast: `query alert`
        - host: `service check`
        - integration: `query alert` or `service check`
        - live process: `process alert`
        - logs: `log alert`
        - metric: `metric alert`
        - network: `service check`
        - outlier: `query alert`
        - process: `service check`
        - rum: `rum alert`
        - SLO: `slo alert`
        - watchdog: `event alert`
        - event-v2: `event-v2 alert`

        #### Query Types

        **Metric Alert Query**

        Example: `time_aggr(time_window):space_aggr:metric{tags} [by {key}] operator #`

        - `time_aggr`: avg, sum, max, min, change, or pct_change
        - `time_window`: `last_#m` (with `#` between 1 and 2880 depending on the monitor type) or `last_#h`(with `#` between 1 and 48 depending on the monitor type), or `last_1d`
        - `space_aggr`: avg, sum, min, or max
        - `tags`: one or more tags (comma-separated), or *
        - `key`: a 'key' in key:value tag syntax; defines a separate alert for each tag in the group (multi-alert)
        - `operator`: <, <=, >, >=, ==, or !=
        - `#`: an integer or decimal number used to set the threshold

        If you are using the `_change_` or `_pct_change_` time aggregator, instead use `change_aggr(time_aggr(time_window),
        timeshift):space_aggr:metric{tags} [by {key}] operator #` with:

        - `change_aggr` change, pct_change
        - `time_aggr` avg, sum, max, min [Learn more](https://docs.datadoghq.com/monitors/monitor_types/#define-the-conditions)
        - `time_window` last\_#m (between 1 and 2880 depending on the monitor type), last\_#h (between 1 and 48 depending on the monitor type), or last_#d (1 or 2)
        - `timeshift` #m_ago (5, 10, 15, or 30), #h_ago (1, 2, or 4), or 1d_ago

        Use this to create an outlier monitor using the following query:
        `avg(last_30m):outliers(avg:system.cpu.user{role:es-events-data} by {host}, 'dbscan', 7) > 0`

        **Service Check Query**

        Example: `"check".over(tags).last(count).by(group).count_by_status()`

        - **`check`** name of the check, e.g. `datadog.agent.up`
        - **`tags`** one or more quoted tags (comma-separated), or "*". e.g.: `.over("env:prod", "role:db")`; **`over`** cannot be blank.
        - **`count`** must be at greater than or equal to your max threshold (defined in the `options`). It is limited to 100.
        For example, if you've specified to notify on 1 critical, 3 ok, and 2 warn statuses, `count` should be at least 3.
        - **`group`** must be specified for check monitors. Per-check grouping is already explicitly known for some service checks.
        For example, Postgres integration monitors are tagged by `db`, `host`, and `port`, and Network monitors by `host`, `instance`, and `url`. See [Service Checks](https://docs.datadoghq.com/api/latest/service-checks/) documentation for more information.

        **Event Alert Query**

        Example: `events('sources:nagios status:error,warning priority:normal tags: "string query"').rollup("count").last("1h")"`

        - **`event`**, the event query string:
        - **`string_query`** free text query to match against event title and text.
        - **`sources`** event sources (comma-separated).
        - **`status`** event statuses (comma-separated). Valid options: error, warn, and info.
        - **`priority`** event priorities (comma-separated). Valid options: low, normal, all.
        - **`host`** event reporting host (comma-separated).
        - **`tags`** event tags (comma-separated).
        - **`excluded_tags`** excluded event tags (comma-separated).
        - **`rollup`** the stats roll-up method. `count` is the only supported method now.
        - **`last`** the timeframe to roll up the counts. Examples: 45m, 4h. Supported timeframes: m, h and d. This value should not exceed 48 hours.

        **NOTE** Only available on US1 and EU.

        **Event V2 Alert Query**

        Example: `events(query).rollup(rollup_method[, measure]).last(time_window) operator #`

        - **`query`** The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).
        - **`rollup_method`** The stats roll-up method - supports `count`, `avg` and `cardinality`.
        - **`measure`** For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.
        - **`time_window`** #m (between 1 and 2880), #h (between 1 and 48).
        - **`operator`** `<`, `<=`, `>`, `>=`, `==`, or `!=`.
        - **`#`** an integer or decimal number used to set the threshold.

        **NOTE** Only available on US1-FED, US3, and in closed beta on EU and US1.

        **Process Alert Query**

        Example: `processes(search).over(tags).rollup('count').last(timeframe) operator #`

        - **`search`** free text search string for querying processes.
        Matching processes match results on the [Live Processes](https://docs.datadoghq.com/infrastructure/process/?tab=linuxwindows) page.
        - **`tags`** one or more tags (comma-separated)
        - **`timeframe`** the timeframe to roll up the counts. Examples: 10m, 4h. Supported timeframes: s, m, h and d
        - **`operator`** <, <=, >, >=, ==, or !=
        - **`#`** an integer or decimal number used to set the threshold

        **Logs Alert Query**

        Example: `logs(query).index(index_name).rollup(rollup_method[, measure]).last(time_window) operator #`

        - **`query`** The search query - following the [Log search syntax](https://docs.datadoghq.com/logs/search_syntax/).
        - **`index_name`** For multi-index organizations, the log index in which the request is performed.
        - **`rollup_method`** The stats roll-up method - supports `count`, `avg` and `cardinality`.
        - **`measure`** For `avg` and cardinality `rollup_method` - specify the measure or the facet name you want to use.
        - **`time_window`** #m (between 1 and 2880), #h (between 1 and 48).
        - **`operator`** `<`, `<=`, `>`, `>=`, `==`, or `!=`.
        - **`#`** an integer or decimal number used to set the threshold.

        **Composite Query**

        Example: `12345 && 67890`, where `12345` and `67890` are the IDs of non-composite monitors

        * **`name`** [*required*, *default* = **dynamic, based on query**]: The name of the alert.
        * **`message`** [*required*, *default* = **dynamic, based on query**]: A message to include with notifications for this monitor.
        Email notifications can be sent to specific users by using the same '@username' notation as events.
        * **`tags`** [*optional*, *default* = **empty list**]: A list of tags to associate with your monitor.
        When getting all monitor details via the API, use the `monitor_tags` argument to filter results by these tags.
        It is only available via the API and isn't visible or editable in the Datadog UI.

        **SLO Alert Query**

        Example: `error_budget("slo_id").over("time_window") operator #`

        - **`slo_id`**: The alphanumeric SLO ID of the SLO you are configuring the alert for.
        - **`time_window`**: The time window of the SLO target you wish to alert on. Valid options: `7d`, `30d`, `90d`.
        - **`operator`**: `>=` or `>`
      operationId: CreateMonitor
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  message: You may need to add web hosts if this is consistently high.
                  name: Bytes received on host0
                  options:
                    no_data_timeframe: 20
                    notify_no_data: true
                  query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
                  tags:
                    - app:webserver
                    - frontend
                  type: metric alert
            schema:
              $ref: '#/components/schemas/Monitor'
        description: Create a monitor request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create a monitor
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        operationId: DeleteMonitor
        parameters:
          - name: monitor_id
            source: id
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/monitor/can_delete:
    get:
      description: Check if the given monitors can be deleted.
      operationId: CheckCanDeleteMonitor
      parameters:
        - description: The IDs of the monitor to check.
          explode: true
          in: query
          name: monitor_ids
          required: true
          schema:
            items:
              format: int64
              type: integer
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteMonitorResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteMonitorResponse'
          description: Deletion conflict error
      summary: Check if a monitor can be deleted
      tags:
        - Monitors
      x-menu-order: 6
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/monitor/groups/search:
    get:
      description: Search and filter your monitor groups details.
      operationId: SearchMonitorGroups
      parameters:
        - description: |-
            After entering a search query in your [Manage Monitor page][1] use the query parameter value in the
            URL of the page as value for this parameter. Consult the dedicated [manage monitor documentation][2]
            page to learn more.

            The query can contain any number of space-separated monitor attributes, for instance `query="type:metric status:alert"`.

            [1]: https://app.datadoghq.com/monitors/manage
            [2]: /monitors/manage_monitor/#find-the-monitors
          explode: true
          in: query
          name: query
          required: false
          schema:
            type: string
          style: form
        - description: Page to start paginating from.
          explode: true
          in: query
          name: page
          required: false
          schema:
            default: 0
            format: int64
            type: integer
          style: form
        - description: Number of monitors to return per page.
          explode: true
          in: query
          name: per_page
          required: false
          schema:
            default: 30
            format: int64
            type: integer
          style: form
        - description: |-
            String for sort order, composed of field and sort order separate by a comma, e.g. `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:

            * `name`
            * `status`
            * `tags`
          explode: true
          in: query
          name: sort
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorGroupSearchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Monitors group search
      tags:
        - Monitors
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/monitor/search:
    get:
      description: Search and filter your monitors details.
      operationId: SearchMonitors
      parameters:
        - description: |-
            After entering a search query in your Manage Monitor page use the query parameter value in the
            URL of the page as value for this parameter.

            The query can contain any number of space-separated monitor attributes, for instance `query="type:metric status:alert"`.
          explode: true
          in: query
          name: query
          required: false
          schema:
            type: string
          style: form
        - description: Page to start paginating from.
          explode: true
          in: query
          name: page
          required: false
          schema:
            default: 0
            format: int64
            type: integer
          style: form
        - description: Number of monitors to return per page.
          explode: true
          in: query
          name: per_page
          required: false
          schema:
            default: 30
            format: int64
            type: integer
          style: form
        - description: |-
            String for sort order, composed of field and sort order separate by a comma, e.g. `name,asc`. Supported sort directions: `asc`, `desc`. Supported fields:

            * `name`
            * `status`
            * `tags`
          explode: true
          in: query
          name: sort
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorSearchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Monitors search
      tags:
        - Monitors
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/monitor/validate:
    post:
      description: Validate the monitor provided in the request.
      operationId: ValidateMonitor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        description: Monitor request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid JSON
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Validate a monitor
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/monitor/{monitor_id}:
    delete:
      description: Delete the specified monitor
      operationId: DeleteMonitor
      parameters:
        - description: The ID of the monitor.
          explode: false
          in: path
          name: monitor_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: Delete the monitor even if it's referenced by other resources
            (e.g. SLO, composite monitor).
          explode: true
          in: query
          name: force
          required: false
          schema:
            example: "false"
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedMonitor'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item not found error
      summary: Delete a monitor
      tags:
        - Monitors
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get details about the specified monitor from your organization.
      operationId: GetMonitor
      parameters:
        - description: The ID of the monitor
          explode: false
          in: path
          name: monitor_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: When specified, shows additional information about the group
            states. Choose one or more from `all`, `alert`, `warn`, and `no data`.
          explode: true
          in: query
          name: group_states
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Monitor Not Found error
      summary: Get a monitor's details
      tags:
        - Monitors
      x-menu-order: 4
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit the specified monitor.
      operationId: UpdateMonitor
      parameters:
        - description: The ID of the monitor.
          explode: false
          in: path
          name: monitor_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorUpdateRequest'
        description: Edit a monitor request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Monitor Not Found error
      summary: Edit a monitor
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/monitor/{monitor_id}/downtimes:
    get:
      description: Get all downtimes for the specified monitor
      operationId: ListMonitorDowntimes
      parameters:
        - description: The id of the monitor
          explode: false
          in: path
          name: monitor_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Downtime'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Monitor Not Found error
      summary: Get all downtimes for a monitor
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/monthly_custom_reports:
    get:
      description: Get monthly custom reports.
      operationId: GetMonthlyCustomReports
      parameters:
        - description: The number of files to return in the response `[default=60].`
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: The identifier of the first page to return. This parameter is
            used for the pagination feature `[default=0]`.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: 'The direction to sort by: `[desc, asc]`.'
          explode: true
          in: query
          name: sort_dir
          required: false
          schema:
            $ref: '#/components/schemas/UsageSortDirection'
          style: form
        - description: 'The field to sort by: `[computed_on, size, start_date, end_date]`.'
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/UsageSort'
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCustomReportsResponse'
          description: OK
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get the list of available monthly custom reports
      tags:
        - Usage Metering
      x-menu-order: 22
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/monthly_custom_reports/{report_id}:
    get:
      description: Get specified monthly custom reports.
      operationId: GetSpecifiedMonthlyCustomReports
      parameters:
        - description: Date of the report in the format `YYYY-MM-DD`.
          explode: false
          in: path
          name: report_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSpecifiedCustomReportsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        "404":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get specified monthly custom reports
      tags:
        - Usage Metering
      x-menu-order: 23
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/notebooks:
    get:
      description: |-
        Get all notebooks. This can also be used to search for notebooks with a particular `query` in the notebook
        `name` or author `handle`.
      operationId: ListNotebooks
      parameters:
        - description: Return notebooks created by the given `author_handle`.
          explode: true
          in: query
          name: author_handle
          required: false
          schema:
            example: test@datadoghq.com
            type: string
          style: form
        - description: Return notebooks not created by the given `author_handle`.
          explode: true
          in: query
          name: exclude_author_handle
          required: false
          schema:
            example: test@datadoghq.com
            type: string
          style: form
        - description: The index of the first notebook you want returned.
          explode: true
          in: query
          name: start
          required: false
          schema:
            example: 0
            format: int64
            type: integer
          style: form
        - description: The number of notebooks to be returned.
          explode: true
          in: query
          name: count
          required: false
          schema:
            example: 5
            format: int64
            type: integer
          style: form
        - description: Sort by field `modified` or `name`.
          explode: true
          in: query
          name: sort_field
          required: false
          schema:
            default: modified
            example: modified
            type: string
          style: form
        - description: Sort by direction `asc` or `desc`.
          explode: true
          in: query
          name: sort_dir
          required: false
          schema:
            default: desc
            example: desc
            type: string
          style: form
        - description: Return only notebooks with `query` string in notebook name or
            author handle.
          explode: true
          in: query
          name: query
          required: false
          schema:
            example: postmortem
            type: string
          style: form
        - description: Value of `false` excludes the `cells` and global `time` for each
            notebook.
          explode: true
          in: query
          name: include_cells
          required: false
          schema:
            default: true
            example: false
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebooksResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Get all notebooks
      tags:
        - Notebooks
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Create a notebook using the specified options.
      operationId: CreateNotebook
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    attributes:
                      cells:
                        - attributes:
                            definition:
                              text: |-
                                ## Some test markdown

                                With some example content.
                              type: markdown
                          type: notebook_cells
                        - attributes:
                            definition:
                              requests:
                                - display_type: line
                                  q: avg:system.load.1{*}
                                  style:
                                    line_type: solid
                                    line_width: normal
                                    palette: dog_classic
                              show_legend: true
                              type: timeseries
                              yaxis:
                                scale: linear
                            graph_size: m
                            split_by:
                              keys: []
                              tags: []
                            time: null
                          type: notebook_cells
                      name: Example Notebook
                      time:
                        live_span: 1h
                    type: notebooks
            schema:
              $ref: '#/components/schemas/NotebookCreateRequest'
        description: The JSON description of the notebook you want to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Create a notebook
      tags:
        - Notebooks
      x-codegen-request-body-name: body
      x-given:
        notebook:
          parameters:
            - file: notebook_payload.json
              name: body
          step: there is a valid "notebook" in the system
      x-undo:
        operationId: DeleteNotebook
        parameters:
          - name: notebook_id
            source: data.id
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/notebooks/{notebook_id}:
    delete:
      description: Delete a notebook using the specified ID.
      operationId: DeleteNotebook
      parameters:
        - description: Unique ID, assigned when you create the notebook.
          explode: false
          in: path
          name: notebook_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete a notebook
      tags:
        - Notebooks
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a notebook using the specified notebook ID.
      operationId: GetNotebook
      parameters:
        - description: Unique ID, assigned when you create the notebook.
          explode: false
          in: path
          name: notebook_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get a notebook
      tags:
        - Notebooks
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Update a notebook using the specified ID.
      operationId: UpdateNotebook
      parameters:
        - description: Unique ID, assigned when you create the notebook.
          explode: false
          in: path
          name: notebook_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            examples:
              json-request-body:
                value:
                  data:
                    attributes:
                      cells:
                        - attributes:
                            definition:
                              text: |-
                                ## Some updated test markdown

                                With some example content.
                              type: markdown
                          type: notebook_cells
                        - attributes:
                            definition:
                              requests:
                                - display_type: bars
                                  q: avg:system.load.1{*}
                                  style:
                                    line_type: solid
                                    line_width: normal
                                    palette: warm
                              show_legend: true
                              type: timeseries
                              yaxis:
                                scale: linear
                            graph_size: m
                            split_by:
                              keys: []
                              tags: []
                            time: null
                          id: abcd1234
                          type: notebook_cells
                      name: Example Notebook
                      time:
                        live_span: 1h
                    type: notebooks
            schema:
              $ref: '#/components/schemas/NotebookUpdateRequest'
        description: Update notebook request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
      summary: Update a notebook
      tags:
        - Notebooks
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/org:
    get:
      description: List your managed organizations.
      operationId: ListOrgs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: List your managed organizations
      tags:
        - Organizations
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: |-
        Create a child organization.

        This endpoint requires the
        [multi-organization account](https://docs.datadoghq.com/account_management/multi_organization/)
        feature and must be enabled by
        [contacting support](https://docs.datadoghq.com/help/).

        Once a new child organization is created, you can interact with it
        by using the `org.public_id`, `pi_key.key`, and
        `application_key.hash` provided in the response.
      operationId: CreateChildOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateBody'
        description: Organization object that needs to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create a child organization
      tags:
        - Organizations
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        operationId: TODO
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/org/{public_id}:
    get:
      description: Get organization information.
      operationId: GetOrg
      parameters:
        - description: The `public_id` of the organization you are operating within.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            example: abc123
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get organization information
      tags:
        - Organizations
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Update your organization.
      operationId: UpdateOrg
      parameters:
        - description: The `public_id` of the organization you are operating within.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            example: abc123
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Update your organization
      tags:
        - Organizations
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/org/{public_id}/idp_metadata:
    post:
      description: |-
        There are a couple of options for updating the Identity Provider (IdP)
        metadata from your SAML IdP.

        * **Multipart Form-Data**: Post the IdP metadata file using a form post.

        * **XML Body:** Post the IdP metadata file as the body of the request.
      operationId: UploadIdPForOrg
      parameters:
        - description: The `public_id` of the organization you are operating with
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            example: abc123
            type: string
          style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdpFormData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unsupported Media Type
      summary: Upload IdP metadata
      tags:
        - Organizations
      x-codegen-request-body-name: body
      x-menu-order: 5
      x-undo:
        type: safe
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v1/query:
    get:
      description: Query timeseries points.
      operationId: QueryMetrics
      parameters:
        - description: Start of the queried time period, seconds since the Unix epoch.
          explode: true
          in: query
          name: from
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: End of the queried time period, seconds since the Unix epoch.
          explode: true
          in: query
          name: to
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: Query string. Must end with {*}.
          explode: true
          in: query
          name: query
          required: true
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQueryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Query timeseries points
      tags:
        - Metrics
      x-menu-order: 5
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/search:
    get:
      description: Search for metrics from the last 24 hours in Datadog.
      operationId: ListMetrics
      parameters:
        - description: Query string to search metrics upon. Must be prefixed with `metrics:`.
          explode: true
          in: query
          name: q
          required: true
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSearchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Search metrics
      tags:
        - Metrics
      x-menu-order: 4
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/series:
    post:
      description: |-
        The metrics end-point allows you to post time-series data that can be graphed on Datadog’s dashboards.
        The maximum payload size is 3.2 megabytes (3200000 bytes). Compressed payloads must have a decompressed size of less than 62 megabytes (62914560 bytes).

        If you’re submitting metrics directly to the Datadog API without using DogStatsD, expect:

        - 64 bits for the timestamp
        - 32 bits for the value
        - 20 bytes for the metric names
        - 50 bytes for the timeseries
        - The full payload is approximately 100 bytes. However, with the DogStatsD API,
        compression is applied, which reduces the payload size.
      operationId: SubmitMetrics
      requestBody:
        content:
          application/json:
            examples:
              dynamic-points:
                description: Post time-series data that can be graphed on Datadog’s
                  dashboards.
                summary: Dynamic Points
                value:
                  series:
                    - metric: system.load.1
                      points:
                        - - ${NOW}
                          - "1234.5"
                x-variables:
                  NOW: $(date +%s)
            schema:
              $ref: '#/components/schemas/MetricsPayload'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAccepted'
          description: Payload accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Request timeout
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Payload too large
      security:
        - apiKeyAuth: []
      summary: Submit metrics
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/slo:
    get:
      description: Get a list of service level objective objects for your organization.
      operationId: ListSLOs
      parameters:
        - description: A comma separated list of the IDs of the service level objectives
            objects.
          example: id1, id2, id3
          explode: true
          in: query
          name: ids
          required: false
          schema:
            type: string
          style: form
        - description: The query string to filter results based on SLO names.
          example: monitor
          explode: true
          in: query
          name: query
          required: false
          schema:
            type: string
          style: form
        - description: The query string to filter results based on a single SLO tag.
          example: env:prod
          explode: true
          in: query
          name: tags_query
          required: false
          schema:
            type: string
          style: form
        - description: The query string to filter results based on SLO numerator and
            denominator.
          example: aws.elb.request_count
          explode: true
          in: query
          name: metrics_query
          required: false
          schema:
            type: string
          style: form
        - description: The number of SLOs to return in the response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: The specific offset to use as the beginning of the returned response.
          explode: true
          in: query
          name: offset
          required: false
          schema:
            format: int64
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get all SLOs
      tags:
        - Service Level Objectives
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Create a service level objective object.
      operationId: CreateSLO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelObjectiveRequest'
        description: Service level objective request object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create an SLO object
      tags:
        - Service Level Objectives
      x-codegen-request-body-name: body
      x-given:
        slo:
          parameters:
            - name: body
              value: |-
                {
                  "type": "metric",
                  "name": "{{ unique }}",
                  "thresholds": [{
                    "timeframe": "7d",
                    "target": 95.0,
                    "warning": 98.0
                  }],
                  "query": {
                    "numerator": "sum:httpservice.hits{code:2xx}.as_count()",
                    "denominator": "sum:httpservice.hits{!code:3xx}.as_count()"
                  }
                }
          step: there is a valid "slo" in the system
      x-menu-order: 1
      x-undo:
        operationId: DeleteSLO
        parameters:
          - name: slo_id
            source: data[0].id
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/slo/bulk_delete:
    post:
      description: |-
        Delete (or partially delete) multiple service level objective objects.

        This endpoint facilitates deletion of one or more thresholds for one or more
        service level objective objects. If all thresholds are deleted, the service level
        objective object is deleted as well.
      operationId: DeleteSLOTimeframeInBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOBulkDelete'
        description: Delete multiple service level objective objects request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOBulkDeleteResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Bulk Delete SLO Timeframes
      tags:
        - Service Level Objectives
      x-codegen-request-body-name: body
      x-menu-order: 8
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/slo/can_delete:
    get:
      description: |-
        Check if an SLO can be safely deleted. For example,
        assure an SLO can be deleted without disrupting a dashboard.
      operationId: CheckCanDeleteSLO
      parameters:
        - description: A comma separated list of the IDs of the service level objectives
            objects.
          example: id1, id2, id3
          explode: true
          in: query
          name: ids
          required: true
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteSLOResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteSLOResponse'
          description: Conflict
      summary: Check if SLOs can be safely deleted
      tags:
        - Service Level Objectives
      x-menu-order: 7
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/slo/correction:
    get:
      description: Get all Service Level Objective corrections
      operationId: ListSLOCorrection
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionListResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all SLO corrections
      tags:
        - Service Level Objective Corrections
      x-menu-order: 2
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json
    post:
      description: Create an SLO Correction
      operationId: CreateSLOCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOCorrectionCreateRequest'
        description: Create an SLO Correction
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: SLO Not Found
      summary: Create an SLO correction
      tags:
        - Service Level Objective Corrections
      x-codegen-request-body-name: body
      x-given:
        correction:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "slo_id": "{{ slo.data[0].id }}",
                      "start": {{ timestamp("now") }},
                      "end": {{ timestamp("now + 1h") }},
                      "category": "Other",
                      "timezone": "UTC",
                      "description": "Test Correction"
                     },
                     "type": "correction"
                  }
                }
          step: there is a valid "correction" for "slo"
      x-menu-order: 1
      x-undo:
        operationId: DeleteSLOCorrection
        parameters:
          - name: slo_correction_id
            source: data.id
        type: unsafe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/slo/correction/{slo_correction_id}:
    delete:
      description: Permanently delete the specified SLO correction object
      operationId: DeleteSLOCorrection
      parameters:
        - description: The ID of the SLO correction object
          explode: false
          in: path
          name: slo_correction_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Delete an SLO correction
      tags:
        - Service Level Objective Corrections
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json
    get:
      description: Get an SLO correction
      operationId: GetSLOCorrection
      parameters:
        - description: The ID of the SLO correction object
          explode: false
          in: path
          name: slo_correction_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get an SLO correction for an SLO
      tags:
        - Service Level Objective Corrections
      x-menu-order: 3
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json
    patch:
      description: Update the specified SLO correction object object
      operationId: UpdateSLOCorrection
      parameters:
        - description: The ID of the SLO correction object
          explode: false
          in: path
          name: slo_correction_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOCorrectionUpdateRequest'
        description: The edited SLO correction object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update an SLO correction
      tags:
        - Service Level Objective Corrections
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/slo/{slo_id}:
    delete:
      description: |-
        Permanently delete the specified service level objective object.

        If an SLO is used in a dashboard, the `DELETE /v1/slo/` endpoint returns
        a 409 conflict error because the SLO is referenced in a dashboard.
      operationId: DeleteSLO
      parameters:
        - description: The ID of the service level objective.
          explode: false
          in: path
          name: slo_id
          required: true
          schema:
            type: string
          style: simple
        - description: Delete the monitor even if it's referenced by other resources
            (e.g. SLO, composite monitor).
          explode: true
          in: query
          name: force
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLODeleteResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLODeleteResponse'
          description: Conflict
      summary: Delete an SLO
      tags:
        - Service Level Objectives
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a service level objective object.
      operationId: GetSLO
      parameters:
        - description: The ID of the service level objective object.
          explode: false
          in: path
          name: slo_id
          required: true
          schema:
            type: string
          style: simple
        - description: Get the IDs of SLO monitors that reference this SLO.
          example: true
          explode: true
          in: query
          name: with_configured_alert_ids
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get an SLO's details
      tags:
        - Service Level Objectives
      x-menu-order: 4
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Update the specified service level objective object.
      operationId: UpdateSLO
      parameters:
        - description: The ID of the service level objective object.
          explode: false
          in: path
          name: slo_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelObjective'
        description: The edited service level objective request object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update an SLO
      tags:
        - Service Level Objectives
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/slo/{slo_id}/history:
    get:
      description: |-
        Get a specific SLO’s history, regardless of its SLO type.

        The detailed history data is structured according to the source data type.
        For example, metric data is included for event SLOs that use
        the metric source, and monitor SLO types include the monitor transition history.

        **Note:** There are different response formats for event based and time based SLOs.
        Examples of both are shown.
      operationId: GetSLOHistory
      parameters:
        - description: The ID of the service level objective object.
          explode: false
          in: path
          name: slo_id
          required: true
          schema:
            type: string
          style: simple
        - description: The `from` timestamp for the query window in epoch seconds.
          explode: true
          in: query
          name: from_ts
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: The `to` timestamp for the query window in epoch seconds.
          explode: true
          in: query
          name: to_ts
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: The SLO target. If `target` is passed in, the response will include
            the remaining error budget and a timeframe value of `custom`.
          explode: true
          in: query
          name: target
          required: false
          schema:
            exclusiveMaximum: true
            exclusiveMinimum: true
            format: double
            maximum: 100
            minimum: 0
            type: number
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOHistoryResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get an SLO's history
      tags:
        - Service Level Objectives
      x-menu-order: 6
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json
  /api/v1/synthetics/locations:
    get:
      description: |-
        Get the list of public and private locations available for Synthetic
        tests. No arguments required.
      operationId: ListLocations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsLocations'
          description: OK
      summary: Get all locations (public and private)
      tags:
        - Synthetics
      x-menu-order: 23
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/synthetics/private-locations:
    post:
      description: Create a new Synthetics private location.
      operationId: CreatePrivateLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsPrivateLocation'
        description: Details of the private location to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsPrivateLocationCreationResponse'
          description: OK
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Quota reached for private locations
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Private locations are not activated for the user
      summary: Create a private location
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 20
      x-undo:
        operationId: DeletePrivateLocation
        parameters:
          - name: location_id
            source: private_location
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/private-locations/{location_id}:
    delete:
      description: Delete a Synthetics private location.
      operationId: DeletePrivateLocation
      parameters:
        - description: The ID of the private location.
          explode: false
          in: path
          name: location_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Private locations are not activated for the user
            - Private location does not exist
      summary: Delete a private location
      tags:
        - Synthetics
      x-menu-order: 24
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a Synthetics private location.
      operationId: GetPrivateLocation
      parameters:
        - description: The ID of the private location.
          explode: false
          in: path
          name: location_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsPrivateLocation'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic private locations are not activated for the user
            - Private location does not exist
      summary: Get a private location
      tags:
        - Synthetics
      x-menu-order: 21
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit a Synthetics private location.
      operationId: UpdatePrivateLocation
      parameters:
        - description: The ID of the private location.
          explode: false
          in: path
          name: location_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsPrivateLocation'
        description: Details of the private location to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsPrivateLocation'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Private locations are not activated for the user
            - Private location does not exist
      summary: Edit a private location
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 22
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/tests:
    get:
      description: Get the list of all Synthetic tests.
      operationId: ListTests
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsListTestsResponse'
          description: OK - Returns the list of all Synthetic tests.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Synthetics is not activated for the user.
      summary: Get the list of all tests
      tags:
        - Synthetics
      x-menu-order: 9
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/synthetics/tests/api:
    post:
      description: Create a Synthetic API test.
      operationId: CreateSyntheticsAPITest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsAPITest'
        description: Details of the test to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITest'
          description: OK - Returns the created test details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - JSON format is wrong
            - Creation failed
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Test quota is reached
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create an API test
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        operationId: DeleteTests
        parameters:
          - name: body
            template: '{"public_ids": ["{{ public_id }}"]}'
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/tests/api/{public_id}:
    get:
      description: |-
        Get the detailed configuration associated with
        a Synthetic API test.
      operationId: GetAPITest
      parameters:
        - description: The public ID of the test to get details from.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITest'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
      summary: Get an API test
      tags:
        - Synthetics
      x-menu-order: 7
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit the configuration of a Synthetic API test.
      operationId: UpdateAPITest
      parameters:
        - description: The public ID of the test to get details from.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsAPITest'
        description: New test details to be saved.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - JSON format is wrong
            - Updating sub-type is forbidden
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
            - Test can't be found
      summary: Edit an API test
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/tests/browser:
    post:
      description: Create a Synthetic browser test.
      operationId: CreateSyntheticsBrowserTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsBrowserTest'
        description: Details of the test to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTest'
          description: OK - Returns the created test details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - JSON format is wrong
            - Creation failed
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Test quota is reached
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create a browser test
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: TODO
        parameters: []
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/tests/browser/{public_id}:
    get:
      description: |-
        Get the detailed configuration (including steps) associated with
        a Synthetic browser test.
      operationId: GetBrowserTest
      parameters:
        - description: The public ID of the test to get details from.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTest'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic is not activated for the user
            - Test is not owned by the user
      summary: Get a browser test
      tags:
        - Synthetics
      x-menu-order: 8
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit the configuration of a Synthetic browser test.
      operationId: UpdateBrowserTest
      parameters:
        - description: The public ID of the test to get details from.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsBrowserTest'
        description: New test details to be saved.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - JSON format is wrong
            - Updating sub-type is forbidden
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic Monitoring is not activated for the user
            - Test is not owned by the user
            - Test can't be found
      summary: Edit a browser test
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/tests/browser/{public_id}/results:
    get:
      description: Get the last 50 test results summaries for a given Synthetics Browser
        test.
      operationId: GetBrowserTestLatestResults
      parameters:
        - description: |-
            The public ID of the browser test for which to search results
            for.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
        - description: Timestamp from which to start querying results.
          explode: true
          in: query
          name: from_ts
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Timestamp up to which to query results.
          explode: true
          in: query
          name: to_ts
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Locations for which to query results.
          explode: true
          in: query
          name: probe_dc
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGetBrowserTestLatestResultsResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic is not activated for the user
            - Test is not owned by the user
      summary: Get a browser test's latest results summaries
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 13
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/synthetics/tests/browser/{public_id}/results/{result_id}:
    get:
      description: Get a specific full result from a given (browser) Synthetic test.
      operationId: GetBrowserTestResult
      parameters:
        - description: |-
            The public ID of the browser test to which the target result
            belongs.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
        - description: The ID of the result to get.
          explode: false
          in: path
          name: result_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsBrowserTestResultFull'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic is not activated for the user
            - Test or result is not owned by the user
      summary: Get a browser test result
      tags:
        - Synthetics
      x-menu-order: 11
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/synthetics/tests/delete:
    post:
      description: Delete multiple Synthetic tests by ID.
      operationId: DeleteTests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsDeleteTestsPayload'
        description: Public ID list of the Synthetic tests to be deleted.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsDeleteTestsResponse'
          description: OK.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - JSON format is wrong
            - Test cannot be deleted as it's used elsewhere (as a sub-test or in an uptime widget)
            - Some IDs are not owned by the user
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Tests to be deleted can't be found
            - Synthetics is not activated for the user
      summary: Delete tests
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 14
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/tests/trigger/ci:
    post:
      description: Trigger a set of Synthetics tests for continuous integration.
      operationId: TriggerCITests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsCITestBody'
        description: Details of the test to trigger.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsTriggerCITestsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: JSON format is wrong
      summary: Trigger tests from CI/CD pipelines
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/tests/{public_id}:
    get:
      description: Get the detailed configuration associated with a Synthetics test.
      operationId: GetTest
      parameters:
        - description: The public ID of the test to get details from.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsTestDetails'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic is not activated for the user
            - Test is not owned by the user
      summary: Get a test configuration
      tags:
        - Synthetics
      x-menu-order: 25
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/synthetics/tests/{public_id}/results:
    get:
      description: Get the last 50 test results summaries for a given Synthetics API
        test.
      operationId: GetAPITestLatestResults
      parameters:
        - description: The public ID of the test for which to search results for.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
        - description: Timestamp from which to start querying results.
          explode: true
          in: query
          name: from_ts
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Timestamp up to which to query results.
          explode: true
          in: query
          name: to_ts
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Locations for which to query results.
          explode: true
          in: query
          name: probe_dc
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGetAPITestLatestResultsResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic is not activated for the user
            - Test is not owned by the user
      summary: Get an API test's latest results summaries
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 12
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/synthetics/tests/{public_id}/results/{result_id}:
    get:
      description: Get a specific full result from a given (API) Synthetic test.
      operationId: GetAPITestResult
      parameters:
        - description: The public ID of the API test to which the target result belongs.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
        - description: The ID of the result to get.
          explode: false
          in: path
          name: result_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsAPITestResultFull'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic is not activated for the user
            - Test or result is not owned by the user
      summary: Get an API test result
      tags:
        - Synthetics
      x-menu-order: 10
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/synthetics/tests/{public_id}/status:
    put:
      description: Pause or start a Synthetics test by changing the status.
      operationId: UpdateTestPauseStatus
      parameters:
        - description: The public ID of the Synthetic test to update.
          explode: false
          in: path
          name: public_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsUpdateTestPauseStatusPayload'
        description: Status to set the given Synthetic test to.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK - Returns a boolean indicating if the update was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: JSON format is wrong.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: |-
            - Synthetic is not activated for the user
            - Test is not owned by the user
      summary: Pause or start a test
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/variables:
    get:
      description: Get the list of all Synthetics global variables.
      operationId: ListGlobalVariables
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsListGlobalVariablesResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all global variables
      tags:
        - Synthetics
      x-menu-order: 15
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: Create a Synthetics global variable.
      operationId: CreateGlobalVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsGlobalVariable'
        description: Details of the global variable to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGlobalVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create a global variable
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 16
      x-undo:
        operationId: DeleteGlobalVariable
        parameters:
          - name: variable_id
            source: id
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/synthetics/variables/{variable_id}:
    delete:
      description: Delete a Synthetics global variable.
      operationId: DeleteGlobalVariable
      parameters:
        - description: The ID of the global variable.
          explode: false
          in: path
          name: variable_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: JSON format is wrong
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Delete a global variable
      tags:
        - Synthetics
      x-menu-order: 19
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get the detailed configuration of a global variable.
      operationId: GetGlobalVariable
      parameters:
        - description: The ID of the global variable.
          explode: false
          in: path
          name: variable_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGlobalVariable'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get a global variable
      tags:
        - Synthetics
      x-menu-order: 18
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: Edit a Synthetics global variable.
      operationId: EditGlobalVariable
      parameters:
        - description: The ID of the global variable.
          explode: false
          in: path
          name: variable_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyntheticsGlobalVariable'
        description: Details of the global variable to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyntheticsGlobalVariable'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Edit a global variable
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-menu-order: 17
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/tags/hosts:
    get:
      description: Return a mapping of tags to hosts for your whole infrastructure.
      operationId: ListHostTags
      parameters:
        - description: When specified, filters host list to those tags with the specified
            source.
          explode: true
          in: query
          name: source
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagToHosts'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get Tags
      tags:
        - Tags
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
  /api/v1/tags/hosts/{host_name}:
    delete:
      description: |-
        This endpoint allows you to remove all user-assigned tags
        for a single host.
      operationId: DeleteHostTags
      parameters:
        - description: This endpoint allows you to remove all user-assigned tags for
            a single host.
          explode: false
          in: path
          name: host_name
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            The source of the tags (e.g. chef, puppet).
            [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          explode: true
          in: query
          name: source
          required: false
          schema:
            type: string
          style: form
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Remove host tags
      tags:
        - Tags
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Return the list of tags that apply to a given host.
      operationId: GetHostTags
      parameters:
        - description: When specified, filters list of tags to those tags with the specified
            source.
          explode: false
          in: path
          name: host_name
          required: true
          schema:
            type: string
          style: simple
        - description: Source to filter.
          explode: true
          in: query
          name: source
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get host tags
      tags:
        - Tags
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: |-
        This endpoint allows you to add new tags to a host,
        optionally specifying where these tags come from.
      operationId: CreateHostTags
      parameters:
        - description: This endpoint allows you to add new tags to a host, optionally
            specifying where the tags came from.
          explode: false
          in: path
          name: host_name
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            The source of the tags.
            [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          example: chef
          explode: true
          in: query
          name: source
          required: false
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostTags'
        description: Update host tags request body.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: Created
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Add tags to a host
      tags:
        - Tags
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        operationId: DeleteHostTags
        parameters:
          - name: host_name
            source: <RESPONSE_PATH>
          - name: source
            source: <RESPONSE_PATH>
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
    put:
      description: |-
        This endpoint allows you to update/replace all tags in
        an integration source with those supplied in the request.
      operationId: UpdateHostTags
      parameters:
        - description: This endpoint allows you to update/replace all in an integration
            source with those supplied in the request.
          explode: false
          in: path
          name: host_name
          required: true
          schema:
            type: string
          style: simple
        - description: |-
            The source of the tags (e.g. chef, puppet).
            [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)
          explode: true
          in: query
          name: source
          required: false
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostTags'
        description: Add tags to host
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update host tags
      tags:
        - Tags
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/usage/analyzed_logs:
    get:
      description: Get hourly usage for analyzed logs (Security Monitoring).
      operationId: GetUsageAnalyzedLogs
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAnalyzedLogsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for analyzed logs
      tags:
        - Usage Metering
      x-menu-order: 17
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/attribution:
    get:
      description: Get Usage Attribution.
      operationId: GetUsageAttribution
      parameters:
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.
            Maximum of 15 months ago.
          explode: true
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: Comma-separated list of usage types to return, or `*` for all
            usage types.
          explode: true
          in: query
          name: fields
          required: true
          schema:
            $ref: '#/components/schemas/UsageAttributionSupportedMetrics'
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage ending this month.'
          explode: true
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: 'The direction to sort by: `[desc, asc]`.'
          explode: true
          in: query
          name: sort_direction
          required: false
          schema:
            $ref: '#/components/schemas/UsageSortDirection'
          style: form
        - description: The field to sort by.
          explode: true
          in: query
          name: sort_name
          required: false
          schema:
            $ref: '#/components/schemas/UsageAttributionSort'
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAttributionResponse'
          description: OK
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get Usage Attribution
      tags:
        - Usage Metering
      x-menu-order: 29
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/audit_logs:
    get:
      description: Get hourly usage for audit logs.
      operationId: GetUsageAuditLogs
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAuditLogsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for audit logs
      tags:
        - Usage Metering
      x-menu-order: 31
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/aws_lambda:
    get:
      description: Get hourly usage for lambda.
      operationId: GetUsageLambda
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLambdaResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Lambda
      tags:
        - Usage Metering
      x-menu-order: 12
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/billable-summary:
    get:
      description: Get billable usage across your account.
      operationId: GetUsageBillableSummary
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage starting this month.'
          explode: true
          in: query
          name: month
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageBillableSummaryResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get billable usage across your account
      tags:
        - Usage Metering
      x-menu-order: 19
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/cspm:
    get:
      description: Get hourly usage for Cloud Security Posture Management (CSPM).
      operationId: GetUsageCloudSecurityPostureManagement
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCloudSecurityPostureManagementResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for CSPM
      tags:
        - Usage Metering
      x-menu-order: 30
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/cws:
    get:
      description: Get hourly usage for Cloud Workload Security.
      operationId: GetUsageCWS
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCWSResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Cloud Workload Security
      tags:
        - Usage Metering
      x-menu-order: 31
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/fargate:
    get:
      description: Get hourly usage for [Fargate](https://docs.datadoghq.com/integrations/ecs_fargate/).
      operationId: GetUsageFargate
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageFargateResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Fargate
      tags:
        - Usage Metering
      x-menu-order: 11
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/hosts:
    get:
      description: Get hourly usage for hosts and containers.
      operationId: GetUsageHosts
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageHostsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for hosts and containers
      tags:
        - Usage Metering
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/incident-management:
    get:
      description: Get hourly usage for incident management.
      operationId: GetIncidentManagement
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIncidentManagementResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for incident management
      tags:
        - Usage Metering
      x-menu-order: 27
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/indexed-spans:
    get:
      description: Get hourly usage for indexed spans.
      operationId: GetUsageIndexedSpans
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIndexedSpansResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for indexed spans
      tags:
        - Usage Metering
      x-menu-order: 7
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/ingested-spans:
    get:
      description: Get hourly usage for ingested spans.
      operationId: GetIngestedSpans
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIngestedSpansResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for ingested spans
      tags:
        - Usage Metering
      x-menu-order: 26
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/iot:
    get:
      description: Get hourly usage for IoT.
      operationId: GetUsageInternetOfThings
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIoTResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for IoT
      tags:
        - Usage Metering
      x-menu-order: 28
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/logs:
    get:
      description: Get hourly usage for logs.
      operationId: GetUsageLogs
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Logs
      tags:
        - Usage Metering
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/logs-by-retention:
    get:
      description: Get hourly usage for indexed logs by retention period.
      operationId: GetUsageLogsByRetention
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsByRetentionResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly logs usage by retention
      tags:
        - Usage Metering
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/logs_by_index:
    get:
      description: Get hourly usage for logs by index.
      operationId: GetUsageLogsByIndex
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Comma-separated list of log index names.
          explode: true
          in: query
          name: index_name
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsByIndexResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Logs by Index
      tags:
        - Usage Metering
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/network_flows:
    get:
      description: Get hourly usage for network flows.
      operationId: GetUsageNetworkFlows
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageNetworkFlowsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Network Flows
      tags:
        - Usage Metering
      x-menu-order: 15
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/network_hosts:
    get:
      description: Get hourly usage for network hosts.
      operationId: GetUsageNetworkHosts
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageNetworkHostsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Network Hosts
      tags:
        - Usage Metering
      x-menu-order: 14
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/profiling:
    get:
      description: Get hourly usage for profiled hosts.
      operationId: GetUsageProfiling
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageProfilingResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for profiled hosts
      tags:
        - Usage Metering
      x-menu-order: 24
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/rum_sessions:
    get:
      description: Get hourly usage for [RUM](https://docs.datadoghq.com/real_user_monitoring/)
        Sessions.
      operationId: GetUsageRumSessions
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: 'RUM type: `[browser, mobile]`. Defaults to `browser`.'
          explode: true
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageRumSessionsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for RUM Sessions
      tags:
        - Usage Metering
      x-menu-order: 13
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/snmp:
    get:
      description: Get hourly usage for SNMP devices.
      operationId: GetUsageSNMP
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSNMPResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for SNMP devices
      tags:
        - Usage Metering
      x-menu-order: 18
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/summary:
    get:
      description: Get usage across your multi-org account. You must have the multi-org
        feature enabled.
      operationId: GetUsageSummary
      parameters:
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for usage beginning in this month.
            Maximum of 15 months ago.
          explode: true
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage ending this month.'
          explode: true
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Include usage summaries for each sub-org.
          explode: true
          in: query
          name: include_org_details
          required: false
          schema:
            type: boolean
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSummaryResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get usage across your multi-org account
      tags:
        - Usage Metering
      x-menu-order: 16
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/synthetics:
    get:
      deprecated: true
      description: Get hourly usage for [Synthetics checks](https://docs.datadoghq.com/synthetics/).
      operationId: GetUsageSynthetics
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Synthetics Checks
      tags:
        - Usage Metering
      x-menu-order: 8
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/synthetics_api:
    get:
      description: Get hourly usage for [synthetics API checks](https://docs.datadoghq.com/synthetics/).
      operationId: GetUsageSyntheticsAPI
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsAPIResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Synthetics API Checks
      tags:
        - Usage Metering
      x-menu-order: 9
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/synthetics_browser:
    get:
      description: Get hourly usage for synthetics browser checks.
      operationId: GetUsageSyntheticsBrowser
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsBrowserResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for Synthetics Browser Checks
      tags:
        - Usage Metering
      x-menu-order: 10
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/timeseries:
    get:
      description: Get hourly usage for [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/).
      operationId: GetUsageTimeseries
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
          explode: true
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
          explode: true
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageTimeseriesResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get hourly usage for custom metrics
      tags:
        - Usage Metering
      x-menu-order: 4
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/usage/top_avg_metrics:
    get:
      description: Get all [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/)
        by hourly average. Use the month parameter to get a month-to-date data resolution
        or use the day parameter to get a daily resolution. One of the two is required,
        and only one of the two is allowed.
      operationId: GetUsageTopAvgMetrics
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM]
          for usage beginning at this hour. (Either month or day should be specified,
          but not both)'
          explode: true
          in: query
          name: month
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: 'Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD]
          for usage beginning at this hour. (Either month or day should be specified,
          but not both)'
          explode: true
          in: query
          name: day
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Comma-separated list of metric names.
          explode: true
          in: query
          name: names
          required: false
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Maximum number of results to return (between 1 and 5000) - defaults
            to 500 results if limit not specified.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 500
            format: int32
            maximum: 5000
            minimum: 1
            type: integer
          style: form
        - description: List following results with a next_record_id provided in the
            previous query.
          explode: true
          in: query
          name: next_record_id
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageTopAvgMetricsResponse'
          description: OK
        "400":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
      summary: Get all custom metrics by hourly average
      tags:
        - Usage Metering
      x-menu-order: 5
      x-undo:
        type: safe
      x-accepts: application/json;datetime-format=rfc3339
  /api/v1/user:
    get:
      description: List all users for your organization.
      operationId: ListUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: List all users
      tags:
        - Users
      x-menu-order: 2
      x-undo:
        type: safe
      x-accepts: application/json
    post:
      description: |-
        Create a user for your organization.

        **Note**: Users can only be created with the admin access role
        if application keys belong to administrators.
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object that needs to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
      summary: Create a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        operationId: DisableUser
        parameters:
          - name: user_handle
            source: user.handle
        type: unsafe
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/user/{user_handle}:
    delete:
      description: |-
        Delete a user from an organization.

        **Note**: This endpoint can only be used with application keys belonging to
        administrators.
      operationId: DisableUser
      parameters:
        - description: The handle of the user.
          explode: false
          in: path
          name: user_handle
          required: true
          schema:
            example: test@datadoghq.com
            format: email
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDisableResponse'
          description: User disabled
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Disable a user
      tags:
        - Users
      x-menu-order: 5
      x-undo:
        type: idempotent
      x-accepts: application/json
    get:
      description: Get a user's details.
      operationId: GetUser
      parameters:
        - description: The ID of the user.
          explode: false
          in: path
          name: user_handle
          required: true
          schema:
            example: test@datadoghq.com
            format: email
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK for get user
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get user details
      tags:
        - Users
      x-menu-order: 3
      x-undo:
        type: safe
      x-accepts: application/json
    put:
      description: |-
        Update a user information.

        **Note**: It can only be used with application keys belonging to administrators.
      operationId: UpdateUser
      parameters:
        - description: The ID of the user.
          explode: false
          in: path
          name: user_handle
          required: true
          schema:
            example: test@datadoghq.com
            format: email
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Description of the update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/validate:
    get:
      description: Check if the API key (not the APP key) is valid. If invalid, a
        403 is returned.
      operationId: Validate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationValidationResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      security:
        - apiKeyAuth: []
      summary: Validate API key
      tags:
        - Authentication
      x-menu-order: 1
      x-undo:
        type: safe
      x-accepts: application/json
  /v1/input:
    post:
      description: |-
        Send your logs to your Datadog platform over HTTP. Limits per HTTP request are:

        - Maximum content size per payload (uncompressed): 5MB
        - Maximum size for a single log: 1MB
        - Maximum array size if sending multiple logs in an array: 1000 entries

        Any log exceeding 1MB is accepted and truncated by Datadog:
        - For a single log request, the API truncates the log at 1MB and returns a 2xx.
        - For a multi-logs request, the API processes all logs, truncates only logs larger than 1MB, and returns a 2xx.

        Datadog recommends sending your logs compressed.
        Add the `Content-Encoding: gzip` header to the request when sending compressed logs.

        The status codes answered by the HTTP API are:
        - 200: OK
        - 400: Bad request (likely an issue in the payload formatting)
        - 403: Permission issue (likely using an invalid API Key)
        - 413: Payload too large (batch is above 5MB uncompressed)
        - 5xx: Internal error, request should be retried after some time
      operationId: SubmitLog
      parameters:
        - description: HTTP header used to compress the media-type.
          explode: false
          in: header
          name: Content-Encoding
          required: false
          schema:
            $ref: '#/components/schemas/ContentEncoding'
          style: simple
        - description: Log tags can be passed as query parameters with `text/plain`
            content type.
          example: env:prod,user:my-user
          explode: true
          in: query
          name: ddtags
          required: false
          schema:
            type: string
          style: form
      requestBody:
        content:
          application/json:
            examples:
              multi-json-messages:
                description: Pass multiple log objects at once.
                summary: Multi JSON Messages
                value:
                  - message: hello
                  - message: world
              simple-json-message:
                description: Log attributes can be passed as `key:value` pairs in
                  valid JSON messages.
                summary: Simple JSON Message
                value:
                  ddsource: agent
                  ddtags: env:prod,user:joe.doe
                  hostname: fa1e1e739d95
                  message: hello world
            schema:
              $ref: '#/components/schemas/HTTPLog'
          application/logplex-1:
            examples:
              multi-raw-message:
                description: Submit log messages.
                summary: Multi Logplex Messages
                value: |-
                  hello
                  world
              simple-logplex-message:
                description: Submit log string.
                summary: Simple Logplex Message
                value: hello world
            schema:
              type: string
          text/plain:
            examples:
              multi-raw-message:
                description: Submit log string.
                summary: Multi Raw Messages
                value: |
                  hello
                  world
              simple-raw-message:
                description: 'Submit log string. Log attributes can be passed as query
                  parameters in the URL. This enables the addition of tags or the
                  source by using the `ddtags` and `ddsource` parameters: `?host=my-hostname&service=my-service&ddsource=my-source&ddtags=env:prod,user:my-user`.'
                summary: Simple Raw Message
                value: hello world
            schema:
              type: string
        description: Log to send (JSON format).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Response from server (always 200 empty JSON).
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogError'
          description: unexpected error
      security:
        - apiKeyAuth: []
      servers:
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: The regional site for our customers.
              enum:
                - datadoghq.com
                - us3.datadoghq.com
                - datadoghq.eu
                - ddog-gov.com
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
        - url: '{protocol}://{name}'
          variables:
            name:
              default: http-intake.logs.datadoghq.com
              description: Full site DNS name.
            protocol:
              default: https
              description: The protocol for accessing the API.
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: Any Datadog deployment.
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
      summary: Send logs
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        type: safe
      x-contentType: application/json
      x-accepts: application/json




  #### v2
  /api/v2/api_keys:
    get:
      description: List all API keys available for your account.
      operationId: ListAPIKeys
      parameters:
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific page number to return.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: |-
            API key attribute used to sort results. Sort order is ascending
            by default. In order to specify a descending sort, prefix the
            attribute with a minus sign.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/APIKeysSort'
          style: form
        - description: Filter API keys by the specified string.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            type: string
          style: form
        - description: Only include API keys created on or after the specified date.
          explode: true
          in: query
          name: filter[created_at][start]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
        - description: Only include API keys created on or before the specified date.
          explode: true
          in: query
          name: filter[created_at][end]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
        - description: Only include API keys modified on or after the specified date.
          explode: true
          in: query
          name: filter[modified_at][start]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
        - description: Only include API keys modified on or before the specified date.
          explode: true
          in: query
          name: filter[modified_at][end]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
        - description: Comma separated list of resource paths for related resources
            to include in the response. Supported resource paths are `created_by` and
            `modified_by`.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: created_by,modified_by
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeysResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all API keys
      tags:
        - Key Management
      x-undo:
        type: safe
    post:
      description: Create an API key.
      operationId: CreateAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-given:
        api_key:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "name": "{{ unique }}"
                    },
                    "type": "api_keys"
                  }
                }
          step: there is a valid "api_key" in the system
      x-undo:
        operationId: DeleteAPIKey
        parameters:
          - name: api_key_id
            source: data.id
        type: unsafe
  /api/v2/api_keys/{api_key_id}:
    delete:
      description: Delete an API key.
      operationId: DeleteAPIKey
      parameters:
        - description: The ID of the API key.
          explode: false
          in: path
          name: api_key_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an API key
      tags:
        - Key Management
      x-undo:
        type: idempotent
    get:
      description: Get an API key.
      operationId: GetAPIKey
      parameters:
        - description: The ID of the API key.
          explode: false
          in: path
          name: api_key_id
          required: true
          schema:
            type: string
          style: simple
        - description: Comma separated list of resource paths for related resources
            to include in the response. Supported resource paths are `created_by` and
            `modified_by`.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: created_by,modified_by
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get API key
      tags:
        - Key Management
      x-undo:
        type: safe
    patch:
      description: Update an API key.
      operationId: UpdateAPIKey
      parameters:
        - description: The ID of the API key.
          explode: false
          in: path
          name: api_key_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Edit an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
  /api/v2/application_keys:
    get:
      description: List all application keys available for your org
      operationId: ListApplicationKeys
      parameters:
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific page number to return.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: |-
            Application key attribute used to sort results. Sort order is ascending
            by default. In order to specify a descending sort, prefix the
            attribute with a minus sign.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/ApplicationKeysSort'
          style: form
        - description: Filter application keys by the specified string.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            type: string
          style: form
        - description: Only include application keys created on or after the specified
            date.
          explode: true
          in: query
          name: filter[created_at][start]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
        - description: Only include application keys created on or before the specified
            date.
          explode: true
          in: query
          name: filter[created_at][end]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get all application keys
      tags:
        - Key Management
      x-undo:
        type: safe
  /api/v2/application_keys/{app_key_id}:
    delete:
      description: Delete an application key
      operationId: DeleteApplicationKey
      parameters:
        - description: The ID of the application key.
          explode: false
          in: path
          name: app_key_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
    get:
      description: Get an application key for your org.
      operationId: GetApplicationKey
      parameters:
        - description: The ID of the application key.
          explode: false
          in: path
          name: app_key_id
          required: true
          schema:
            type: string
          style: simple
        - description: Resource path for related resources to include in the response.
            Only `owned_by` is supported.
          explode: true
          in: query
          name: include
          required: false
          schema:
            example: owned_by
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get an application key
      tags:
        - Key Management
      x-undo:
        type: safe
    patch:
      description: Edit an application key
      operationId: UpdateApplicationKey
      parameters:
        - description: The ID of the application key.
          explode: false
          in: path
          name: app_key_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Edit an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
  /api/v2/current_user/application_keys:
    get:
      description: List all application keys available for current user
      operationId: ListCurrentUserApplicationKeys
      parameters:
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific page number to return.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: |-
            Application key attribute used to sort results. Sort order is ascending
            by default. In order to specify a descending sort, prefix the
            attribute with a minus sign.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/ApplicationKeysSort'
          style: form
        - description: Filter application keys by the specified string.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            type: string
          style: form
        - description: Only include application keys created on or after the specified
            date.
          explode: true
          in: query
          name: filter[created_at][start]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
        - description: Only include application keys created on or before the specified
            date.
          explode: true
          in: query
          name: filter[created_at][end]
          required: false
          schema:
            example: 2020-11-24T18:46:21+00:00
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get all application keys owned by current user
      tags:
        - Key Management
      x-undo:
        type: safe
    post:
      description: Create an application key for current user
      operationId: CreateCurrentUserApplicationKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create an application key for current user
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-given:
        application_key:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "name": "{{ unique }}"
                    },
                    "type": "application_keys"
                  }
                }
          step: there is a valid "application_key" in the system
      x-undo:
        operationId: DeleteCurrentUserApplicationKey
        parameters:
          - name: app_key_id
            source: data.id
        type: unsafe
  /api/v2/current_user/application_keys/{app_key_id}:
    delete:
      description: Delete an application key owned by current user
      operationId: DeleteCurrentUserApplicationKey
      parameters:
        - description: The ID of the application key.
          explode: false
          in: path
          name: app_key_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an application key owned by current user
      tags:
        - Key Management
      x-undo:
        type: idempotent
    get:
      description: Get an application key owned by current user
      operationId: GetCurrentUserApplicationKey
      parameters:
        - description: The ID of the application key.
          explode: false
          in: path
          name: app_key_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get one application key owned by current user
      tags:
        - Key Management
      x-undo:
        type: safe
    patch:
      description: Edit an application key owned by current user
      operationId: UpdateCurrentUserApplicationKey
      parameters:
        - description: The ID of the application key.
          explode: false
          in: path
          name: app_key_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Edit an application key owned by current user
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
  /api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards:
    delete:
      description: Delete dashboards from an existing dashboard list.
      operationId: DeleteDashboardListItems
      parameters:
        - description: ID of the dashboard list to delete items from.
          explode: false
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListDeleteItemsRequest'
        description: Dashboards to delete from the dashboard list.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteItemsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete items from a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
    get:
      description: Fetch the dashboard list’s dashboard definitions.
      operationId: GetDashboardListItems
      parameters:
        - description: ID of the dashboard list to get items from.
          explode: false
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListItems'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get items of a Dashboard List
      tags:
        - Dashboard Lists
      x-menu-order: 1
      x-undo:
        type: safe
    post:
      description: Add dashboards to an existing dashboard list.
      operationId: CreateDashboardListItems
      parameters:
        - description: ID of the dashboard list to add items to.
          explode: false
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListAddItemsRequest'
        description: Dashboards to add to the dashboard list.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListAddItemsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Add Items to a Dashboard List
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        type: safe
    put:
      description: Update dashboards of an existing dashboard list.
      operationId: UpdateDashboardListItems
      parameters:
        - description: ID of the dashboard list to update items from.
          explode: false
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListUpdateItemsRequest'
        description: New dashboards of the dashboard list.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListUpdateItemsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update items of a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: safe
  /api/v2/incidents:
    get:
      description: Get all incidents for the user's organization.
      operationId: ListIncidents
      parameters:
        - description: Specifies which types of related objects should be included in
            the response.
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              $ref: '#/components/schemas/IncidentRelatedObject'
            type: array
          style: form
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific offset to use as the beginning of the returned page.
          explode: true
          in: query
          name: page[offset]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get a list of incidents
      tags:
        - Incidents
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident.
      operationId: CreateIncident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentCreateRequest'
        description: Incident payload.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: CREATED
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Create an incident
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-given:
        incident:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "title": "{{ unique }}",
                      "customer_impacted": false
                     },
                     "type": "incidents"
                  }
                }
          step: there is a valid "incident" in the system
      x-undo:
        operationId: DeleteIncident
        parameters:
          - name: incident_id
            source: data.id
        type: unsafe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).


  /api/v2/incidents/{incident_id}:
    delete:
      description: Deletes an existing incident from the users organization.
      operationId: DeleteIncident
      parameters:
        - description: The UUID the incident.
          explode: false
          in: path
          name: incident_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an existing incident
      tags:
        - Incidents
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: Get the details of an incident by `incident_id`.
      operationId: GetIncident
      parameters:
        - description: The UUID the incident.
          explode: false
          in: path
          name: incident_id
          required: true
          schema:
            type: string
          style: simple
        - description: Specifies which types of related objects should be included in
            the response.
          explode: false
          in: query
          name: include
          required: false
          schema:
            items:
              $ref: '#/components/schemas/IncidentRelatedObject'
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get the details of an incident
      tags:
        - Incidents
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Updates an incident. Provide only the attributes that should be
        updated as this request is a partial update.
      operationId: UpdateIncident
      parameters:
        - description: The UUID the incident.
          explode: false
          in: path
          name: incident_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentUpdateRequest'
        description: Incident Payload.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update an existing incident
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/logs/analytics/aggregate:
    post:
      description: The API endpoint to aggregate events into buckets and compute metrics
        and timeseries.
      operationId: AggregateLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsAggregateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAggregateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
      summary: Aggregate events
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        type: safe

  /api/v2/logs/config/archive-order:
    get:
      description: |-
        Get the current order of your archives.
        This endpoint takes no JSON arguments.
      operationId: GetLogsArchiveOrder
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchiveOrder'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get archive order
      tags:
        - Logs Archives
      x-menu-order: 9
      x-undo:
        type: safe
    put:
      description: |-
        Update the order of your archives. Since logs are processed sequentially, reordering an archive may change
        the structure and content of the data processed by other archives.

        **Note**: Using the `PUT` method updates your archive's order by replacing the current order
        with the new one.
      operationId: UpdateLogsArchiveOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveOrder'
        description: An object containing the new ordered list of archive IDs.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchiveOrder'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
      summary: Update archive order
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-menu-order: 10
      x-undo:
        type: safe
  /api/v2/logs/config/archives:
    get:
      description: Get the list of configured logs archives with their definitions.
      operationId: ListLogsArchives
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchives'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Get all archives
      tags:
        - Logs Archives
      x-menu-order: 1
      x-undo:
        type: safe
    post:
      description: Create an archive in your organization.
      operationId: CreateLogsArchive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveCreateRequest'
        description: The definition of the new archive.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
      summary: Create an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        operationId: DeleteLogsArchive
        parameters:
          - name: archive_id
            source: data.id
        type: unsafe
  /api/v2/logs/config/archives/{archive_id}:
    delete:
      description: Delete a given archive from your organization.
      operationId: DeleteLogsArchive
      parameters:
        - description: The ID of the archive.
          explode: false
          in: path
          name: archive_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Delete an archive
      tags:
        - Logs Archives
      x-menu-order: 5
      x-undo:
        type: idempotent
    get:
      description: Get a specific archive from your organization.
      operationId: GetLogsArchive
      parameters:
        - description: The ID of the archive.
          explode: false
          in: path
          name: archive_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get an archive
      tags:
        - Logs Archives
      x-menu-order: 3
      x-undo:
        type: safe
    put:
      description: |-
        Update a given archive configuration.

        **Note**: Using this method updates your archive configuration by **replacing**
        your current configuration with the new one sent to your Datadog organization.
      operationId: UpdateLogsArchive
      parameters:
        - description: The ID of the archive.
          explode: false
          in: path
          name: archive_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveCreateRequest'
        description: New definition of the archive.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Update an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: safe
  /api/v2/logs/config/archives/{archive_id}/readers:
    delete:
      description: Removes a role from an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))
      operationId: RemoveRoleFromArchive
      parameters:
        - description: The ID of the archive.
          explode: false
          in: path
          name: archive_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToRole'
        required: true
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Revoke role from an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-menu-order: 8
      x-undo:
        type: idempotent
    get:
      description: Returns all read roles a given archive is restricted to.
      operationId: ListArchiveReadRoles
      parameters:
        - description: The ID of the archive.
          explode: false
          in: path
          name: archive_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: List read roles for an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: safe
    post:
      description: Adds a read role to an archive. ([Roles API](https://docs.datadoghq.com/api/v2/roles/))
      operationId: AddReadRoleToArchive
      parameters:
        - description: The ID of the archive.
          explode: false
          in: path
          name: archive_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToRole'
        required: true
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Grant role to an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        type: unsafe
  /api/v2/logs/config/metrics:
    get:
      description: Get the list of configured log-based metrics with their definitions.
      operationId: ListLogsMetrics
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricsResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Get all log-based metrics
      tags:
        - Logs Metrics
      x-menu-order: 1
      x-undo:
        type: safe
    post:
      description: |-
        Create a metric based on your ingested logs in your organization.
        Returns the log-based metric object from the request body when the request is successful.
      operationId: CreateLogsMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricCreateRequest'
        description: The definition of the new log-based metric.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Create a log-based metric
      tags:
        - Logs Metrics
      x-codegen-request-body-name: body
      x-given:
        logs_metric:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "id": "{{ unique }}",
                    "attributes": {
                      "filter": {
                        "query": "source:{{ unique }}"
                      },
                      "compute": {
                        "aggregation_type": "count"
                      }
                    },
                    "type": "logs_metrics"
                  }
                }
          step: there is a valid "logs_metric" in the system
      x-menu-order: 2
      x-undo:
        operationId: DeleteLogsMetric
        parameters:
          - name: metric_id
            source: data.id
        type: unsafe
  /api/v2/logs/config/metrics/{metric_id}:
    delete:
      description: Delete a specific log-based metric from your organization.
      operationId: DeleteLogsMetric
      parameters:
        - description: The name of the log-based metric.
          explode: false
          in: path
          name: metric_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Delete a log-based metric
      tags:
        - Logs Metrics
      x-menu-order: 5
      x-undo:
        type: idempotent
    get:
      description: Get a specific log-based metric from your organization.
      operationId: GetLogsMetric
      parameters:
        - description: The name of the log-based metric.
          explode: false
          in: path
          name: metric_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Get a log-based metric
      tags:
        - Logs Metrics
      x-menu-order: 3
      x-undo:
        type: safe
    patch:
      description: |-
        Update a specific log-based metric from your organization.
        Returns the log-based metric object from the request body when the request is successful.
      operationId: UpdateLogsMetric
      parameters:
        - description: The name of the log-based metric.
          explode: false
          in: path
          name: metric_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricUpdateRequest'
        description: New definition of the log-based metric.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Update a log-based metric
      tags:
        - Logs Metrics
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
  /api/v2/logs/events:
    get:
      description: |-
        List endpoint returns logs that match a log search query.
        [Results are paginated][1].

        Use this endpoint to see your latest logs.

        **If you are considering archiving logs for your organization,
        consider use of the Datadog archive capabilities instead of the log list API.
        See [Datadog Logs Archive documentation][2].**

        [1]: /logs/guide/collect-multiple-logs-with-pagination
        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogsGet
      parameters:
        - description: Search query following logs syntax.
          example: '@datacenter:us @role:db'
          explode: true
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
          style: form
        - description: |-
            For customers with multiple indexes, the indexes to search
            Defaults to '*' which means all indexes
          example: main
          explode: true
          in: query
          name: filter[index]
          required: false
          schema:
            type: string
          style: form
        - description: Minimum timestamp for requested logs.
          example: 2019-01-02T09:42:36.320Z
          explode: true
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Maximum timestamp for requested logs.
          example: 2019-01-03T09:42:36.320Z
          explode: true
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Order of logs in results.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/LogsSort'
          style: form
        - description: List following results with a cursor provided in the previous
            query.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
          style: form
        - description: Maximum number of logs in the response.
          example: 25
          explode: true
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
      summary: Get a list of logs
      tags:
        - Logs
      x-menu-order: 3
      x-undo:
        type: safe
  /api/v2/logs/events/search:
    post:
      description: |-
        List endpoint returns logs that match a log search query.
        [Results are paginated][1].

        Use this endpoint to build complex logs filtering and search.

        **If you are considering archiving logs for your organization,
        consider use of the Datadog archive capabilities instead of the log list API.
        See [Datadog Logs Archive documentation][2].**

        [1]: /logs/guide/collect-multiple-logs-with-pagination
        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsListRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
      summary: Search logs
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-menu-order: 2
      x-undo:
        type: safe
  /api/v2/metrics:
    get:
      description: |-
        Returns all configured count/gauge/rate/distribution metric names
        (with additional filters if specified).
      operationId: ListTagConfigurations
      parameters:
        - description: Filter metrics that have configured tags.
          example: true
          explode: true
          in: query
          name: filter[configured]
          required: false
          schema:
            type: boolean
          style: form
        - description: Filter tag configurations by configured tags.
          example: app
          explode: true
          in: query
          name: filter[tags_configured]
          required: false
          schema:
            description: Tag keys to filter by.
            type: string
          style: form
        - description: Filter tag configurations by metric type.
          explode: true
          in: query
          name: filter[metric_type]
          required: false
          schema:
            $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'
          style: form
        - description: |-
            Filter distributions with additional percentile
            aggregations enabled or disabled.
          example: true
          explode: true
          in: query
          name: filter[include_percentiles]
          required: false
          schema:
            type: boolean
          style: form
        - description: |-
            Filter metrics that have been submitted with the given tags. Supports boolean and wildcard expressions.
            Cannot be combined with other filters.
          example: env IN (staging,test) AND service:web
          explode: true
          in: query
          name: filter[tags]
          required: false
          schema:
            type: string
          style: form
        - description: |-
            The number of seconds of look back (from now) to apply to a filter[tag] query.
            Defaults value is 3600 (1 hour), maximum value is 172,800 (2 days).
          example: 3600
          explode: true
          in: query
          name: window[seconds]
          required: false
          schema:
            format: int64
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsAndMetricTagConfigurationsResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: List tag configurations
      tags:
        - Metrics
      x-menu-order: 5
      x-undo:
        type: safe
      x-unstable: |-
        **Note: Use of this endpoint for count/gauge/rate metric types is only accessible for Metrics without Limits&trade; beta customers.
        If you’re interested in Metrics without Limits&trade;, please contact your Customer Success Manager.**
  /api/v2/metrics/{metric_name}/all-tags:
    get:
      description: View indexed tag key-value pairs for a given metric name.
      operationId: ListTagsByMetricName
      parameters:
        - description: The name of the metric.
          example: dist.http.endpoint.request
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAllTagsResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: List tags by metric name
      tags:
        - Metrics
      x-menu-order: 6
      x-undo:
        type: safe
  /api/v2/metrics/{metric_name}/tags:
    delete:
      description: |-
        Deletes a metric's tag configuration. Can only be used with application
        keys from users with the `Manage Tags for Metrics` permission.
      operationId: DeleteTagConfiguration
      parameters:
        - description: The name of the metric.
          example: dist.http.endpoint.request
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Delete a tag configuration
      tags:
        - Metrics
      x-menu-order: 4
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note: Use of this endpoint for count/gauge/rate metric types is only accessible for Metrics without Limits&trade; beta customers.
        If you’re interested in Metrics without Limits&trade;, please contact your Customer Success Manager.**
    get:
      description: Returns the tag configuration for the given metric name.
      operationId: ListTagConfigurationByName
      parameters:
        - description: The name of the metric.
          example: dist.http.endpoint.request
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricTagConfigurationResponse'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: List tag configuration by name
      tags:
        - Metrics
      x-menu-order: 2
      x-undo:
        type: safe
      x-unstable: |-
        **Note: Use of this endpoint for count/gauge/rate metric types is only accessible for Metrics without Limits&trade; beta customers.
        If you’re interested in Metrics without Limits&trade;, please contact your Customer Success Manager.**
    patch:
      description: |-
        Update the tag configuration of a metric or percentile aggregations of a distribution metric. Can only be used with
        application keys from users with the `Manage Tags for Metrics` permission.
      operationId: UpdateTagConfiguration
      parameters:
        - description: The name of the metric.
          example: dist.http.endpoint.request
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricTagConfigurationUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricTagConfigurationResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Update a tag configuration
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note: Use of this endpoint for count/gauge/rate metric types is only accessible for Metrics without Limits&trade; beta customers.
        If you’re interested in Metrics without Limits&trade;, please contact your Customer Success Manager.**
    post:
      description: |-
        Create and define a list of queryable tag keys for an existing count/gauge/rate/distribution metric. Optionally, include percentile aggregations on any distribution metric.
        Can only be used with application keys of users with the `Manage Tags for Metrics` permission.
      operationId: CreateTagConfiguration
      parameters:
        - description: The name of the metric.
          example: dist.http.endpoint.request
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricTagConfigurationCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricTagConfigurationResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: Create a tag configuration
      tags:
        - Metrics
      x-codegen-request-body-name: body
      x-given:
        metric_tag_configuration:
          parameters:
            - name: metric_name
              value: '"{{ unique_alnum }}"'
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "tags":["app", "datacenter", "{{ unique_alnum }}"],
                      "metric_type":"distribution"
                     },
                     "type": "manage_tags",
                     "id": "{{ unique_alnum }}"
                  }
                }
          step: there is a valid "metric_tag_configuration" in the system
      x-menu-order: 1
      x-undo:
        operationId: DeleteTagConfiguration
        parameters:
          - name: metric_name
            source: data.id
        type: unsafe
      x-unstable: |-
        **Note: Use of this endpoint for count/gauge/rate metric types is only accessible for Metrics without Limits&trade; beta customers.
        If you’re interested in Metrics without Limits&trade;, please contact your Customer Success Manager.**
  /api/v2/metrics/{metric_name}/volumes:
    get:
      description: |-
        View distinct metrics volumes for the given metric name.

        Custom distribution metrics will return both ingested and indexed custom metric volumes.
        For Metrics without Limits&trade; beta customers, all metrics will return both ingested/indexed volumes.
        Custom metrics generated in-app from other products will return `null` for ingested volumes.
      operationId: ListVolumesByMetricName
      parameters:
        - description: The name of the metric.
          example: dist.http.endpoint.request
          explode: false
          in: path
          name: metric_name
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricVolumesResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too Many Requests
      summary: List distinct metric volumes by metric name
      tags:
        - Metrics
      x-menu-order: 7
      x-undo:
        type: safe
  /api/v2/permissions:
    get:
      description: Returns a list of all permissions, including name, description,
        and ID.
      operationId: ListPermissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: List permissions
      tags:
        - Roles
      x-given:
        permission:
          source: data[0]
          step: there is a valid "permission" in the system
      x-menu-order: 1
      x-undo:
        type: safe
  /api/v2/processes:
    get:
      description: Get all processes for your organization.
      operationId: ListProcesses
      parameters:
        - description: String to search processes by.
          explode: true
          in: query
          name: search
          required: false
          schema:
            type: string
          style: form
        - description: Comma-separated list of tags to filter processes by.
          example: account:prod,user:admin
          explode: true
          in: query
          name: tags
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Unix timestamp (number of seconds since epoch) of the start of the query window.
            If not provided, the start of the query window will be 15 minutes before the `to` timestamp. If neither
            `from` nor `to` are provided, the query window will be `[now - 15m, now]`.
          explode: true
          in: query
          name: from
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: |-
            Unix timestamp (number of seconds since epoch) of the end of the query window.
            If not provided, the end of the query window will be 15 minutes after the `from` timestamp. If neither
            `from` nor `to` are provided, the query window will be `[now - 15m, now]`.
          explode: true
          in: query
          name: to
          required: false
          schema:
            format: int64
            type: integer
          style: form
        - description: Maximum number of results returned.
          explode: true
          in: query
          name: page[limit]
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 10000
            minimum: 1
            type: integer
          style: form
        - description: |-
            String to query the next page of results.
            This key is provided with each valid response from the API in `meta.page.after`.
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessSummariesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
      summary: Get all processes
      tags:
        - Processes
      x-menu-order: 1
      x-undo:
        type: safe
  /api/v2/roles:
    get:
      description: Returns all roles, including their names and IDs.
      operationId: ListRoles
      parameters:
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific page number to return.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: |-
            Sort roles depending on the given field. Sort order is **ascending** by default.
            Sort order is **descending** if the field is prefixed by a negative sign, for example:
            `sort=-name`.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/RolesSort'
          style: form
        - description: Filter all roles by the given string.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: List roles
      tags:
        - Roles
      x-menu-order: 1
      x-undo:
        type: safe
    post:
      description: Create a new role for your organization.
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCreateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Create role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-given:
        role:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "name": "{{ unique }}"
                     },
                     "type": "roles"
                  }
                }
          step: there is a valid "role" in the system
      x-menu-order: 2
      x-undo:
        operationId: DeleteRole
        parameters:
          - name: role_id
            source: data.id
        type: unsafe
  /api/v2/roles/{role_id}:
    delete:
      description: Disables a role.
      operationId: DeleteRole
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Delete role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-menu-order: 5
      x-undo:
        type: idempotent
    get:
      description: Get a role in the organization specified by the role’s `role_id`.
      operationId: GetRole
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: safe
    patch:
      description: Edit a role. Can only be used with application keys belonging to
        administrators.
      operationId: UpdateRole
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleUpdateResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
      summary: Update a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
  /api/v2/roles/{role_id}/permissions:
    delete:
      description: Removes a permission from a role.
      operationId: RemovePermissionFromRole
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToPermission'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Revoke permission
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-menu-order: 8
      x-undo:
        type: idempotent
    get:
      description: Returns a list of all permissions for a single role.
      operationId: ListRolePermissions
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: List permissions for a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: safe
    post:
      description: Adds a permission to a role.
      operationId: AddPermissionToRole
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToPermission'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Grant permission to a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-given:
        permission_role:
          parameters:
            - name: role_id
              source: role.data.id
            - name: body
              value: |-
                {
                  "data": {
                    "id": "{{ permission.id }}",
                    "type": "{{ permission.type }}"
                  }
                }
          step: the "permission" is granted to the "role"
      x-menu-order: 7
      x-undo:
        type: safe
  /api/v2/roles/{role_id}/users:
    delete:
      description: Removes a user from a role.
      operationId: RemoveUserFromRole
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Remove a user from a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-menu-order: 11
      x-undo:
        type: idempotent
    get:
      description: Gets all users of a role.
      operationId: ListRoleUsers
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific page number to return.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: |-
            User attribute to order results by. Sort order is **ascending** by default.
            Sort order is **descending** if the field is prefixed by a negative sign,
            for example `sort=-name`. Options: `name`, `email`, `status`.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            default: name
            type: string
          style: form
        - description: Filter all users by the given string. Defaults to no filtering.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get all users of a role
      tags:
        - Roles
      x-menu-order: 9
      x-undo:
        type: safe
    post:
      description: Adds a user to a role.
      operationId: AddUserToRole
      parameters:
        - description: The ID of the role.
          explode: false
          in: path
          name: role_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Add a user to a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-given:
        permission_role:
          parameters:
            - name: role_id
              source: role.data.id
            - name: body
              value: |-
                {
                  "data": {
                    "id": "{{ user.data.id }}",
                    "type": "{{ user.data.type }}"
                  }
                }
          step: the "user" has the "role"
      x-menu-order: 10
      x-undo:
        type: safe
  /api/v2/security_monitoring/configuration/security_filters:
    get:
      description: Get the list of configured security filters with their definitions.
      operationId: ListSecurityFilters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFiltersResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Get all security filters
      tags:
        - Security Monitoring
      x-undo:
        type: safe
    post:
      description: |-
        Create a security filter.

        See the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)
        for more examples.
      operationId: CreateSecurityFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityFilterCreateRequest'
        description: The definition of the new security filter.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Create a security filter
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-given:
        security_filter:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "type": "security_filters",
                    "attributes": {
                      "name": "{{ unique }}",
                      "query": "service:{{ unique_alnum }}",
                      "exclusion_filters":[
                        {
                          "name": "Exclude logs from staging",
                          "query": "source:staging"
                        }
                     ],
                      "filtered_data_type":"logs",
                      "is_enabled": true
                     }
                  }
                }
          step: there is a valid "security_filter" in the system
      x-undo:
        operationId: DeleteSecurityFilter
        parameters:
          - name: security_filter_id
            source: data.id
        type: unsafe
  /api/v2/security_monitoring/configuration/security_filters/{security_filter_id}:
    delete:
      description: Delete a specific security filter.
      operationId: DeleteSecurityFilter
      parameters:
        - description: The ID of the security filter.
          explode: false
          in: path
          name: security_filter_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Delete a security filter
      tags:
        - Security Monitoring
      x-undo:
        type: idempotent
    get:
      description: |-
        Get the details of a specific security filter.

        See the [security filter guide](https://docs.datadoghq.com/security_platform/guide/how-to-setup-security-filters-using-security-monitoring-api/)
        for more examples.
      operationId: GetSecurityFilter
      parameters:
        - description: The ID of the security filter.
          explode: false
          in: path
          name: security_filter_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Get a security filter
      tags:
        - Security Monitoring
      x-undo:
        type: safe
    patch:
      description: |-
        Update a specific security filter.
        Returns the security filter object when the request is successful.
      operationId: UpdateSecurityFilter
      parameters:
        - description: The ID of the security filter.
          explode: false
          in: path
          name: security_filter_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityFilterUpdateRequest'
        description: New definition of the security filter.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityFilterResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Concurrent Modification
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      summary: Update a security filter
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
  /api/v2/security_monitoring/rules:
    get:
      description: List rules.
      operationId: ListSecurityMonitoringRules
      parameters:
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific page number to return.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringListRulesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
      summary: List rules
      tags:
        - Security Monitoring
      x-menu-order: 1
      x-undo:
        type: safe
    post:
      description: Create a detection rule.
      operationId: CreateSecurityMonitoringRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleCreatePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
      summary: Create a detection rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-given:
        security_rule:
          parameters:
            - name: body
              value: |-
                {
                  "name": "{{ unique }}",
                  "queries": [{
                    "query": "@test:true",
                    "aggregation": "count",
                    "groupByFields": [],
                    "distinctFields": [],
                    "metric": ""
                  }],
                  "filters": [],
                  "cases": [{
                    "name": "",
                    "status": "info",
                    "condition": "a > 0",
                    "notifications": []
                  }],
                  "options": {
                    "evaluationWindow": 900,
                    "keepAlive": 3600,
                    "maxSignalDuration": 86400
                  },
                  "message": "Test rule",
                  "tags": [],
                  "isEnabled": true
                }
          step: there is a valid "security_rule" in the system
      x-menu-order: 2
      x-undo:
        operationId: DeleteSecurityMonitoringRule
        parameters:
          - name: rule_id
            source: id
        type: unsafe
  /api/v2/security_monitoring/rules/{rule_id}:
    delete:
      description: Delete an existing rule. Default rules cannot be deleted.
      operationId: DeleteSecurityMonitoringRule
      parameters:
        - description: The ID of the rule.
          explode: false
          in: path
          name: rule_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an existing rule
      tags:
        - Security Monitoring
      x-menu-order: 5
      x-undo:
        type: idempotent
    get:
      description: Get a rule's details.
      operationId: GetSecurityMonitoringRule
      parameters:
        - description: The ID of the rule.
          explode: false
          in: path
          name: rule_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get a rule's details
      tags:
        - Security Monitoring
      x-menu-order: 3
      x-undo:
        type: safe
    put:
      description: |-
        Update an existing rule. When updating `cases`, `queries` or `options`, the whole field
        must be included. For example, when modifying a query all queries must be included.
        Default rules can only be updated to be enabled and to change notifications.
      operationId: UpdateSecurityMonitoringRule
      parameters:
        - description: The ID of the rule.
          explode: false
          in: path
          name: rule_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringRuleUpdatePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Concurrent Modification
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update an existing rule
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
  /api/v2/security_monitoring/signals:
    get:
      description: |-
        The list endpoint returns security signals that match a search query.
        Both this endpoint and the POST endpoint can be used interchangeably when listing
        security signals.
      operationId: ListSecurityMonitoringSignals
      parameters:
        - description: The search query for security signals.
          example: security:attack status:high
          explode: true
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
          style: form
        - description: The minimum timestamp for requested security signals.
          example: 2019-01-02T09:42:36.320Z
          explode: true
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: The maximum timestamp for requested security signals.
          example: 2019-01-03T09:42:36.320Z
          explode: true
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: The order of the security signals in results.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SecurityMonitoringSignalsSort'
          style: form
        - description: A list of results using the cursor provided in the previous query.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          explode: true
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
          style: form
        - description: The maximum number of security signals in the response.
          example: 25
          explode: true
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
      summary: Get a quick list of security signals
      tags:
        - Security Monitoring
      x-menu-order: 7
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/security_monitoring/signals/search:
    post:
      description: |-
        Returns security signals that match a search query.
        Both this endpoint and the GET endpoint can be used interchangeably for listing
        security signals.
      operationId: SearchSecurityMonitoringSignals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMonitoringSignalListRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Authorized
      summary: Get a list of security signals
      tags:
        - Security Monitoring
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/services:
    get:
      description: Get all incident services uploaded for the requesting user's organization.
        If the `include[users]` query parameter is provided, the included attribute
        will contain the users related to these incident services.
      operationId: ListIncidentServices
      parameters:
        - description: Specifies which types of related objects should be included in
            the response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            $ref: '#/components/schemas/IncidentRelatedObject'
          style: form
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific offset to use as the beginning of the returned page.
          explode: true
          in: query
          name: page[offset]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: A search query that filters services by name.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            example: ExampleServiceName
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServicesResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get a list of all incident services
      tags:
        - Incident Services
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Creates a new incident service.
      operationId: CreateIncidentService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentServiceCreateRequest'
        description: Incident Service Payload.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: CREATED
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Create a new incident service
      tags:
        - Incident Services
      x-codegen-request-body-name: body
      x-given:
        service:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "name": "{{ unique }}"
                     },
                     "type": "services"
                  }
                }
          step: there is a valid "service" in the system
      x-undo:
        operationId: DeleteIncidentService
        parameters:
          - name: service_id
            source: data.id
        type: unsafe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/services/{service_id}:
    delete:
      description: Deletes an existing incident service.
      operationId: DeleteIncidentService
      parameters:
        - description: The ID of the incident service.
          explode: false
          in: path
          name: service_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an existing incident service
      tags:
        - Incident Services
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: |-
        Get details of an incident service. If the `include[users]` query parameter is provided,
        the included attribute will contain the users related to these incident services.
      operationId: GetIncidentService
      parameters:
        - description: The ID of the incident service.
          explode: false
          in: path
          name: service_id
          required: true
          schema:
            type: string
          style: simple
        - description: Specifies which types of related objects should be included in
            the response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            $ref: '#/components/schemas/IncidentRelatedObject'
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get details of an incident service
      tags:
        - Incident Services
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Updates an existing incident service. Only provide the attributes
        which should be updated as this request is a partial update.
      operationId: UpdateIncidentService
      parameters:
        - description: The ID of the incident service.
          explode: false
          in: path
          name: service_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentServiceUpdateRequest'
        description: Incident Service Payload.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update an existing incident service
      tags:
        - Incident Services
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/teams:
    get:
      description: Get all incident teams for the requesting user's organization.
        If the `include[users]` query parameter is provided, the included attribute
        will contain the users related to these incident teams.
      operationId: ListIncidentTeams
      parameters:
        - description: Specifies which types of related objects should be included in
            the response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            $ref: '#/components/schemas/IncidentRelatedObject'
          style: form
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific offset to use as the beginning of the returned page.
          explode: true
          in: query
          name: page[offset]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: A search query that filters teams by name.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            example: ExampleTeamName
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get a list of all incident teams
      tags:
        - Incident Teams
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Creates a new incident team.
      operationId: CreateIncidentTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTeamCreateRequest'
        description: Incident Team Payload.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: CREATED
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Create a new incident team
      tags:
        - Incident Teams
      x-codegen-request-body-name: body
      x-given:
        team:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "name": "{{ unique }}"
                     },
                     "type": "teams"
                  }
                }
          step: there is a valid "team" in the system
      x-undo:
        operationId: DeleteIncidentTeam
        parameters:
          - name: team_id
            source: data.id
        type: unsafe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/teams/{team_id}:
    delete:
      description: Deletes an existing incident team.
      operationId: DeleteIncidentTeam
      parameters:
        - description: The ID of the incident team.
          explode: false
          in: path
          name: team_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Delete an existing incident team
      tags:
        - Incident Teams
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: |-
        Get details of an incident team. If the `include[users]` query parameter is provided,
        the included attribute will contain the users related to these incident teams.
      operationId: GetIncidentTeam
      parameters:
        - description: The ID of the incident team.
          explode: false
          in: path
          name: team_id
          required: true
          schema:
            type: string
          style: simple
        - description: Specifies which types of related objects should be included in
            the response.
          explode: true
          in: query
          name: include
          required: false
          schema:
            $ref: '#/components/schemas/IncidentRelatedObject'
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Get details of an incident team
      tags:
        - Incident Teams
      x-undo:
        type: safe
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Updates an existing incident team. Only provide the attributes
        which should be updated as this request is a partial update.
      operationId: UpdateIncidentTeam
      parameters:
        - description: The ID of the incident team.
          explode: false
          in: path
          name: team_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTeamUpdateRequest'
        description: Incident Team Payload.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
      summary: Update an existing incident team
      tags:
        - Incident Teams
      x-codegen-request-body-name: body
      x-undo:
        type: idempotent
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/user_invitations:
    post:
      description: Sends emails to one or more users inviting them to join the organization.
      operationId: SendInvitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitationsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationsResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Send invitation emails
      tags:
        - Users
      x-codegen-request-body-name: body
      x-given:
        user_invitation:
          parameters:
            - name: body
              value: |-
                {
                  "data": [
                    {
                      "relationships": {"user": {"data": {
                        "id": "{{ user.data.id }}",
                        "type": "{{ user.data.type }}"
                      }}},
                      "type": "user_invitations"
                    }
                  ]
                }
          source: data[0]
          step: the "user" has a "user_invitation"
      x-menu-order: 8
      x-undo:
        type: safe
  /api/v2/user_invitations/{user_invitation_uuid}:
    get:
      description: Returns a single user invitation by its UUID.
      operationId: GetInvitation
      parameters:
        - description: The UUID of the user invitation.
          explode: false
          in: path
          name: user_invitation_uuid
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get a user invitation
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 9
      x-undo:
        type: safe
  /api/v2/users:
    get:
      description: |-
        Get the list of all users in the organization. This list includes
        all users even if they are deactivated or unverified.
      operationId: ListUsers
      parameters:
        - description: Size for a given page.
          explode: true
          in: query
          name: page[size]
          required: false
          schema:
            default: 10
            example: 10
            format: int64
            type: integer
          style: form
        - description: Specific page number to return.
          explode: true
          in: query
          name: page[number]
          required: false
          schema:
            default: 0
            example: 0
            format: int64
            type: integer
          style: form
        - description: |-
            User attribute to order results by. Sort order is ascending by default.
            Sort order is descending if the field
            is prefixed by a negative sign, for example `sort=-name`. Options: `name`,
            `modified_at`, `user_count`.
          explode: true
          in: query
          name: sort
          required: false
          schema:
            default: name
            example: name
            type: string
          style: form
        - description: 'Direction of sort. Options: `asc`, `desc`.'
          explode: true
          in: query
          name: sort_dir
          required: false
          schema:
            $ref: '#/components/schemas/QuerySortOrder'
          style: form
        - description: Filter all users by the given string. Defaults to no filtering.
          explode: true
          in: query
          name: filter
          required: false
          schema:
            type: string
          style: form
        - description: |-
            Filter on status attribute.
            Comma separated list, with possible values `Active`, `Pending`, and `Disabled`.
            Defaults to no filtering.
          explode: true
          in: query
          name: filter[status]
          required: false
          schema:
            example: Active
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: List all users
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 1
      x-undo:
        type: safe
    post:
      description: Create a user for your organization.
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
      summary: Create a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-given:
        user:
          parameters:
            - name: body
              value: |-
                {
                  "data": {
                    "attributes": {
                      "email": "{{ unique }}@datadoghq.com",
                      "title": "user title"
                     },
                     "type": "users"
                  }
                }
          step: there is a valid "user" in the system
      x-menu-order: 2
      x-undo:
        operationId: DisableUser
        parameters:
          - name: user_id
            source: data.id
        type: unsafe
  /api/v2/users/{user_id}:
    delete:
      description: |-
        Disable a user. Can only be used with an application key belonging
        to an administrator user.
      operationId: DisableUser
      parameters:
        - description: The ID of the user.
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            type: string
          style: simple
      responses:
        "204":
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Disable a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 5
      x-undo:
        type: idempotent
    get:
      description: Get a user in the organization specified by the user’s `user_id`.
      operationId: GetUser
      parameters:
        - description: The ID of the user.
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK for get user
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get user details
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 3
      x-undo:
        type: safe
    patch:
      description: |-
        Edit a user. Can only be used with an application key belonging
        to an administrator user.
      operationId: UpdateUser
      parameters:
        - description: The ID of the user.
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
      summary: Update a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 4
      x-undo:
        type: idempotent
  /api/v2/users/{user_id}/orgs:
    get:
      description: |-
        Get a user organization. Returns the user information and all organizations
        joined by this user.
      operationId: ListUserOrganizations
      parameters:
        - description: The ID of the user.
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get a user organization
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 6
      x-undo:
        type: safe
  /api/v2/users/{user_id}/permissions:
    get:
      description: |-
        Get a user permission set. Returns a list of the user’s permissions
        granted by the associated user's roles.
      operationId: ListUserPermissions
      parameters:
        - description: The ID of the user.
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            example: 00000000-0000-0000-0000-000000000000
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
      summary: Get a user permissions
      tags:
        - Users
      x-codegen-request-body-name: body
      x-menu-order: 7
      x-undo:
        type: safe
components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters:
    APIKeyFilterCreatedAtEndParameter:
      description: Only include API keys created on or before the specified date.
      explode: true
      in: query
      name: filter[created_at][end]
      required: false
      schema:
        example: 2020-11-24T18:46:21+00:00
        type: string
      style: form
    APIKeyFilterCreatedAtStartParameter:
      description: Only include API keys created on or after the specified date.
      explode: true
      in: query
      name: filter[created_at][start]
      required: false
      schema:
        example: 2020-11-24T18:46:21+00:00
        type: string
      style: form
    APIKeyFilterModifiedAtEndParameter:
      description: Only include API keys modified on or before the specified date.
      explode: true
      in: query
      name: filter[modified_at][end]
      required: false
      schema:
        example: 2020-11-24T18:46:21+00:00
        type: string
      style: form
    APIKeyFilterModifiedAtStartParameter:
      description: Only include API keys modified on or after the specified date.
      explode: true
      in: query
      name: filter[modified_at][start]
      required: false
      schema:
        example: 2020-11-24T18:46:21+00:00
        type: string
      style: form
    APIKeyFilterParameter:
      description: Filter API keys by the specified string.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: string
      style: form
    APIKeyId:
      description: The ID of the API key.
      explode: false
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
      style: simple
    APIKeyIncludeParameter:
      description: Comma separated list of resource paths for related resources to
        include in the response. Supported resource paths are `created_by` and `modified_by`.
      explode: true
      in: query
      name: include
      required: false
      schema:
        example: created_by,modified_by
        type: string
      style: form
    APIKeysSortParameter:
      description: |-
        API key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      explode: true
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/APIKeysSort'
      style: form
    ApplicationKeyFilterCreatedAtEndParameter:
      description: Only include application keys created on or before the specified
        date.
      explode: true
      in: query
      name: filter[created_at][end]
      required: false
      schema:
        example: 2020-11-24T18:46:21+00:00
        type: string
      style: form
    ApplicationKeyFilterCreatedAtStartParameter:
      description: Only include application keys created on or after the specified
        date.
      explode: true
      in: query
      name: filter[created_at][start]
      required: false
      schema:
        example: 2020-11-24T18:46:21+00:00
        type: string
      style: form
    ApplicationKeyFilterParameter:
      description: Filter application keys by the specified string.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: string
      style: form
    ApplicationKeyId:
      description: The ID of the application key.
      explode: false
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
      style: simple
    ApplicationKeyIncludeParameter:
      description: Resource path for related resources to include in the response.
        Only `owned_by` is supported.
      explode: true
      in: query
      name: include
      required: false
      schema:
        example: owned_by
        type: string
      style: form
    ApplicationKeysSortParameter:
      description: |-
        Application key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      explode: true
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationKeysSort'
      style: form
    ArchiveID:
      description: The ID of the archive.
      explode: false
      in: path
      name: archive_id
      required: true
      schema:
        type: string
      style: simple
    IncidentIDPathParameter:
      description: The UUID the incident.
      explode: false
      in: path
      name: incident_id
      required: true
      schema:
        type: string
      style: simple
    IncidentIncludeQueryParameter:
      description: Specifies which types of related objects should be included in
        the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentRelatedObject'
        type: array
      style: form
    IncidentServiceIDPathParameter:
      description: The ID of the incident service.
      explode: false
      in: path
      name: service_id
      required: true
      schema:
        type: string
      style: simple
    IncidentServiceIncludeQueryParameter:
      description: Specifies which types of related objects should be included in
        the response.
      explode: true
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
      style: form
    IncidentServiceSearchQueryParameter:
      description: A search query that filters services by name.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        example: ExampleServiceName
        type: string
      style: form
    IncidentTeamIDPathParameter:
      description: The ID of the incident team.
      explode: false
      in: path
      name: team_id
      required: true
      schema:
        type: string
      style: simple
    IncidentTeamIncludeQueryParameter:
      description: Specifies which types of related objects should be included in
        the response.
      explode: true
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
      style: form
    IncidentTeamSearchQueryParameter:
      description: A search query that filters teams by name.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        example: ExampleTeamName
        type: string
      style: form
    MetricID:
      description: The name of the log-based metric.
      explode: false
      in: path
      name: metric_id
      required: true
      schema:
        type: string
      style: simple
    MetricName:
      description: The name of the metric.
      example: dist.http.endpoint.request
      explode: false
      in: path
      name: metric_name
      required: true
      schema:
        type: string
      style: simple
    PageNumber:
      description: Specific page number to return.
      explode: true
      in: query
      name: page[number]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
      style: form
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      explode: true
      in: query
      name: page[offset]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
      style: form
    PageSize:
      description: Size for a given page.
      explode: true
      in: query
      name: page[size]
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
      style: form
    RoleID:
      description: The ID of the role.
      explode: false
      in: path
      name: role_id
      required: true
      schema:
        type: string
      style: simple
    SecurityFilterID:
      description: The ID of the security filter.
      explode: false
      in: path
      name: security_filter_id
      required: true
      schema:
        type: string
      style: simple
    SecurityMonitoringRuleID:
      description: The ID of the rule.
      explode: false
      in: path
      name: rule_id
      required: true
      schema:
        type: string
      style: simple
    UserID:
      description: The ID of the user.
      explode: false
      in: path
      name: user_id
      required: true
      schema:
        example: 00000000-0000-0000-0000-000000000000
        type: string
      style: simple
  requestBodies: {}
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    ConcurrentModificationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Concurrent Modification
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Unauthorized
  schemas:
    ##### v1


    AWSAccount:
      description: Returns the AWS account associated with this integration.
      example:
        access_key_id: access_key_id
        role_name: DatadogAWSIntegrationRole
        account_id: "1234567"
        excluded_regions:
          - us-east-1
          - us-west-2
        filter_tags:
          - <KEY>:<VALUE>
        secret_access_key: secret_access_key
        account_specific_namespace_rules:
          auto_scaling: false
          opswork: false
        host_tags:
          - <KEY>:<VALUE>
      properties:
        access_key_id:
          description: Your AWS access key ID. Only required if your AWS account is
            a GovCloud or China account.
          type: string
        account_id:
          description: Your AWS Account ID without dashes.
          example: "1234567"
          type: string
        account_specific_namespace_rules:
          additionalProperties:
            description: A list of additional properties.
            type: boolean
          description: |-
            An object, (in the form `{"namespace1":true/false, "namespace2":true/false}`),
            that enables or disables metric collection for specific AWS namespaces for this
            AWS account only.
          example:
            auto_scaling: false
            opswork: false
          type: object
        excluded_regions:
          description: An array of AWS regions to exclude from metrics collection.
          example:
            - us-east-1
            - us-west-2
          items:
            description: Regions to exclude.
            type: string
          type: array
        filter_tags:
          description: |-
            The array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2.
            Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.
            Only hosts that match one of the defined tags
            will be imported into Datadog. The rest will be ignored.
            Host matching a given tag can also be excluded by adding `!` before the tag.
            For example, `env:production,instance-type:c1.*,!region:us-east-1`
          example:
            - <KEY>:<VALUE>
          items:
            description: The list of the filter_tags.
            type: string
          type: array
        host_tags:
          description: |-
            Array of tags (in the form `key:value`) to add to all hosts
            and metrics reporting through this integration.
          example:
            - <KEY>:<VALUE>
          items:
            description: The list of the the host_tags.
            type: string
          type: array
        role_name:
          description: Your Datadog role delegation name.
          example: DatadogAWSIntegrationRole
          type: string
        secret_access_key:
          description: Your AWS secret access key. Only required if your AWS account
            is a GovCloud or China account.
          type: string
      type: object
    AWSAccountAndLambdaRequest:
      description: AWS account ID and Lambda ARN.
      example:
        lambda_arn: arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
        account_id: "1234567"
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: "1234567"
          type: string
        lambda_arn:
          description: ARN of the Datadog Lambda created during the Datadog-Amazon
            Web services Log collection setup.
          example: arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
          type: string
      required:
        - account_id
        - lambda_arn
      type: object
    AWSAccountCreateResponse:
      description: The Response returned by the AWS Create Account call.
      example:
        external_id: external_id
      properties:
        external_id:
          description: AWS external_id.
          type: string
      type: object
    AWSAccountDeleteRequest:
      description: List of AWS accounts to delete.
      example:
        access_key_id: access_key_id
        role_name: DatadogAWSIntegrationRole
        account_id: "1234567"
      properties:
        access_key_id:
          description: Your AWS access key ID. Only required if your AWS account is
            a GovCloud or China account.
          type: string
        account_id:
          description: Your AWS Account ID without dashes.
          example: "1234567"
          type: string
        role_name:
          description: Your Datadog role delegation name.
          example: DatadogAWSIntegrationRole
          type: string
      type: object
    AWSAccountListResponse:
      description: List of enabled AWS accounts.
      example:
        accounts:
          - access_key_id: access_key_id
            role_name: DatadogAWSIntegrationRole
            account_id: "1234567"
            excluded_regions:
              - us-east-1
              - us-west-2
            filter_tags:
              - <KEY>:<VALUE>
            secret_access_key: secret_access_key
            account_specific_namespace_rules:
              auto_scaling: false
              opswork: false
            host_tags:
              - <KEY>:<VALUE>
          - access_key_id: access_key_id
            role_name: DatadogAWSIntegrationRole
            account_id: "1234567"
            excluded_regions:
              - us-east-1
              - us-west-2
            filter_tags:
              - <KEY>:<VALUE>
            secret_access_key: secret_access_key
            account_specific_namespace_rules:
              auto_scaling: false
              opswork: false
            host_tags:
              - <KEY>:<VALUE>
      properties:
        accounts:
          description: List of enabled AWS accounts.
          items:
            $ref: '#/components/schemas/AWSAccount'
          type: array
      type: object
    AWSLogsAsyncError:
      description: Description of errors.
      example:
        code: no_such_config
        message: AWS account 12345 has no lambda config to update
      properties:
        code:
          description: Code properties
          example: no_such_config
          type: string
        message:
          description: Message content.
          example: AWS account 12345 has no lambda config to update
          type: string
      type: object
    AWSLogsAsyncResponse:
      description: A list of all Datadog-AWS logs integrations available in your Datadog
        organization.
      example:
        errors:
          - code: no_such_config
            message: AWS account 12345 has no lambda config to update
          - code: no_such_config
            message: AWS account 12345 has no lambda config to update
        status: created
      properties:
        errors:
          description: List of errors.
          items:
            $ref: '#/components/schemas/AWSLogsAsyncError'
          type: array
        status:
          description: Status of the properties.
          example: created
          type: string
      type: object
    AWSLogsLambda:
      description: Description of the Lambdas.
      properties:
        arn:
          description: Available ARN IDs.
          type: string
      type: object
    AWSLogsListResponse:
      description: A list of all Datadog-AWS logs integrations available in your Datadog
        organization.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: "1234567"
          type: string
        lambdas:
          description: List of ARNs configured in your Datadog account.
          example:
            - arn: arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
          items:
            $ref: '#/components/schemas/AWSLogsLambda'
          type: array
        services:
          description: Array of services IDs.
          example:
            - s3
            - elb
            - elbv2
            - cloudfront
            - redshift
            - lambda
          items:
            description: Description of the services.
            type: string
          type: array
      type: object
    AWSLogsListServicesResponse:
      description: The list of current AWS services for which Datadog offers automatic
        log collection.
      properties:
        id:
          description: Key value in returned object.
          example: s3
          type: string
        label:
          description: Name of service available for configuration with Datadog logs.
          example: S3 Access Logs
          type: string
      type: object
    AWSLogsServicesRequest:
      description: A list of current AWS services for which Datadog offers automatic
        log collection.
      example:
        account_id: "1234567"
        services:
          - s3
          - elb
          - elbv2
          - cloudfront
          - redshift
          - lambda
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: "1234567"
          type: string
        services:
          description: Array of services IDs set to enable automatic log collection.
            Discover the list of available services with the get list of AWS log ready
            services API endpoint.
          example:
            - s3
            - elb
            - elbv2
            - cloudfront
            - redshift
            - lambda
          items:
            description: Description of services.
            type: string
          type: array
      required:
        - account_id
        - services
      type: object
    AWSNamespace:
      description: The namespace associated with the tag filter entry.
      enum:
        - elb
        - application_elb
        - sqs
        - rds
        - custom
        - network_elb
        - lambda
      type: string
      x-enum-varnames:
        - ELB
        - APPLICATION_ELB
        - SQS
        - RDS
        - CUSTOM
        - NETWORK_ELB
        - LAMBDA
    AWSTagFilter:
      description: A tag filter.
      example:
        tag_filter_str: prod*
      properties:
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
        tag_filter_str:
          description: The tag filter string.
          example: prod*
          type: string
      type: object
    AWSTagFilterCreateRequest:
      description: The objects used to set an AWS tag filter.
      example:
        tag_filter_str: prod*
        account_id: "1234567"
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: "1234567"
          type: string
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
        tag_filter_str:
          description: The tag filter string.
          example: prod*
          type: string
      type: object
    AWSTagFilterDeleteRequest:
      description: The objects used to delete an AWS tag filter entry.
      example:
        account_id: FAKEAC0FAKEAC2FAKEAC
      properties:
        account_id:
          description: The unique identifier of your AWS account.
          example: FAKEAC0FAKEAC2FAKEAC
          type: string
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
      type: object
    AWSTagFilterListResponse:
      description: An array of tag filter rules by `namespace` and tag filter string.
      example:
        filters:
          - tag_filter_str: prod*
          - tag_filter_str: prod*
      properties:
        filters:
          description: An array of tag filters.
          items:
            $ref: '#/components/schemas/AWSTagFilter'
          type: array
      type: object
    AccessRole:
      default: st
      description: The access role of the user. Options are **st** (standard user),
        **adm** (admin user), or **ro** (read-only user).
      enum:
        - st
        - adm
        - ro
        - ERROR
      example: st
      type: string
      x-enum-varnames:
        - STANDARD
        - ADMIN
        - READ_ONLY
        - ERROR
    AlertGraphWidgetDefinition:
      description: Alert graphs are timeseries graphs showing the current status of
        any monitor defined on your system.
      properties:
        alert_id:
          description: ID of the alert to use in the widget.
          example: ""
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: The title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/AlertGraphWidgetDefinitionType'
        viz_type:
          $ref: '#/components/schemas/WidgetVizType'
      required:
        - alert_id
        - type
        - viz_type
      type: object
    AlertGraphWidgetDefinitionType:
      default: alert_graph
      description: Type of the alert graph widget.
      enum:
        - alert_graph
      example: alert_graph
      type: string
      x-enum-varnames:
        - ALERT_GRAPH
    AlertValueWidgetDefinition:
      description: Alert values are query values showing the current value of the
        metric in any monitor defined on your system.
      properties:
        alert_id:
          description: ID of the alert to use in the widget.
          example: ""
          type: string
        precision:
          description: Number of decimal to show. If not defined, will use the raw
            value.
          format: int64
          type: integer
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of value in the widget.
          type: string
        type:
          $ref: '#/components/schemas/AlertValueWidgetDefinitionType'
        unit:
          description: Unit to display with the value.
          type: string
      required:
        - alert_id
        - type
      type: object
    AlertValueWidgetDefinitionType:
      default: alert_value
      description: Type of the alert value widget.
      enum:
        - alert_value
      example: alert_value
      type: string
      x-enum-varnames:
        - ALERT_VALUE
    ApiKey:
      description: Datadog API key.
      example:
        created: 2019-08-02 15:31:07
        name: example user
        created_by: john@example.com
        key: 1234512345123456abcabc912349abcd
      properties:
        created:
          description: Date of creation of the API key.
          example: 2019-08-02 15:31:07
          readOnly: true
          type: string
        created_by:
          description: Datadog user handle that created the API key.
          example: john@example.com
          readOnly: true
          type: string
        key:
          description: API key.
          example: 1234512345123456abcabc912349abcd
          maxLength: 32
          minLength: 32
          readOnly: true
          type: string
        name:
          description: Name of your API key.
          example: example user
          type: string
      type: object
    ApiKeyListResponse:
      description: List of API and application keys available for a given organization.
      example:
        api_keys:
          - created_by: test_user
            key: 1234512345123456abcabc912349abcd
            name: app_key
      properties:
        api_keys:
          description: Array of API keys.
          items:
            $ref: '#/components/schemas/ApiKey'
          type: array
      type: object
    ApiKeyResponse:
      description: An API key with its associated metadata.
      example:
        api_key:
          created_by: test_user
          key: 1234512345123456abcabc912349abcd
          name: app_key
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKey'
      type: object
    ApmStatsQueryColumnType:
      description: Column properties.
      properties:
        alias:
          description: A user-assigned alias for the column.
          example: Requests
          type: string
        cell_display_mode:
          $ref: '#/components/schemas/TableWidgetCellDisplayMode'
        name:
          description: Column name.
          example: Reqs
          type: string
        order:
          $ref: '#/components/schemas/WidgetSort'
      required:
        - name
      type: object
    ApmStatsQueryDefinition:
      description: The APM stats query for table and distributions widgets.
      properties:
        columns:
          description: Column properties used by the front end for display.
          items:
            $ref: '#/components/schemas/ApmStatsQueryColumnType'
          type: array
        env:
          description: Environment name.
          example: prod
          type: string
        name:
          description: Operation name associated with service.
          example: rack.request
          type: string
        primary_tag:
          description: The organization's host group name and value.
          example: datacenter:*
          type: string
        resource:
          description: Resource name.
          example: CartsController
          type: string
        row_type:
          $ref: '#/components/schemas/ApmStatsQueryRowType'
        service:
          description: Service name.
          example: web-store
          type: string
      required:
        - env
        - name
        - primary_tag
        - row_type
        - service
      type: object
    ApmStatsQueryRowType:
      description: The level of detail for the request.
      enum:
        - service
        - resource
        - span
      example: service
      type: string
      x-enum-varnames:
        - SERVICE
        - RESOURCE
        - SPAN
    ApplicationKey:
      description: An application key with its associated metadata.
      example:
        owner: example.com
        name: example user
        hash: 1234512345123459cda4eb9ced49a3d84fd0138c
      properties:
        hash:
          description: Hash of an application key.
          example: 1234512345123459cda4eb9ced49a3d84fd0138c
          maxLength: 40
          minLength: 40
          readOnly: true
          type: string
        name:
          description: Name of an application key.
          example: example user
          type: string
        owner:
          description: Owner of an application key.
          example: example.com
          readOnly: true
          type: string
      type: object
    ApplicationKeyListResponse:
      description: An application key response.
      example:
        application_keys:
          - hash: 1234512345123459cda4eb9ced49a3d84fd0138c
            name: app_key
            owner: test_user
      properties:
        application_keys:
          description: Array of application keys.
          items:
            $ref: '#/components/schemas/ApplicationKey'
          type: array
      type: object
    AuthenticationValidationResponse:
      description: Represent validation endpoint responses.
      example:
        valid: true
      properties:
        valid:
          description: Return `true` if the authentication response is valid.
          example: true
          readOnly: true
          type: boolean
      type: object
    AzureAccount:
      description: Datadog-Azure integrations configured for your organization.
      example:
        host_filters: key:value,filter:example
        tenant_name: testc44-1234-5678-9101-cc00736ftest
        new_client_id: new1c7f6-1234-5678-9101-3fcbf464test
        client_secret: testingx./Sw*g/Y33t..R1cH+hScMDt
        client_id: testc7f6-1234-5678-9101-3fcbf464test
        errors:
          - '*'
        new_tenant_name: new1c44-1234-5678-9101-cc00736ftest
      properties:
        client_id:
          description: Your Azure web application ID.
          example: testc7f6-1234-5678-9101-3fcbf464test
          type: string
        client_secret:
          description: Your Azure web application secret key.
          example: testingx./Sw*g/Y33t..R1cH+hScMDt
          type: string
        errors:
          description: Errors in your configuration.
          example:
            - '*'
          items:
            description: List of errors.
            readOnly: true
            type: string
          type: array
        host_filters:
          description: |-
            Limit the Azure instances that are pulled into Datadog by using tags.
            Only hosts that match one of the defined tags are imported into Datadog.
          example: key:value,filter:example
          type: string
        new_client_id:
          description: Your New Azure web application ID.
          example: new1c7f6-1234-5678-9101-3fcbf464test
          type: string
        new_tenant_name:
          description: Your New Azure Active Directory ID.
          example: new1c44-1234-5678-9101-cc00736ftest
          type: string
        tenant_name:
          description: Your Azure Active Directory ID.
          example: testc44-1234-5678-9101-cc00736ftest
          type: string
      type: object
    AzureAccountListResponse:
      description: Accounts configured for your organization.
      items:
        $ref: '#/components/schemas/AzureAccount'
      type: array
    CancelDowntimesByScopeRequest:
      description: Cancel downtimes according to scope.
      example:
        scope: host:myserver
      properties:
        scope:
          description: |-
            The scope(s) to which the downtime applies. For example, `host:app2`.
            Provide multiple scopes as a comma-separated list like `env:dev,env:prod`.
            The resulting downtime applies to sources that matches ALL provided scopes (`env:dev` **AND** `env:prod`).
          example: host:myserver
          type: string
      required:
        - scope
      type: object
    CanceledDowntimesIds:
      description: Object containing array of IDs of canceled downtimes.
      example:
        cancelled_ids:
          - 123456789
          - 123456790
      properties:
        cancelled_ids:
          description: ID of downtimes that were canceled.
          example:
            - 123456789
            - 123456790
          items:
            description: Integer representation of one downtime ID.
            format: int64
            type: integer
          type: array
      type: object
    ChangeWidgetDefinition:
      description: The Change graph shows you the change in a value over the time
        period chosen.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          description: |-
            Array of one request object to display in the widget.

            See the dedicated [Request JSON schema documentation](https://docs.datadoghq.com/dashboards/graphing_json/request_json)
             to learn how to build the `REQUEST_SCHEMA`.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/ChangeWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ChangeWidgetDefinitionType'
      required:
        - requests
        - type
      type: object
    ChangeWidgetDefinitionType:
      default: change
      description: Type of the change widget.
      enum:
        - change
      example: change
      type: string
      x-enum-varnames:
        - CHANGE
    ChangeWidgetRequest:
      description: Updated change widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        change_type:
          $ref: '#/components/schemas/WidgetChangeType'
        compare_to:
          $ref: '#/components/schemas/WidgetCompareTo'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        increase_good:
          description: Whether to show increase as good.
          type: boolean
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        order_by:
          $ref: '#/components/schemas/WidgetOrderBy'
        order_dir:
          $ref: '#/components/schemas/WidgetSort'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        show_present:
          description: Whether to show the present value.
          type: boolean
      type: object
    CheckCanDeleteMonitorResponse:
      description: Response of monitor IDs that can or can't be safely deleted.
      example:
        data: {}
        errors:
          key:
            - errors
            - errors
      properties:
        data:
          $ref: '#/components/schemas/CheckCanDeleteMonitorResponse_data'
        errors:
          additionalProperties:
            description: Strings denoting where a monitor is used.
            items:
              description: Asset where a monitor is used.
              type: string
            type: array
          description: A mapping of Monitor ID to strings denoting where it's used.
          type: object
      required:
        - data
      type: object
    CheckCanDeleteSLOResponse:
      description: A service level objective response containing the requested object.
      example:
        data:
          ok:
            - ok
            - ok
        errors:
          key: errors
      properties:
        data:
          $ref: '#/components/schemas/CheckCanDeleteSLOResponse_data'
        errors:
          additionalProperties:
            description: Description of the service level objective reference.
            type: string
          description: A mapping of SLO id to it's current usages.
          type: object
      type: object
    CheckStatusWidgetDefinition:
      description: Check status shows the current status or number of results for
        any check performed.
      properties:
        check:
          description: Name of the check to use in the widget.
          example: ""
          type: string
        group:
          description: Group reporting a single check.
          type: string
        group_by:
          description: List of tag prefixes to group by in the case of a cluster check.
          items:
            description: Tag prefix.
            type: string
          type: array
        grouping:
          $ref: '#/components/schemas/WidgetGrouping'
        tags:
          description: List of tags used to filter the groups reporting a cluster
            check.
          items:
            description: Tag name.
            type: string
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/CheckStatusWidgetDefinitionType'
      required:
        - check
        - grouping
        - type
      type: object
    CheckStatusWidgetDefinitionType:
      default: check_status
      description: Type of the check status widget.
      enum:
        - check_status
      example: check_status
      type: string
      x-enum-varnames:
        - CHECK_STATUS
    ContentEncoding:
      description: HTTP header used to compress the media-type
      enum:
        - gzip
        - deflate
      type: string
      x-enum-varnames:
        - gzip
        - deflate
    Dashboard:
      description: |-
        A dashboard is Datadog’s tool for visually tracking, analyzing, and displaying
        key performance metrics, which enable you to monitor the health of your infrastructure.
      example:
        template_variable_presets:
          - name: name
            template_variables:
              - name: name
                value: value
              - name: name
                value: value
          - name: name
            template_variables:
              - name: name
                value: value
              - name: name
                value: value
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        notify_list:
          - notify_list
          - notify_list
        restricted_roles:
          - restricted_roles
          - restricted_roles
        title: ""
        widgets:
          - definition:
              requests:
                fill:
                  q: system.cpu.user
              type: hostmap
        author_handle: test@datadoghq.com
        template_variables:
          - default: my-host
            prefix: host
            name: host1
          - default: my-host
            prefix: host
            name: host1
        url: /dashboard/123-abc-456/example-dashboard-title
        is_read_only: false
        id: 123-abc-456
        modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        author_handle:
          description: Identifier of the dashboard author.
          example: test@datadoghq.com
          readOnly: true
          type: string
        created_at:
          description: Creation date of the dashboard.
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of the dashboard.
          nullable: true
          type: string
        id:
          description: ID of the dashboard.
          example: 123-abc-456
          readOnly: true
          type: string
        is_read_only:
          default: false
          description: Whether this dashboard is read-only. If True, only the author
            and admins can make changes to it.
          example: false
          type: boolean
        layout_type:
          $ref: '#/components/schemas/DashboardLayoutType'
        modified_at:
          description: Modification date of the dashboard.
          format: date-time
          readOnly: true
          type: string
        notify_list:
          description: List of handles of users to notify when changes are made to
            this dashboard.
          items:
            description: User handles.
            type: string
          nullable: true
          type: array
        reflow_type:
          $ref: '#/components/schemas/DashboardReflowType'
        restricted_roles:
          description: A list of role identifiers. Only the author and users associated
            with at least one of these roles can edit this dashboard. Overrides the
            `is_read_only` property if both are present. **This feature is currently
            in beta.**
          items:
            description: A role UUID.
            type: string
          type: array
        template_variable_presets:
          description: Array of template variables saved views.
          items:
            $ref: '#/components/schemas/DashboardTemplateVariablePreset'
          nullable: true
          type: array
        template_variables:
          description: List of template variables for this dashboard.
          items:
            $ref: '#/components/schemas/DashboardTemplateVariable'
          nullable: true
          type: array
        title:
          description: Title of the dashboard.
          example: ""
          type: string
        url:
          description: The URL of the dashboard.
          example: /dashboard/123-abc-456/example-dashboard-title
          readOnly: true
          type: string
        widgets:
          description: List of widgets to display on the dashboard.
          example:
            - definition:
                requests:
                  fill:
                    q: system.cpu.user
                type: hostmap
          items:
            $ref: '#/components/schemas/Widget'
          type: array
      required:
        - layout_type
        - title
        - widgets
      type: object
    DashboardBulkActionData:
      description: Dashboard bulk action request data.
      example:
        id: 123-abc-456
        type: dashboard
      properties:
        id:
          description: Dashboard resource ID.
          example: 123-abc-456
          type: string
        type:
          $ref: '#/components/schemas/DashboardResourceType'
      required:
        - id
        - type
      type: object
    DashboardBulkActionDataList:
      description: List of dashboard bulk action request data objects.
      example:
        - id: 123-abc-456
          type: dashboard
      items:
        $ref: '#/components/schemas/DashboardBulkActionData'
      type: array
    DashboardBulkDeleteRequest:
      description: Dashboard bulk delete request body.
      example:
        data:
          - id: 123-abc-456
            type: dashboard
      properties:
        data:
          description: List of dashboard bulk action request data objects.
          example:
            - id: 123-abc-456
              type: dashboard
          items:
            $ref: '#/components/schemas/DashboardBulkActionData'
          type: array
      required:
        - data
      type: object
    DashboardDeleteResponse:
      description: Response from the delete dashboard call.
      example:
        deleted_dashboard_id: deleted_dashboard_id
      properties:
        deleted_dashboard_id:
          description: ID of the deleted dashboard.
          type: string
      type: object
    DashboardID:
      description: Dashboard resource ID.
      example: 123-abc-456
      type: string
    DashboardLayoutType:
      description: Layout type of the dashboard.
      enum:
        - ordered
        - free
      type: string
      x-enum-varnames:
        - ORDERED
        - FREE
    DashboardList:
      description: Your Datadog Dashboards.
      example:
        is_favorite: true
        dashboard_count: 0
        author:
          name: name
          handle: handle
          email: email
        created: 2000-01-23T04:56:07.000+00:00
        name: My Dashboard
        modified: 2000-01-23T04:56:07.000+00:00
        id: 6
        type: manual_dashboard_list
      properties:
        author:
          $ref: '#/components/schemas/Creator'
        created:
          description: Date of creation of the dashboard list.
          format: date-time
          readOnly: true
          type: string
        dashboard_count:
          description: The number of dashboards in the list.
          format: int64
          readOnly: true
          type: integer
        id:
          description: The ID of the dashboard list.
          format: int64
          readOnly: true
          type: integer
        is_favorite:
          description: Whether or not the list is in the favorites.
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard list.
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the dashboard list.
          example: My Dashboard
          type: string
        type:
          description: The type of dashboard list.
          example: manual_dashboard_list
          readOnly: true
          type: string
      required:
        - name
      type: object
    DashboardListDeleteResponse:
      description: Deleted dashboard details.
      example:
        deleted_dashboard_list_id: 0
      properties:
        deleted_dashboard_list_id:
          description: ID of the deleted dashboard list.
          format: int64
          type: integer
      type: object
    DashboardListListResponse:
      description: Information on your dashboard lists.
      example:
        dashboard_lists:
          - is_favorite: true
            dashboard_count: 0
            author:
              name: name
              handle: handle
              email: email
            created: 2000-01-23T04:56:07.000+00:00
            name: My Dashboard
            modified: 2000-01-23T04:56:07.000+00:00
            id: 6
            type: manual_dashboard_list
          - is_favorite: true
            dashboard_count: 0
            author:
              name: name
              handle: handle
              email: email
            created: 2000-01-23T04:56:07.000+00:00
            name: My Dashboard
            modified: 2000-01-23T04:56:07.000+00:00
            id: 6
            type: manual_dashboard_list
      properties:
        dashboard_lists:
          description: List of all your dashboard lists.
          items:
            $ref: '#/components/schemas/DashboardList'
          type: array
      type: object
    DashboardReflowType:
      description: |-
        Reflow type for a **new dashboard layout** dashboard. Set this only when layout type is 'ordered'.
        If set to 'fixed', the dashboard expects all widgets to have a layout, and if it's set to 'auto',
        widgets should not have layouts.
      enum:
        - auto
        - fixed
      type: string
      x-enum-varnames:
        - AUTO
        - FIXED
    DashboardResourceType:
      default: dashboard
      description: Dashboard resource type.
      enum:
        - dashboard
      example: dashboard
      type: string
      x-enum-varnames:
        - DASHBOARD
    DashboardRestoreRequest:
      description: Dashboard restore request body.
      example:
        data:
          - id: 123-abc-456
            type: dashboard
      properties:
        data:
          description: List of dashboard bulk action request data objects.
          example:
            - id: 123-abc-456
              type: dashboard
          items:
            $ref: '#/components/schemas/DashboardBulkActionData'
          type: array
      required:
        - data
      type: object
    DashboardSummary:
      description: Dashboard summary response.
      example:
        dashboards:
          - created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            is_read_only: true
            id: id
            modified_at: 2000-01-23T04:56:07.000+00:00
            title: title
            author_handle: author_handle
            url: url
          - created_at: 2000-01-23T04:56:07.000+00:00
            description: description
            is_read_only: true
            id: id
            modified_at: 2000-01-23T04:56:07.000+00:00
            title: title
            author_handle: author_handle
            url: url
      properties:
        dashboards:
          description: List of dashboard definitions.
          items:
            $ref: '#/components/schemas/DashboardSummaryDefinition'
          type: array
      type: object
    DashboardSummaryDefinition:
      description: Dashboard definition.
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        is_read_only: true
        id: id
        modified_at: 2000-01-23T04:56:07.000+00:00
        title: title
        author_handle: author_handle
        url: url
      properties:
        author_handle:
          description: Identifier of the dashboard author.
          type: string
        created_at:
          description: Creation date of the dashboard.
          format: date-time
          type: string
        description:
          description: Description of the dashboard.
          type: string
        id:
          description: Dashboard identifier.
          type: string
        is_read_only:
          description: Whether this dashboard is read-only. If True, only the author
            and admins can make changes to it.
          type: boolean
        layout_type:
          $ref: '#/components/schemas/DashboardLayoutType'
        modified_at:
          description: Modification date of the dashboard.
          format: date-time
          type: string
        title:
          description: Title of the dashboard.
          type: string
        url:
          description: URL of the dashboard.
          type: string
      type: object
    DashboardTemplateVariable:
      description: Template variable.
      example:
        default: my-host
        prefix: host
        name: host1
      properties:
        default:
          description: The default value for the template variable on dashboard load.
          example: my-host
          nullable: true
          type: string
        name:
          description: The name of the variable.
          example: host1
          type: string
        prefix:
          description: The tag prefix associated with the variable. Only tags with
            this prefix appear in the variable drop-down.
          example: host
          nullable: true
          type: string
      required:
        - name
      type: object
    DashboardTemplateVariablePreset:
      description: Template variables saved views.
      example:
        name: name
        template_variables:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        name:
          description: The name of the variable.
          type: string
        template_variables:
          description: List of variables.
          items:
            $ref: '#/components/schemas/DashboardTemplateVariablePresetValue'
          type: array
      type: object
    DashboardTemplateVariablePresetValue:
      description: Template variables saved views.
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of the variable.
          type: string
        value:
          description: The value of the template variable within the saved view.
          type: string
      type: object
    DeletedMonitor:
      description: Response from the delete monitor call.
      example:
        deleted_monitor_id: 0
      properties:
        deleted_monitor_id:
          description: ID of the deleted monitor.
          format: int64
          type: integer
      readOnly: true
      type: object
    DistributionWidgetDefinition:
      description: |-
        The Distribution visualization is another way of showing metrics
        aggregated across one or several tags, such as hosts.
        Unlike the heat map, a distribution graph’s x-axis is quantity rather than time.
      properties:
        legend_size:
          deprecated: true
          description: (Deprecated) The widget legend was replaced by a tooltip and
            sidebar.
          type: string
        markers:
          description: List of markers.
          items:
            $ref: '#/components/schemas/WidgetMarker'
          type: array
        requests:
          description: |-
            Array of one request object to display in the widget.

            See the dedicated [Request JSON schema documentation](https://docs.datadoghq.com/dashboards/graphing_json/request_json)
             to learn how to build the `REQUEST_SCHEMA`.
          example:
            - q: host:X tags:Y
          items:
            $ref: '#/components/schemas/DistributionWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        show_legend:
          deprecated: true
          description: (Deprecated) The widget legend was replaced by a tooltip and
            sidebar.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/DistributionWidgetDefinitionType'
        xaxis:
          $ref: '#/components/schemas/DistributionWidgetXAxis'
        yaxis:
          $ref: '#/components/schemas/DistributionWidgetYAxis'
      required:
        - requests
        - type
      type: object
    DistributionWidgetDefinitionType:
      default: distribution
      description: Type of the distribution widget.
      enum:
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - DISTRIBUTION
    DistributionWidgetRequest:
      description: Updated distribution widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetStyle'
      type: object
    DistributionWidgetXAxis:
      description: X Axis controls for the distribution widget.
      properties:
        include_zero:
          description: True includes zero.
          type: boolean
        max:
          default: auto
          description: Specifies maximum value to show on the x-axis. It takes a number,
            percentile (p90 === 90th percentile), or auto for default behavior.
          type: string
        min:
          default: auto
          description: Specifies minimum value to show on the x-axis. It takes a number,
            percentile (p90 === 90th percentile), or auto for default behavior.
          type: string
        scale:
          default: linear
          description: Specifies the scale type. Possible values are `linear`.
          type: string
      type: object
    DistributionWidgetYAxis:
      description: Y Axis controls for the distribution widget.
      properties:
        include_zero:
          description: True includes zero.
          type: boolean
        label:
          description: The label of the axis to display on the graph.
          type: string
        max:
          default: auto
          description: Specifies the maximum value to show on the y-axis. It takes
            a number, or auto for default behavior.
          type: string
        min:
          default: auto
          description: Specifies minimum value to show on the y-axis. It takes a number,
            or auto for default behavior.
          type: string
        scale:
          default: linear
          description: Specifies the scale type. Possible values are `linear` or `log`.
          type: string
      type: object
    Downtime:
      description: |-
        Downtiming gives you greater control over monitor notifications by
        allowing you to globally exclude scopes from alerting.
        Downtime settings, which can be scheduled with start and end times,
        prevent all alerting related to specified Datadog tags.
      example:
        monitor_id: 123456
        timezone: America/New_York
        downtime_type: 2
        start: 1412792983
        active: true
        message: Message on the downtime
        recurrence:
          period: 1
          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
          until_occurrences: 2
          week_days:
            - Mon
            - Tue
          until_date: 1447786293
          type: weeks
        canceled: 1412799983
        parent_id: 123
        scope:
          - env:staging
        creator_id: 123456
        updater_id: 123456
        active_child:
          monitor_id: 123456
          timezone: America/New_York
          downtime_type: 2
          start: 1412792983
          active: true
          message: Message on the downtime
          recurrence:
            period: 1
            rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
            until_occurrences: 2
            week_days:
              - Mon
              - Tue
            until_date: 1447786293
            type: weeks
          canceled: 1412799983
          parent_id: 123
          scope:
            - env:staging
          creator_id: 123456
          updater_id: 123456
          disabled: false
          end: 1412793983
          id: 1626
          monitor_tags:
            - '*'
        disabled: false
        end: 1412793983
        id: 1625
        monitor_tags:
          - '*'
      properties:
        active:
          description: If a scheduled downtime currently exists.
          example: true
          readOnly: true
          type: boolean
        active_child:
          $ref: '#/components/schemas/DowntimeChild'
        canceled:
          description: If a scheduled downtime is canceled.
          example: 1412799983
          format: int64
          nullable: true
          readOnly: true
          type: integer
        creator_id:
          description: User ID of the downtime creator.
          example: 123456
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        disabled:
          description: If a downtime has been disabled.
          example: false
          type: boolean
        downtime_type:
          description: |-
            `0` for a downtime applied on `*` or all,
            `1` when the downtime is only scoped to hosts,
            or `2` when the downtime is scoped to anything but hosts.
          example: 2
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        end:
          description: |-
            POSIX timestamp to end the downtime. If not provided,
            the downtime is in effect indefinitely until you cancel it.
          example: 1412793983
          format: int64
          nullable: true
          type: integer
        id:
          description: The downtime ID.
          example: 1625
          format: int64
          readOnly: true
          type: integer
        message:
          description: |-
            A message to include with notifications for this downtime.
            Email notifications can be sent to specific users by using the same `@username` notation as events.
          example: Message on the downtime
          type: string
        monitor_id:
          description: |-
            A single monitor to which the downtime applies.
            If not provided, the downtime applies to all monitors.
          example: 123456
          format: int64
          nullable: true
          type: integer
        monitor_tags:
          description: |-
            A comma-separated list of monitor tags. For example, tags that are applied directly to monitors,
            not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies.
            The resulting downtime applies to monitors that match ALL provided monitor tags.
            For example, `service:postgres` **AND** `team:frontend`.
          example:
            - '*'
          items:
            description: A monitor tag.
            type: string
          type: array
        parent_id:
          description: ID of the parent Downtime.
          example: 123
          format: int64
          nullable: true
          type: integer
        recurrence:
          $ref: '#/components/schemas/DowntimeRecurrence'
        scope:
          description: |-
            The scope(s) to which the downtime applies. For example, `host:app2`.
            Provide multiple scopes as a comma-separated list like `env:dev,env:prod`.
            The resulting downtime applies to sources that matches ALL provided scopes (`env:dev` **AND** `env:prod`).
          example:
            - env:staging
          items:
            description: A scope. For example, `"env:staging"`.
            type: string
          type: array
        start:
          description: |-
            POSIX timestamp to start the downtime.
            If not provided, the downtime starts the moment it is created.
          example: 1412792983
          format: int64
          type: integer
        timezone:
          description: The timezone in which to display the downtime's start and end
            times in Datadog applications.
          example: America/New_York
          type: string
        updater_id:
          description: ID of the last user that updated the downtime.
          example: 123456
          format: int32
          maximum: 2147483647
          nullable: true
          readOnly: true
          type: integer
      type: object
    DowntimeChild:
      description: |-
        The downtime object definition of the active child for the original parent recurring downtime. This
        field will only exist on recurring downtimes.
      example:
        monitor_id: 123456
        timezone: America/New_York
        downtime_type: 2
        start: 1412792983
        active: true
        message: Message on the downtime
        recurrence:
          period: 1
          rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
          until_occurrences: 2
          week_days:
            - Mon
            - Tue
          until_date: 1447786293
          type: weeks
        canceled: 1412799983
        parent_id: 123
        scope:
          - env:staging
        creator_id: 123456
        updater_id: 123456
        disabled: false
        end: 1412793983
        id: 1626
        monitor_tags:
          - '*'
      nullable: true
      properties:
        active:
          description: If a scheduled downtime currently exists.
          example: true
          readOnly: true
          type: boolean
        canceled:
          description: If a scheduled downtime is canceled.
          example: 1412799983
          format: int64
          nullable: true
          readOnly: true
          type: integer
        creator_id:
          description: User ID of the downtime creator.
          example: 123456
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        disabled:
          description: If a downtime has been disabled.
          example: false
          type: boolean
        downtime_type:
          description: |-
            `0` for a downtime applied on `*` or all,
            `1` when the downtime is only scoped to hosts,
            or `2` when the downtime is scoped to anything but hosts.
          example: 2
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        end:
          description: |-
            POSIX timestamp to end the downtime. If not provided,
            the downtime is in effect indefinitely until you cancel it.
          example: 1412793983
          format: int64
          nullable: true
          type: integer
        id:
          description: The downtime ID.
          example: 1626
          format: int64
          readOnly: true
          type: integer
        message:
          description: |-
            A message to include with notifications for this downtime.
            Email notifications can be sent to specific users by using the same `@username` notation as events.
          example: Message on the downtime
          type: string
        monitor_id:
          description: |-
            A single monitor to which the downtime applies.
            If not provided, the downtime applies to all monitors.
          example: 123456
          format: int64
          nullable: true
          type: integer
        monitor_tags:
          description: |-
            A comma-separated list of monitor tags. For example, tags that are applied directly to monitors,
            not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies.
            The resulting downtime applies to monitors that match ALL provided monitor tags.
            For example, `service:postgres` **AND** `team:frontend`.
          example:
            - '*'
          items:
            description: A monitor tag.
            type: string
          type: array
        parent_id:
          description: ID of the parent Downtime.
          example: 123
          format: int64
          nullable: true
          type: integer
        recurrence:
          $ref: '#/components/schemas/DowntimeRecurrence'
        scope:
          description: |-
            The scope(s) to which the downtime applies. For example, `host:app2`.
            Provide multiple scopes as a comma-separated list like `env:dev,env:prod`.
            The resulting downtime applies to sources that matches ALL provided scopes (`env:dev` **AND** `env:prod`).
          example:
            - env:staging
          items:
            description: A scope. For example, `"env:staging"`.
            type: string
          type: array
        start:
          description: |-
            POSIX timestamp to start the downtime.
            If not provided, the downtime starts the moment it is created.
          example: 1412792983
          format: int64
          type: integer
        timezone:
          description: The timezone in which to display the downtime's start and end
            times in Datadog applications.
          example: America/New_York
          type: string
        updater_id:
          description: ID of the last user that updated the downtime.
          example: 123456
          format: int32
          maximum: 2147483647
          nullable: true
          readOnly: true
          type: integer
      readOnly: true
      type: object
    DowntimeRecurrence:
      description: An object defining the recurrence of the downtime.
      example:
        period: 1
        rrule: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
        until_occurrences: 2
        week_days:
          - Mon
          - Tue
        until_date: 1447786293
        type: weeks
      nullable: true
      properties:
        period:
          description: |-
            How often to repeat as an integer.
            For example, to repeat every 3 days, select a type of `days` and a period of `3`.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
        rrule:
          description: |-
            The `RRULE` standard for defining recurring events (**requires to set "type" to rrule**)
            For example, to have a recurring event on the first day of each month, set the type to `rrule` and set the `FREQ` to `MONTHLY` and `BYMONTHDAY` to `1`.
            Most common `rrule` options from the [iCalendar Spec](https://tools.ietf.org/html/rfc5545) are supported.

            **Note**: Attributes specifying the duration in `RRULE` are not supported (for example, `DTSTART`, `DTEND`, `DURATION`).
            More examples available in this [downtime guide](https://docs.datadoghq.com/monitors/guide/supress-alert-with-downtimes/?tab=api)
          example: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
          type: string
        type:
          description: The type of recurrence. Choose from `days`, `weeks`, `months`,
            `years`, `rrule`.
          example: weeks
          type: string
        until_date:
          description: |-
            The date at which the recurrence should end as a POSIX timestamp.
            `until_occurences` and `until_date` are mutually exclusive.
          example: 1447786293
          format: int64
          nullable: true
          type: integer
        until_occurrences:
          description: |-
            How many times the downtime is rescheduled.
            `until_occurences` and `until_date` are mutually exclusive.
          example: 2
          format: int32
          maximum: 2147483647
          nullable: true
          type: integer
        week_days:
          description: |-
            A list of week days to repeat on. Choose from `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`.
            Only applicable when type is weeks. First letter must be capitalized.
          example:
            - Mon
            - Tue
          items:
            description: A day of the week, formatted as `Mon`, `Tue`, `Wed`, `Thu`,
              `Fri`, `Sat` or `Sun`.
            type: string
          type: array
      type: object
    Event:
      description: Object representing an event.
      example:
        device_name: device_name
        payload: '{}'
        host: host
        id: 6
        text: Oh boy!
        priority: normal
        source_type_name: source_type_name
        title: Did you hear the news today?
        alert_type: info
        url: url
        date_happened: 0
        tags:
          - environment:test
      properties:
        alert_type:
          $ref: '#/components/schemas/EventAlertType'
        date_happened:
          description: |-
            POSIX timestamp of the event. Must be sent as an integer (i.e. no quotes).
            Limited to events no older than 7 days.
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        host:
          description: |-
            Host name to associate with the event.
            Any tags associated with the host are also applied to this event.
          type: string
        id:
          description: Integer ID of the event.
          format: int64
          readOnly: true
          type: integer
        payload:
          description: Payload of the event.
          example: '{}'
          readOnly: true
          type: string
        priority:
          $ref: '#/components/schemas/EventPriority'
        source_type_name:
          description: |-
            The type of event being posted. Option examples include nagios, hudson, jenkins, my_apps, chef, puppet, git, bitbucket, etc.
            A complete list of source attribute values [available here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          type: string
        tags:
          description: A list of tags to apply to the event.
          example:
            - environment:test
          items:
            description: A tag.
            type: string
          type: array
        text:
          description: |-
            The body of the event. Limited to 4000 characters. The text supports markdown.
            To use markdown in the event text, start the text block with `%%% \n` and end the text block with `\n %%%`.
            Use `msg_text` with the Datadog Ruby library.
          example: Oh boy!
          maxLength: 4000
          type: string
        title:
          description: The event title. Limited to 100 characters. Use `msg_title`
            with the Datadog Ruby library.
          example: Did you hear the news today?
          maxLength: 100
          type: string
        url:
          description: URL of the event.
          readOnly: true
          type: string
      type: object
    EventAlertType:
      description: |-
        If an alert event is enabled, set its type.
        For example, `error`, `warning`, `info`, `success`, `user_update`,
        `recommendation`, and `snapshot`.
      enum:
        - error
        - warning
        - info
        - success
        - user_update
        - recommendation
        - snapshot
      example: info
      type: string
      x-enum-varnames:
        - ERROR
        - WARNING
        - INFO
        - SUCCESS
        - USER_UPDATE
        - RECOMMENDATION
        - SNAPSHOT
    EventCreateRequest:
      description: Object representing an event.
      example:
        aggregation_key: aggregation_key
        related_event_id: 1
        priority: normal
        source_type_name: source_type_name
        title: Did you hear the news today?
        alert_type: info
        url: url
        tags:
          - environment:test
        device_name: device_name
        payload: '{}'
        host: host
        id: 6
        text: Oh boy!
        date_happened: 0
      properties:
        aggregation_key:
          description: |-
            An arbitrary string to use for aggregation. Limited to 100 characters.
            If you specify a key, all events using that key are grouped together in the Event Stream.
          maxLength: 100
          type: string
        alert_type:
          $ref: '#/components/schemas/EventAlertType'
        date_happened:
          description: |-
            POSIX timestamp of the event. Must be sent as an integer (i.e. no quotes).
            Limited to events no older than 7 days.
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        host:
          description: |-
            Host name to associate with the event.
            Any tags associated with the host are also applied to this event.
          type: string
        id:
          description: Integer ID of the event.
          format: int64
          readOnly: true
          type: integer
        payload:
          description: Payload of the event.
          example: '{}'
          readOnly: true
          type: string
        priority:
          $ref: '#/components/schemas/EventPriority'
        related_event_id:
          description: ID of the parent event. Must be sent as an integer (i.e. no
            quotes).
          format: int64
          type: integer
        source_type_name:
          description: |-
            The type of event being posted. Option examples include nagios, hudson, jenkins, my_apps, chef, puppet, git, bitbucket, etc.
            A complete list of source attribute values [available here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          type: string
        tags:
          description: A list of tags to apply to the event.
          example:
            - environment:test
          items:
            description: A tag.
            type: string
          type: array
        text:
          description: |-
            The body of the event. Limited to 4000 characters. The text supports markdown.
            To use markdown in the event text, start the text block with `%%% \n` and end the text block with `\n %%%`.
            Use `msg_text` with the Datadog Ruby library.
          example: Oh boy!
          maxLength: 4000
          type: string
        title:
          description: The event title. Limited to 100 characters. Use `msg_title`
            with the Datadog Ruby library.
          example: Did you hear the news today?
          maxLength: 100
          type: string
        url:
          description: URL of the event.
          readOnly: true
          type: string
      required:
        - text
        - title
      type: object
    EventCreateResponse:
      description: Object containing an event response.
      example:
        related_event_id: 1
        priority: normal
        source_type_name: source_type_name
        title: Did you hear the news today?
        alert_type: info
        url: url
        tags:
          - environment:test
        device_name: device_name
        payload: '{}'
        host: host
        id: 6
        text: Oh boy!
        date_happened: 0
        status: status
      properties:
        alert_type:
          $ref: '#/components/schemas/EventAlertType'
        date_happened:
          description: |-
            POSIX timestamp of the event. Must be sent as an integer (i.e. no quotes).
            Limited to events no older than 7 days.
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        host:
          description: |-
            Host name to associate with the event.
            Any tags associated with the host are also applied to this event.
          type: string
        id:
          description: Integer ID of the event.
          format: int64
          readOnly: true
          type: integer
        payload:
          description: Payload of the event.
          example: '{}'
          readOnly: true
          type: string
        priority:
          $ref: '#/components/schemas/EventPriority'
        related_event_id:
          description: ID of the parent event. Must be sent as an integer (i.e. no
            quotes).
          format: int64
          type: integer
        source_type_name:
          description: |-
            The type of event being posted. Option examples include nagios, hudson, jenkins, my_apps, chef, puppet, git, bitbucket, etc.
            A complete list of source attribute values [available here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).
          type: string
        status:
          description: A status.
          type: string
        tags:
          description: A list of tags to apply to the event.
          example:
            - environment:test
          items:
            description: A tag.
            type: string
          type: array
        text:
          description: |-
            The body of the event. Limited to 4000 characters. The text supports markdown.
            Use `msg_text` with the Datadog Ruby library.
          example: Oh boy!
          maxLength: 4000
          type: string
        title:
          description: The event title. Limited to 100 characters. Use `msg_title`
            with the Datadog Ruby library.
          example: Did you hear the news today?
          maxLength: 100
          type: string
        url:
          description: URL of the event.
          readOnly: true
          type: string
      type: object
    EventListResponse:
      description: An event list response.
      example:
        events:
          - device_name: device_name
            payload: '{}'
            host: host
            id: 6
            text: Oh boy!
            priority: normal
            source_type_name: source_type_name
            title: Did you hear the news today?
            alert_type: info
            url: url
            date_happened: 0
            tags:
              - environment:test
          - device_name: device_name
            payload: '{}'
            host: host
            id: 6
            text: Oh boy!
            priority: normal
            source_type_name: source_type_name
            title: Did you hear the news today?
            alert_type: info
            url: url
            date_happened: 0
            tags:
              - environment:test
        status: status
      properties:
        events:
          description: An array of events.
          items:
            $ref: '#/components/schemas/Event'
          type: array
        status:
          description: A status.
          type: string
      type: object
    EventPriority:
      description: The priority of the event. For example, `normal` or `low`.
      enum:
        - normal
        - low
      example: normal
      type: string
      x-enum-varnames:
        - NORMAL
        - LOW
    EventQueryDefinition:
      description: The event query.
      properties:
        search:
          description: The query being made on the event.
          example: ""
          type: string
        tags_execution:
          description: The execution method for multi-value filters. Can be either
            and or or.
          example: ""
          type: string
      required:
        - search
        - tags_execution
      type: object
    EventResponse:
      description: Object containing an event response.
      example:
        event:
          device_name: device_name
          payload: '{}'
          host: host
          id: 6
          text: Oh boy!
          priority: normal
          source_type_name: source_type_name
          title: Did you hear the news today?
          alert_type: info
          url: url
          date_happened: 0
          tags:
            - environment:test
        status: status
      properties:
        event:
          $ref: '#/components/schemas/Event'
        status:
          description: A status.
          type: string
      type: object
    EventStreamWidgetDefinition:
      description: |-
        The event stream is a widget version of the stream of events
        on the Event Stream view. Only available on FREE layout dashboards.
      properties:
        event_size:
          $ref: '#/components/schemas/WidgetEventSize'
        query:
          description: Query to filter the event stream with.
          example: ""
          type: string
        tags_execution:
          description: The execution method for multi-value filters. Can be either
            and or or.
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/EventStreamWidgetDefinitionType'
      required:
        - query
        - type
      type: object
    EventStreamWidgetDefinitionType:
      default: event_stream
      description: Type of the event stream widget.
      enum:
        - event_stream
      example: event_stream
      type: string
      x-enum-varnames:
        - EVENT_STREAM
    EventTimelineWidgetDefinition:
      description: The event timeline is a widget version of the timeline that appears
        at the top of the Event Stream view. Only available on FREE layout dashboards.
      properties:
        query:
          description: Query to filter the event timeline with.
          example: ""
          type: string
        tags_execution:
          description: The execution method for multi-value filters. Can be either
            and or or.
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/EventTimelineWidgetDefinitionType'
      required:
        - query
        - type
      type: object
    EventTimelineWidgetDefinitionType:
      default: event_timeline
      description: Type of the event timeline widget.
      enum:
        - event_timeline
      example: event_timeline
      type: string
      x-enum-varnames:
        - EVENT_TIMELINE
    FormulaAndFunctionEventAggregation:
      description: Aggregation methods for event platform queries.
      enum:
        - count
        - cardinality
        - median
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
      example: avg
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - MEDIAN
        - PC75
        - PC90
        - PC95
        - PC98
        - PC99
        - SUM
        - MIN
        - MAX
        - AVG
    FormulaAndFunctionEventQueryDefinition:
      description: A formula and functions events query.
      properties:
        compute:
          $ref: '#/components/schemas/FormulaAndFunctionEventQueryDefinition_compute'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionEventsDataSource'
        group_by:
          description: Group by options.
          items:
            $ref: '#/components/schemas/FormulaAndFunctionEventQueryGroupBy'
          type: array
        indexes:
          description: An array of index names to query in the stream. Omit or use
            `[]` to query all indexes at once.
          example:
            - days-3
            - days-7
          items:
            description: A log index set up for your organization. For additional
              indexes, see the [multiple indexes](https://docs.datadoghq.com/logs/indexes/#multiple-indexes)
              documentation.
            type: string
          type: array
        name:
          description: Name of the query for use in formulas.
          example: query_errors
          type: string
        search:
          $ref: '#/components/schemas/FormulaAndFunctionEventQueryDefinition_search'
      required:
        - compute
        - data_source
        - name
      type: object
    FormulaAndFunctionEventQueryGroupBy:
      description: List of objects used to group by.
      properties:
        facet:
          description: Event facet.
          example: status.
          type: string
        limit:
          description: Number of groups to return.
          example: 10
          format: int64
          type: integer
        sort:
          $ref: '#/components/schemas/FormulaAndFunctionEventQueryGroupBy_sort'
      required:
        - facet
      type: object
    FormulaAndFunctionEventsDataSource:
      description: Data source for event platform-based queries.
      enum:
        - logs
        - spans
        - network
        - rum
        - security_signals
        - profiles
        - audit
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
        - SPANS
        - NETWORK
        - RUM
        - SECURITY_SIGNALS
        - PROFILES
        - AUDIT
    FormulaAndFunctionMetricAggregation:
      description: The aggregation methods available for metrics queries.
      enum:
        - avg
        - min
        - max
        - sum
        - last
        - area
        - l2norm
      example: avg
      type: string
      x-enum-varnames:
        - AVG
        - MIN
        - MAX
        - SUM
        - LAST
        - AREA
        - L2NORM
    FormulaAndFunctionMetricDataSource:
      description: Data source for metrics queries.
      enum:
        - metrics
      example: metrics
      type: string
      x-enum-varnames:
        - METRICS
    FormulaAndFunctionMetricQueryDefinition:
      description: A formula and functions metrics query.
      example:
        data_source: metrics
        query: avg:system.cpu.user{*}
      properties:
        aggregator:
          $ref: '#/components/schemas/FormulaAndFunctionMetricAggregation'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionMetricDataSource'
        name:
          description: Name of the query for use in formulas.
          example: my_query
          type: string
        query:
          description: Metrics query definition.
          example: avg:system.cpu.user{*}
          type: string
      required:
        - data_source
        - name
        - query
      type: object
    FormulaAndFunctionProcessQueryDataSource:
      description: Data sources that rely on the process backend.
      enum:
        - process
        - container
      type: string
      x-enum-varnames:
        - PROCESS
        - CONTAINER
    FormulaAndFunctionProcessQueryDefinition:
      description: Process query using formulas and functions.
      properties:
        aggregator:
          $ref: '#/components/schemas/FormulaAndFunctionMetricAggregation'
        data_source:
          $ref: '#/components/schemas/FormulaAndFunctionProcessQueryDataSource'
        is_normalized_cpu:
          description: Whether to normalize the CPU percentages.
          type: boolean
        limit:
          description: Number of hits to return.
          format: int64
          type: integer
        metric:
          description: Process metric name.
          example: avg:system.cpu.user{*}
          type: string
        name:
          description: Name of query for use in formulas.
          example: query_errors
          type: string
        sort:
          $ref: '#/components/schemas/QuerySortOrder'
        tag_filters:
          description: An array of tags to filter by.
          items:
            description: One of the tags to filter by.
            type: string
          type: array
        text_filter:
          description: Text to use as filter.
          type: string
      required:
        - data_source
        - metric
        - name
      type: object
    FormulaAndFunctionQueryDefinition:
      description: A formula and function query.
      oneOf:
        - $ref: '#/components/schemas/FormulaAndFunctionMetricQueryDefinition'
        - $ref: '#/components/schemas/FormulaAndFunctionEventQueryDefinition'
        - $ref: '#/components/schemas/FormulaAndFunctionProcessQueryDefinition'
      type: object
    FormulaAndFunctionResponseFormat:
      description: Timeseries or Scalar response. **This feature is currently in beta.**
      enum:
        - timeseries
        - scalar
      type: string
      x-enum-varnames:
        - TIMESERIES
        - SCALAR
    FreeTextWidgetDefinition:
      description: Free text is a widget that allows you to add headings to your screenboard.
        Commonly used to state the overall purpose of the dashboard. Only available
        on FREE layout dashboards.
      properties:
        color:
          description: Color of the text.
          type: string
        font_size:
          description: Size of the text.
          type: string
        text:
          description: Text to display.
          example: ""
          type: string
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        type:
          $ref: '#/components/schemas/FreeTextWidgetDefinitionType'
      required:
        - text
        - type
      type: object
    FreeTextWidgetDefinitionType:
      default: free_text
      description: Type of the free text widget.
      enum:
        - free_text
      example: free_text
      type: string
      x-enum-varnames:
        - FREE_TEXT
    GCPAccount:
      description: Your Google Cloud Platform Account.
      example:
        automute: true
        client_email: api-dev@datadog-sandbox.iam.gserviceaccount.com
        private_key: private_key
        type: service_account
        client_id: "123456712345671234567"
        host_filters: key:value,filter:example
        token_uri: https://accounts.google.com/o/oauth2/token
        client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>
        private_key_id: 123456789abcdefghi123456789abcdefghijklm
        project_id: datadog-apitest
        auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
        auth_uri: https://accounts.google.com/o/oauth2/auth
        errors:
          - '*'
      properties:
        auth_provider_x509_cert_url:
          description: Should be `https://www.googleapis.com/oauth2/v1/certs`.
          example: https://www.googleapis.com/oauth2/v1/certs
          type: string
        auth_uri:
          description: Should be `https://accounts.google.com/o/oauth2/auth`.
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        automute:
          description: Silence monitors for expected GCE instance shutdowns.
          type: boolean
        client_email:
          description: Your email found in your JSON service account key.
          example: api-dev@datadog-sandbox.iam.gserviceaccount.com
          type: string
        client_id:
          description: Your ID found in your JSON service account key.
          example: "123456712345671234567"
          type: string
        client_x509_cert_url:
          description: |-
            Should be `https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>`
            where `<CLIENT_EMAIL>` is the email found in your JSON service account key.
          example: https://www.googleapis.com/robot/v1/metadata/x509/<CLIENT_EMAIL>
          type: string
        errors:
          description: An array of errors.
          example:
            - '*'
          items:
            description: String representation of one error.
            readOnly: true
            type: string
          type: array
        host_filters:
          description: |-
            Limit the GCE instances that are pulled into Datadog by using tags.
            Only hosts that match one of the defined tags are imported into Datadog.
          example: key:value,filter:example
          type: string
        private_key:
          description: Your private key name found in your JSON service account key.
          example: private_key
          type: string
        private_key_id:
          description: Your private key ID found in your JSON service account key.
          example: 123456789abcdefghi123456789abcdefghijklm
          type: string
        project_id:
          description: Your Google Cloud project ID found in your JSON service account
            key.
          example: datadog-apitest
          type: string
        token_uri:
          description: Should be `https://accounts.google.com/o/oauth2/token`.
          example: https://accounts.google.com/o/oauth2/token
          type: string
        type:
          description: The value for service_account found in your JSON service account
            key.
          example: service_account
          type: string
      type: object
    GCPAccountListResponse:
      description: Array of GCP account responses.
      items:
        $ref: '#/components/schemas/GCPAccount'
      type: array
    GeomapWidgetDefinition:
      description: This visualization displays a series of values by country on a
        world map.
      properties:
        custom_links:
          description: A list of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          description: |-
            Array of one request object to display in the widget. The request must contain a `group-by` tag whose value is a country ISO code.

            See the [Request JSON schema documentation](https://docs.datadoghq.com/dashboards/graphing_json/request_json)
            for information about building the `REQUEST_SCHEMA`.
          example:
            - rum_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/GeomapWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        style:
          $ref: '#/components/schemas/GeomapWidgetDefinition_style'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: The title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: The size of the title.
          type: string
        type:
          $ref: '#/components/schemas/GeomapWidgetDefinitionType'
        view:
          $ref: '#/components/schemas/GeomapWidgetDefinition_view'
      required:
        - requests
        - style
        - type
        - view
      type: object
    GeomapWidgetDefinitionType:
      default: geomap
      description: Type of the geomap widget.
      enum:
        - geomap
      example: geomap
      type: string
      x-enum-varnames:
        - GEOMAP
    GeomapWidgetRequest:
      description: An updated geomap widget.
      properties:
        formulas:
          description: List of formulas that operate on queries. **This feature is
            currently in beta.**
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: The widget metrics query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
            **This feature is currently in beta.**
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    GraphSnapshot:
      description: Object representing a graph snapshot.
      example:
        graph_def: graph_def
        metric_query: metric_query
        snapshot_url: https://app.datadoghq.com/s/f12345678/aaa-bbb-ccc
      properties:
        graph_def:
          description: |-
            A JSON document defining the graph. `graph_def` can be used instead of `metric_query`.
            The JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)
            and should be formatted to a single line then URL encoded.
          type: string
        metric_query:
          description: The metric query. One of `metric_query` or `graph_def` is required.
          type: string
        snapshot_url:
          description: URL of your [graph snapshot](https://docs.datadoghq.com/metrics/explorer/#snapshot).
          example: https://app.datadoghq.com/s/f12345678/aaa-bbb-ccc
          type: string
      type: object
    GroupWidgetDefinition:
      description: The groups widget allows you to keep similar graphs together on
        your timeboard. Each group has a custom header, can hold one to many graphs,
        and is collapsible.
      properties:
        background_color:
          description: Background color of the group title.
          type: string
        banner_img:
          description: URL of image to display as a banner for the group.
          type: string
        layout_type:
          $ref: '#/components/schemas/WidgetLayoutType'
        show_title:
          default: true
          description: Whether to show the title or not.
          type: boolean
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        type:
          $ref: '#/components/schemas/GroupWidgetDefinitionType'
        widgets:
          description: List of widget groups.
          example:
            - definition:
                requests:
                  fill:
                    q: system.cpu.user
                type: hostmap
          items:
            $ref: '#/components/schemas/Widget'
          type: array
      required:
        - layout_type
        - type
        - widgets
      type: object
    GroupWidgetDefinitionType:
      default: group
      description: Type of the group widget.
      enum:
        - group
      example: group
      type: string
      x-enum-varnames:
        - GROUP
    HTTPLog:
      description: Structured log message.
      items:
        $ref: '#/components/schemas/HTTPLogItem'
      type: array
    HTTPLogError:
      description: Invalid query performed.
      properties:
        code:
          description: Error code.
          example: 0
          format: int32
          maximum: 2147483647
          type: integer
        message:
          description: Error message.
          example: Your browser sent an invalid request.
          type: string
      required:
        - code
        - message
      type: object
    HTTPLogItem:
      description: Logs that are sent over HTTP.
      example:
        hostname: i-012345678
        ddtags: env:staging,version:5.1
        service: payment
        message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
        ddsource: nginx
      properties:
        ddsource:
          description: |-
            The integration name associated with your log: the technology from which the log originated.
            When it matches an integration name, Datadog automatically installs the corresponding parsers and facets.
            See [reserved attributes](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes).
          example: nginx
          type: string
        ddtags:
          description: Tags associated with your logs.
          example: env:staging,version:5.1
          type: string
        hostname:
          description: The name of the originating host of the log.
          example: i-012345678
          type: string
        message:
          description: |-
            The message [reserved attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)
            of your log. By default, Datadog ingests the value of the message attribute as the body of the log entry.
            That value is then highlighted and displayed in the Logstream, where it is indexed for full text search.
          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
          type: string
        service:
          description: |-
            The name of the application or service generating the log events.
            It is used to switch from Logs to APM, so make sure you define the same value when you use both products.
            See [reserved attributes](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes).
          example: payment
          type: string
      required:
        - name
      type: object
    HTTPMethod:
      description: The HTTP method.
      enum:
        - GET
        - POST
        - PATCH
        - PUT
        - DELETE
        - HEAD
        - OPTIONS
      type: string
      x-enum-varnames:
        - GET
        - POST
        - PATCH
        - PUT
        - DELETE
        - HEAD
        - OPTIONS
    HeatMapWidgetDefinition:
      description: The heat map visualization shows metrics aggregated across many
        tags, such as hosts. The more hosts that have a particular value, the darker
        that square is.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        events:
          description: List of widget events.
          items:
            $ref: '#/components/schemas/WidgetEvent'
          type: array
        legend_size:
          description: Available legend sizes for a widget. Should be one of "0",
            "2", "4", "8", "16", or "auto".
          type: string
        requests:
          description: List of widget types.
          example:
            - q: jvm.heap.memory
          items:
            $ref: '#/components/schemas/HeatMapWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        show_legend:
          description: Whether or not to display the legend on this widget.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/HeatMapWidgetDefinitionType'
        yaxis:
          $ref: '#/components/schemas/WidgetAxis'
      required:
        - requests
        - type
      type: object
    HeatMapWidgetDefinitionType:
      default: heatmap
      description: Type of the heat map widget.
      enum:
        - heatmap
      example: heatmap
      type: string
      x-enum-varnames:
        - HEATMAP
    HeatMapWidgetRequest:
      description: Updated heat map widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/EventQueryDefinition'
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetStyle'
      type: object
    Host:
      description: Object representing a host.
      example:
        tags_by_source:
          key:
            - test.example.com.host
            - test.example.com.host
        aliases:
          - mycoolhost-1
          - mycoolhost-1
        sources:
          - aws
          - aws
        is_muted: false
        aws_name: mycoolhost-1
        mute_timeout: 0
        meta:
          nixV:
            - Ubuntu
            - Ubuntu
        name: i-hostname
        id: 123456
        last_reported_time: 1565000000
        metrics:
          load: 0.5
          cpu: 99.0
          iowait: 3.2
        up: true
        host_name: i-deadbeef
        apps:
          - agent
          - agent
      properties:
        aliases:
          description: Host aliases collected by Datadog.
          items:
            description: A host alias.
            example: mycoolhost-1
            type: string
          type: array
        apps:
          description: The Datadog integrations reporting metrics for the host.
          items:
            description: Name of an app.
            example: agent
            type: string
          type: array
        aws_name:
          description: AWS name of your host.
          example: mycoolhost-1
          type: string
        host_name:
          description: The host name.
          example: i-deadbeef
          type: string
        id:
          description: The host ID.
          example: 123456
          format: int64
          type: integer
        is_muted:
          description: If a host is muted or unmuted.
          example: false
          type: boolean
        last_reported_time:
          description: Last time the host reported a metric data point.
          example: 1565000000
          format: int64
          type: integer
        meta:
          $ref: '#/components/schemas/Host_meta'
        metrics:
          $ref: '#/components/schemas/Host_metrics'
        mute_timeout:
          description: Timeout of the mute applied to your host.
          format: int64
          type: integer
        name:
          description: The host name.
          example: i-hostname
          type: string
        sources:
          description: Source or cloud provider associated with your host.
          items:
            description: A source or cloud provider name.
            example: aws
            type: string
          type: array
        tags_by_source:
          additionalProperties:
            description: Array of tags for a single source.
            items:
              description: A tag.
              example: test.example.com.host
              type: string
            type: array
          description: List of tags for each source (AWS, Datadog Agent, Chef..).
          type: object
        up:
          description: Displays UP when the expected metrics are received and displays
            `???` if no metrics are received.
          example: true
          type: boolean
      type: object
    HostListResponse:
      description: Response with Host information from Datadog.
      example:
        total_returned: 1
        total_matching: 1
        host_list:
          - tags_by_source:
              key:
                - test.example.com.host
                - test.example.com.host
            aliases:
              - mycoolhost-1
              - mycoolhost-1
            sources:
              - aws
              - aws
            is_muted: false
            aws_name: mycoolhost-1
            mute_timeout: 0
            meta:
              nixV:
                - Ubuntu
                - Ubuntu
            name: i-hostname
            id: 123456
            last_reported_time: 1565000000
            metrics:
              load: 0.5
              cpu: 99.0
              iowait: 3.2
            up: true
            host_name: i-deadbeef
            apps:
              - agent
              - agent
          - tags_by_source:
              key:
                - test.example.com.host
                - test.example.com.host
            aliases:
              - mycoolhost-1
              - mycoolhost-1
            sources:
              - aws
              - aws
            is_muted: false
            aws_name: mycoolhost-1
            mute_timeout: 0
            meta:
              nixV:
                - Ubuntu
                - Ubuntu
            name: i-hostname
            id: 123456
            last_reported_time: 1565000000
            metrics:
              load: 0.5
              cpu: 99.0
              iowait: 3.2
            up: true
            host_name: i-deadbeef
            apps:
              - agent
              - agent
      properties:
        host_list:
          description: Array of hosts.
          items:
            $ref: '#/components/schemas/Host'
          type: array
        total_matching:
          description: Number of host matching the query.
          example: 1
          format: int64
          type: integer
        total_returned:
          description: Number of host returned.
          example: 1
          format: int64
          type: integer
      type: object
    HostMapRequest:
      description: Updated host map.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    HostMapWidgetDefinition:
      description: The host map widget graphs any metric across your hosts using the
        same visualization available from the main Host Map page.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        group:
          description: List of tag prefixes to group by.
          items:
            description: Tag prefixes.
            type: string
          type: array
        no_group_hosts:
          description: Whether to show the hosts that don’t fit in a group.
          type: boolean
        no_metric_hosts:
          description: Whether to show the hosts with no metrics.
          type: boolean
        node_type:
          $ref: '#/components/schemas/WidgetNodeType'
        notes:
          description: Notes on the title.
          type: string
        requests:
          $ref: '#/components/schemas/HostMapWidgetDefinition_requests'
        scope:
          description: List of tags used to filter the map.
          items:
            description: Tags.
            type: string
          type: array
        style:
          $ref: '#/components/schemas/HostMapWidgetDefinition_style'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/HostMapWidgetDefinitionType'
      required:
        - requests
        - type
      type: object
    HostMapWidgetDefinitionType:
      default: hostmap
      description: Type of the host map widget.
      enum:
        - hostmap
      example: hostmap
      type: string
      x-enum-varnames:
        - HOSTMAP
    HostMuteResponse:
      description: Response with the list of muted host for your organization.
      example:
        hostname: test.host
        action: Muted
        end: 1579098130
        message: Muting this host for a test!
      properties:
        action:
          description: Action applied to the hosts.
          example: Muted
          type: string
        end:
          description: POSIX timestamp in seconds when the host is unmuted.
          example: 1579098130
          format: int64
          type: integer
        hostname:
          description: The host name.
          example: test.host
          type: string
        message:
          description: Message associated with the mute.
          example: Muting this host for a test!
          type: string
      type: object
    HostMuteSettings:
      description: Combination of settings to mute a host.
      example:
        end: 1579098130
        override: false
        message: Muting this host for a test!
      properties:
        end:
          description: POSIX timestamp in seconds when the host is unmuted. If omitted,
            the host remains muted until explicitly unmuted.
          example: 1579098130
          format: int64
          type: integer
        message:
          description: Message to associate with the muting of this host.
          example: Muting this host for a test!
          type: string
        override:
          description: If true and the host is already muted, replaces existing host
            mute settings.
          example: false
          type: boolean
      type: object
    HostTags:
      description: Set of tags to associate with your host.
      example:
        host: test.host
        tags:
          - environment:production
          - environment:production
      properties:
        host:
          description: Your host name.
          example: test.host
          type: string
        tags:
          description: A list of tags to apply to the host.
          items:
            description: A given tag in a list.
            example: environment:production
            type: string
          type: array
      type: object
    HostTotals:
      description: Total number of host currently monitored by Datadog.
      example:
        total_up: 6
        total_active: 0
      properties:
        total_active:
          description: Total number of active host (UP and ???) reporting to Datadog.
          format: int64
          type: integer
        total_up:
          description: Number of host that are UP and reporting to Datadog.
          format: int64
          type: integer
      type: object
    IFrameWidgetDefinition:
      description: The iframe widget allows you to embed a portion of any other web
        page on your dashboard. Only available on FREE layout dashboards.
      properties:
        type:
          $ref: '#/components/schemas/IFrameWidgetDefinitionType'
        url:
          description: URL of the iframe.
          example: ""
          type: string
      required:
        - type
        - url
      type: object
    IFrameWidgetDefinitionType:
      default: iframe
      description: Type of the iframe widget.
      enum:
        - iframe
      example: iframe
      type: string
      x-enum-varnames:
        - IFRAME
    IPPrefixesAPI:
      description: Available prefix information for the API endpoints.
      example:
        prefixes_ipv4:
          - prefixes_ipv4
          - prefixes_ipv4
        prefixes_ipv6:
          - prefixes_ipv6
          - prefixes_ipv6
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesAPM:
      description: Available prefix information for the APM endpoints.
      example:
        prefixes_ipv4:
          - prefixes_ipv4
          - prefixes_ipv4
        prefixes_ipv6:
          - prefixes_ipv6
          - prefixes_ipv6
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesAgents:
      description: Available prefix information for the Agent endpoints.
      example:
        prefixes_ipv4:
          - prefixes_ipv4
          - prefixes_ipv4
        prefixes_ipv6:
          - prefixes_ipv6
          - prefixes_ipv6
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesLogs:
      description: Available prefix information for the Logs endpoints.
      example:
        prefixes_ipv4:
          - prefixes_ipv4
          - prefixes_ipv4
        prefixes_ipv6:
          - prefixes_ipv6
          - prefixes_ipv6
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesProcess:
      description: Available prefix information for the Process endpoints.
      example:
        prefixes_ipv4:
          - prefixes_ipv4
          - prefixes_ipv4
        prefixes_ipv6:
          - prefixes_ipv6
          - prefixes_ipv6
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesSynthetics:
      description: Available prefix information for the Synthetics endpoints.
      example:
        prefixes_ipv6_by_location:
          key:
            - prefixes_ipv6_by_location
            - prefixes_ipv6_by_location
        prefixes_ipv4:
          - prefixes_ipv4
          - prefixes_ipv4
        prefixes_ipv4_by_location:
          key:
            - prefixes_ipv4_by_location
            - prefixes_ipv4_by_location
        prefixes_ipv6:
          - prefixes_ipv6
          - prefixes_ipv6
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv4_by_location:
          additionalProperties:
            description: List of IPv4 prefixes.
            items:
              description: IPv4 prefix.
              type: string
            type: array
          description: List of IPv4 prefixes by location.
          type: object
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
        prefixes_ipv6_by_location:
          additionalProperties:
            description: List of IPv6 prefixes.
            items:
              description: IPv6 prefix.
              type: string
            type: array
          description: List of IPv6 prefixes by location.
          type: object
      type: object
    IPPrefixesWebhooks:
      description: Available prefix information for the Webhook endpoints.
      example:
        prefixes_ipv4:
          - prefixes_ipv4
          - prefixes_ipv4
        prefixes_ipv6:
          - prefixes_ipv6
          - prefixes_ipv6
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPRanges:
      description: IP ranges.
      example:
        process:
          prefixes_ipv4:
            - prefixes_ipv4
            - prefixes_ipv4
          prefixes_ipv6:
            - prefixes_ipv6
            - prefixes_ipv6
        webhooks:
          prefixes_ipv4:
            - prefixes_ipv4
            - prefixes_ipv4
          prefixes_ipv6:
            - prefixes_ipv6
            - prefixes_ipv6
        synthetics:
          prefixes_ipv6_by_location:
            key:
              - prefixes_ipv6_by_location
              - prefixes_ipv6_by_location
          prefixes_ipv4:
            - prefixes_ipv4
            - prefixes_ipv4
          prefixes_ipv4_by_location:
            key:
              - prefixes_ipv4_by_location
              - prefixes_ipv4_by_location
          prefixes_ipv6:
            - prefixes_ipv6
            - prefixes_ipv6
        modified: 2019-10-31-20-00-00
        api:
          prefixes_ipv4:
            - prefixes_ipv4
            - prefixes_ipv4
          prefixes_ipv6:
            - prefixes_ipv6
            - prefixes_ipv6
        logs:
          prefixes_ipv4:
            - prefixes_ipv4
            - prefixes_ipv4
          prefixes_ipv6:
            - prefixes_ipv6
            - prefixes_ipv6
        version: 11
        agents:
          prefixes_ipv4:
            - prefixes_ipv4
            - prefixes_ipv4
          prefixes_ipv6:
            - prefixes_ipv6
            - prefixes_ipv6
        apm:
          prefixes_ipv4:
            - prefixes_ipv4
            - prefixes_ipv4
          prefixes_ipv6:
            - prefixes_ipv6
            - prefixes_ipv6
      properties:
        agents:
          $ref: '#/components/schemas/IPPrefixesAgents'
        api:
          $ref: '#/components/schemas/IPPrefixesAPI'
        apm:
          $ref: '#/components/schemas/IPPrefixesAPM'
        logs:
          $ref: '#/components/schemas/IPPrefixesLogs'
        modified:
          description: Date when last updated, in the form `YYYY-MM-DD-hh-mm-ss`.
          example: 2019-10-31-20-00-00
          type: string
        process:
          $ref: '#/components/schemas/IPPrefixesProcess'
        synthetics:
          $ref: '#/components/schemas/IPPrefixesSynthetics'
        version:
          description: Version of the IP list.
          example: 11
          format: int64
          type: integer
        webhooks:
          $ref: '#/components/schemas/IPPrefixesWebhooks'
      type: object
    IdpFormData:
      description: Object describing the IdP configuration.
      properties:
        idp_file:
          description: The path to the XML metadata file you wish to upload.
          format: binary
          type: string
      required:
        - idp_file
      type: object
    IdpResponse:
      description: The IdP response object.
      example:
        message: IdP metadata successfully uploaded for example org
      properties:
        message:
          description: Identity provider response.
          example: IdP metadata successfully uploaded for example org
          type: string
      required:
        - message
      type: object
    ImageWidgetDefinition:
      description: The image widget allows you to embed an image on your dashboard.
        An image can be a PNG, JPG, or animated GIF. Only available on FREE layout
        dashboards.
      properties:
        has_background:
          default: true
          description: Whether to display a background or not.
          example: true
          type: boolean
        has_border:
          default: true
          description: Whether to display a border or not.
          example: true
          type: boolean
        horizontal_align:
          $ref: '#/components/schemas/WidgetHorizontalAlign'
        margin:
          $ref: '#/components/schemas/WidgetMargin'
        sizing:
          $ref: '#/components/schemas/WidgetImageSizing'
        type:
          $ref: '#/components/schemas/ImageWidgetDefinitionType'
        url:
          description: URL of the image.
          example: https://example.com/image.png
          type: string
        url_dark_theme:
          description: URL of the image in dark mode.
          example: https://example.com/image-dark-mode.png
          type: string
        vertical_align:
          $ref: '#/components/schemas/WidgetVerticalAlign'
      required:
        - type
        - url
      type: object
    ImageWidgetDefinitionType:
      default: image
      description: Type of the image widget.
      enum:
        - image
      example: image
      type: string
      x-enum-varnames:
        - IMAGE
    IntakePayloadAccepted:
      description: The payload accepted for intake.
      example:
        status: ok
      properties:
        status:
          description: The status of the intake payload.
          example: ok
          type: string
      type: object
    ListStreamColumn:
      description: Widget column.
      example:
        field: timestamp
        width: auto
      properties:
        field:
          description: Widget column field.
          example: content
          type: string
        width:
          $ref: '#/components/schemas/ListStreamColumnWidth'
      required:
        - field
        - width
      type: object
    ListStreamColumnWidth:
      description: Widget column width.
      enum:
        - auto
        - compact
        - full
      type: string
      x-enum-varnames:
        - AUTO
        - COMPACT
        - FULL
    ListStreamQuery:
      description: Updated list stream widget.
      properties:
        data_source:
          $ref: '#/components/schemas/ListStreamSource'
        indexes:
          description: List of indexes.
          items:
            description: Index.
            type: string
          type: array
        query_string:
          description: Widget query.
          example: '@service:app'
          type: string
      required:
        - data_source
        - query_string
      type: object
    ListStreamResponseFormat:
      description: Widget response format.
      enum:
        - event_list
      type: string
      x-enum-varnames:
        - EVENT_LIST
    ListStreamSource:
      default: issue_stream
      description: Source from which to query items to display in the stream.
      enum:
        - issue_stream
        - logs_stream
      example: issue_stream
      type: string
      x-enum-varnames:
        - ISSUE_STREAM
        - LOGS_STREAM
    ListStreamWidgetDefinition:
      description: |
        The list stream visualization displays a table of recent events in your application that
        match a search criteria using user-defined columns.
      properties:
        legend_size:
          description: Available legend sizes for a widget. Should be one of "0",
            "2", "4", "8", "16", or "auto".
          type: string
        requests:
          description: Request payload used to query items.
          example:
            - response_format: event_list
            - columns:
                - field: timestamp
                  width: auto
            - query:
                data_source: issue_stream
                query_string: '@data_source:APM'
          items:
            $ref: '#/components/schemas/ListStreamWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        show_legend:
          description: Whether or not to display the legend on this widget.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ListStreamWidgetDefinitionType'
      required:
        - requests
        - type
      type: object
    ListStreamWidgetDefinitionType:
      default: list_stream
      description: Type of the list stream widget.
      enum:
        - list_stream
      example: list_stream
      type: string
      x-enum-varnames:
        - LIST_STREAM
    ListStreamWidgetRequest:
      description: Updated list stream widget.
      properties:
        columns:
          description: Widget columns.
          example:
            - field: timestamp
              width: auto
            - field: content
              width: full
          items:
            $ref: '#/components/schemas/ListStreamColumn'
          type: array
        query:
          $ref: '#/components/schemas/ListStreamQuery'
        response_format:
          $ref: '#/components/schemas/ListStreamResponseFormat'
      required:
        - columns
        - query
        - response_format
      type: object
    LogQueryDefinition:
      description: The log query.
      properties:
        compute:
          $ref: '#/components/schemas/LogsQueryCompute'
        group_by:
          description: List of tag prefixes to group by in the case of a cluster check.
          items:
            $ref: '#/components/schemas/LogQueryDefinitionGroupBy'
          type: array
        index:
          description: A coma separated-list of index names. Use "*" query all indexes
            at once. [Multiple Indexes](https://docs.datadoghq.com/logs/indexes/#multiple-indexes)
          example: days-3,days-7
          type: string
        multi_compute:
          description: This field is mutually exclusive with `compute`.
          items:
            $ref: '#/components/schemas/LogsQueryCompute'
          type: array
        search:
          $ref: '#/components/schemas/LogQueryDefinition_search'
      type: object
    LogQueryDefinitionGroupBy:
      description: Defined items in the group.
      properties:
        facet:
          description: Facet name.
          example: resource_name
          type: string
        limit:
          description: Maximum number of items in the group.
          example: 50
          format: int64
          type: integer
        sort:
          $ref: '#/components/schemas/LogQueryDefinitionGroupBy_sort'
      required:
        - facet
      type: object
    LogStreamWidgetDefinition:
      description: The Log Stream displays a log flow matching the defined query.
        Only available on FREE layout dashboards.
      properties:
        columns:
          description: Which columns to display on the widget.
          items:
            description: Column name.
            type: string
          type: array
        indexes:
          description: An array of index names to query in the stream. Use [] to query
            all indexes at once.
          example:
            - days-3
            - days-7
          items:
            description: One of the log indexes set up for your organization. [Multiple
              Indexes](https://docs.datadoghq.com/logs/indexes/#multiple-indexes)
            type: string
          type: array
        logset:
          deprecated: true
          description: ID of the log set to use.
          type: string
        message_display:
          $ref: '#/components/schemas/WidgetMessageDisplay'
        query:
          description: Query to filter the log stream with.
          type: string
        show_date_column:
          description: Whether to show the date column or not
          type: boolean
        show_message_column:
          description: Whether to show the message column or not
          type: boolean
        sort:
          $ref: '#/components/schemas/WidgetFieldSort'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/LogStreamWidgetDefinitionType'
      required:
        - type
      type: object
    LogStreamWidgetDefinitionType:
      default: log_stream
      description: Type of the log stream widget.
      enum:
        - log_stream
      example: log_stream
      type: string
      x-enum-varnames:
        - LOG_STREAM
    LogsAPIError:
      description: Error returned by the Logs API
      properties:
        code:
          description: Code identifying the error
          type: string
        details:
          description: Additional error details
          items:
            $ref: '#/components/schemas/LogsAPIError'
          type: array
        message:
          description: Error message
          type: string
      type: object
    LogsAPIErrorResponse:
      description: Response returned by the Logs API when errors occur.
      properties:
        error:
          $ref: '#/components/schemas/LogsAPIError'
      type: object
    LogsArithmeticProcessor:
      description: |-
        Use the Arithmetic Processor to add a new attribute (without spaces or special characters
        in the new attribute name) to a log with the result of the provided formula.
        This enables you to remap different time attributes with different units into a single attribute,
        or to compute operations on attributes within the same log.

        The formula can use parentheses and the basic arithmetic operators `-`, `+`, `*`, `/`.

        By default, the calculation is skipped if an attribute is missing.
        Select “Replace missing attribute by 0” to automatically populate
        missing attribute values with 0 to ensure that the calculation is done.
        An attribute is missing if it is not found in the log attributes,
        or if it cannot be converted to a number.

        *Notes*:

        - The operator `-` needs to be space split in the formula as it can also be contained in attribute names.
        - If the target attribute already exists, it is overwritten by the result of the formula.
        - Results are rounded up to the 9th decimal. For example, if the result of the formula is `0.1234567891`,
          the actual value stored for the attribute is `0.123456789`.
        - If you need to scale a unit of measure,
          see [Scale Filter](https://docs.datadoghq.com/logs/processing/parsing/?tab=filter#matcher-and-filter).
      properties:
        expression:
          description: Arithmetic operation between one or more log attributes.
          example: ""
          type: string
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        is_replace_missing:
          default: false
          description: |-
            If `true`, it replaces all missing attributes of expression by `0`, `false`
            skip the operation if an attribute is missing.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        target:
          description: Name of the attribute that contains the result of the arithmetic
            operation.
          example: ""
          type: string
        type:
          $ref: '#/components/schemas/LogsArithmeticProcessorType'
      required:
        - expression
        - target
        - type
      type: object
    LogsArithmeticProcessorType:
      default: arithmetic-processor
      description: Type of logs arithmetic processor.
      enum:
        - arithmetic-processor
      example: arithmetic-processor
      type: string
      x-enum-varnames:
        - ARITHMETIC_PROCESSOR
    LogsAttributeRemapper:
      description: |-
        The remapper processor remaps any source attribute(s) or tag to another target attribute or tag.
        Constraints on the tag/attribute name are explained in the [Tag Best Practice documentation](https://docs.datadoghq.com/logs/guide/log-parsing-best-practice).
        Some additional constraints are applied as `:` or `,` are not allowed in the target tag/attribute name.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        override_on_conflict:
          default: false
          description: Override or not the target element if already set,
          type: boolean
        preserve_source:
          default: false
          description: Remove or preserve the remapped source element.
          type: boolean
        source_type:
          default: attribute
          description: Defines if the sources are from log `attribute` or `tag`.
          type: string
        sources:
          description: Array of source attributes.
          example:
            - web
            - gateway
          items:
            description: Attribute used as a source to remap its value to the target
              attribute.
            type: string
          type: array
        target:
          description: Final attribute or tag name to remap the sources to.
          example: operation_id
          type: string
        target_format:
          $ref: '#/components/schemas/TargetFormatType'
        target_type:
          default: attribute
          description: Defines if the final attribute or tag name is from log `attribute`
            or `tag`.
          type: string
        type:
          $ref: '#/components/schemas/LogsAttributeRemapperType'
      required:
        - sources
        - target
        - type
      type: object
    LogsAttributeRemapperType:
      default: attribute-remapper
      description: Type of logs attribute remapper.
      enum:
        - attribute-remapper
      example: attribute-remapper
      type: string
      x-enum-varnames:
        - ATTRIBUTE_REMAPPER
    LogsByRetention:
      description: Object containing logs usage data broken down by retention period.
      example:
        usage:
          - logs_indexed_logs_usage_agg_sum: 6
            logs_rehydrated_indexed_logs_usage_agg_sum: 3
            retention: retention
            logs_live_indexed_logs_usage_agg_sum: 3
          - logs_indexed_logs_usage_agg_sum: 6
            logs_rehydrated_indexed_logs_usage_agg_sum: 3
            retention: retention
            logs_live_indexed_logs_usage_agg_sum: 3
        usage_by_month:
          date: date
          usage:
            - logs_indexed_logs_usage_sum: 6
              logs_live_indexed_logs_usage_sum: 6
              logs_rehydrated_indexed_logs_usage_sum: 5
              retention: retention
            - logs_indexed_logs_usage_sum: 6
              logs_live_indexed_logs_usage_sum: 6
              logs_rehydrated_indexed_logs_usage_sum: 5
              retention: retention
        orgs:
          usage:
            - usage:
                - logs_indexed_logs_usage_sum: 6
                  logs_live_indexed_logs_usage_sum: 6
                  logs_rehydrated_indexed_logs_usage_sum: 5
                  retention: retention
                - logs_indexed_logs_usage_sum: 6
                  logs_live_indexed_logs_usage_sum: 6
                  logs_rehydrated_indexed_logs_usage_sum: 5
                  retention: retention
            - usage:
                - logs_indexed_logs_usage_sum: 6
                  logs_live_indexed_logs_usage_sum: 6
                  logs_rehydrated_indexed_logs_usage_sum: 5
                  retention: retention
                - logs_indexed_logs_usage_sum: 6
                  logs_live_indexed_logs_usage_sum: 6
                  logs_rehydrated_indexed_logs_usage_sum: 5
                  retention: retention
      properties:
        orgs:
          $ref: '#/components/schemas/LogsByRetention_orgs'
        usage:
          description: Aggregated index logs usage for each retention period with
            usage.
          items:
            $ref: '#/components/schemas/LogsRetentionAggSumUsage'
          type: array
        usage_by_month:
          $ref: '#/components/schemas/LogsByRetentionMonthlyUsage'
      type: object
    LogsByRetentionMonthlyUsage:
      description: Object containing a summary of indexed logs usage by retention
        period for a single month.
      example:
        date: date
        usage:
          - logs_indexed_logs_usage_sum: 6
            logs_live_indexed_logs_usage_sum: 6
            logs_rehydrated_indexed_logs_usage_sum: 5
            retention: retention
          - logs_indexed_logs_usage_sum: 6
            logs_live_indexed_logs_usage_sum: 6
            logs_rehydrated_indexed_logs_usage_sum: 5
            retention: retention
      properties:
        date:
          description: The month for the usage.
          format: datetime
          type: string
        usage:
          description: Indexed logs usage for each active retention for the month.
          items:
            $ref: '#/components/schemas/LogsRetentionSumUsage'
          type: array
      type: object
    LogsByRetentionOrgUsage:
      description: Indexed logs usage by retention for a single organization.
      example:
        usage:
          - logs_indexed_logs_usage_sum: 6
            logs_live_indexed_logs_usage_sum: 6
            logs_rehydrated_indexed_logs_usage_sum: 5
            retention: retention
          - logs_indexed_logs_usage_sum: 6
            logs_live_indexed_logs_usage_sum: 6
            logs_rehydrated_indexed_logs_usage_sum: 5
            retention: retention
      properties:
        usage:
          description: Indexed logs usage for each active retention for the organization.
          items:
            $ref: '#/components/schemas/LogsRetentionSumUsage'
          type: array
      type: object
    LogsCategoryProcessor:
      description: |-
        Use the Category Processor to add a new attribute (without spaces or special characters in the new attribute name)
        to a log matching a provided search query. Use categories to create groups for an analytical view.
        For example, URL groups, machine groups, environments, and response time buckets.

        **Notes**:

        - The syntax of the query is the one of Logs Explorer search bar.
          The query can be done on any log attribute or tag, whether it is a facet or not.
          Wildcards can also be used inside your query.
        - Once the log has matched one of the Processor queries, it stops.
          Make sure they are properly ordered in case a log could match several queries.
        - The names of the categories must be unique.
        - Once defined in the Category Processor, you can map categories to log status using the Log Status Remapper.
      properties:
        categories:
          description: |-
            Array of filters to match or not a log and their
            corresponding `name`to assign a custom value to the log.
          example: []
          items:
            $ref: '#/components/schemas/LogsCategoryProcessorCategory'
          type: array
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        target:
          description: Name of the target attribute which value is defined by the
            matching category.
          example: ""
          type: string
        type:
          $ref: '#/components/schemas/LogsCategoryProcessorType'
      required:
        - categories
        - target
        - type
      type: object
    LogsCategoryProcessorCategory:
      description: Object describing the logs filter.
      properties:
        filter:
          $ref: '#/components/schemas/LogsFilter'
        name:
          description: Value to assign to the target attribute.
          type: string
      type: object
    LogsCategoryProcessorType:
      default: category-processor
      description: Type of logs category processor.
      enum:
        - category-processor
      example: category-processor
      type: string
      x-enum-varnames:
        - CATEGORY_PROCESSOR
    LogsDateRemapper:
      description: |-
        As Datadog receives logs, it timestamps them using the value(s) from any of these default attributes.

          - `timestamp`
          - `date`
          - `_timestamp`
          - `Timestamp`
          - `eventTime`
          - `published_date`

          If your logs put their dates in an attribute not in this list,
          use the log date Remapper Processor to define their date attribute as the official log timestamp.
          The recognized date formats are ISO8601, UNIX (the milliseconds EPOCH format), and RFC3164.

          **Note:** If your logs don’t contain any of the default attributes
          and you haven’t defined your own date attribute, Datadog timestamps
          the logs with the date it received them.

          If multiple log date remapper processors can be applied to a given log,
          only the first one (according to the pipelines order) is taken into account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          description: Array of source attributes.
          example:
            - web
            - gateway
          items:
            description: Attribute used as a source to define the log associated date.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsDateRemapperType'
      required:
        - sources
        - type
      type: object
    LogsDateRemapperType:
      default: date-remapper
      description: Type of logs date remapper.
      enum:
        - date-remapper
      example: date-remapper
      type: string
      x-enum-varnames:
        - DATE_REMAPPER
    LogsExclusion:
      description: Represents the index exclusion filter object from configuration
        API.
      example:
        filter:
          sample_rate: 1
          query: '*'
        is_enabled: true
        name: payment
      properties:
        filter:
          $ref: '#/components/schemas/LogsExclusionFilter'
        is_enabled:
          description: Whether or not the exclusion filter is active.
          type: boolean
        name:
          description: Name of the index exclusion filter.
          example: payment
          type: string
      required:
        - name
      type: object
    LogsExclusionFilter:
      description: Exclusion filter is defined by a query, a sampling rule, and a
        active/inactive toggle.
      example:
        sample_rate: 1
        query: '*'
      properties:
        query:
          description: |-
            Default query is `*`, meaning all logs flowing in the index would be excluded.
            Scope down exclusion filter to only a subset of logs with a log query.
          example: '*'
          type: string
        sample_rate:
          description: |-
            Sample rate to apply to logs going through this exclusion filter,
            a value of 1 will exclude all logs matching the query.
          example: 1
          format: double
          type: number
      required:
        - sample_rate
      type: object
    LogsFilter:
      description: Filter for logs.
      example:
        query: source:python
      properties:
        query:
          description: The filter query.
          example: source:python
          type: string
      type: object
    LogsGeoIPParser:
      description: |-
        The GeoIP parser takes an IP address attribute and extracts if available
        the Continent, Country, Subdivision, and City information in the target attribute path.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - network.client.ip
          description: Array of source attributes.
          example:
            - network.client.ip
          items:
            description: Attribute to geo-localize the IP from.
            type: string
          type: array
        target:
          default: network.client.geoip
          description: Name of the parent attribute that contains all the extracted
            details from the `sources`.
          example: network.client.geoip
          type: string
        type:
          $ref: '#/components/schemas/LogsGeoIPParserType'
      required:
        - sources
        - target
        - type
      type: object
    LogsGeoIPParserType:
      default: geo-ip-parser
      description: Type of GeoIP parser.
      enum:
        - geo-ip-parser
      example: geo-ip-parser
      type: string
      x-enum-varnames:
        - GEO_IP_PARSER
    LogsGrokParser:
      description: |-
        Create custom grok rules to parse the full message or [a specific attribute of your raw event](https://docs.datadoghq.com/logs/processing/parsing/#advanced-settings).
        For more information, see the [parsing section](https://docs.datadoghq.com/logs/processing/parsing).
      properties:
        grok:
          $ref: '#/components/schemas/LogsGrokParserRules'
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        samples:
          description: List of sample logs to test this grok parser.
          items:
            description: A log sample that is used to test the grok parser.
            maxLength: 5000
            type: string
          maxItems: 5
          type: array
        source:
          default: message
          description: Name of the log attribute to parse.
          example: message
          type: string
        type:
          $ref: '#/components/schemas/LogsGrokParserType'
      required:
        - grok
        - source
        - type
      type: object
    LogsGrokParserRules:
      description: Set of rules for the grok parser.
      properties:
        match_rules:
          description: List of match rules for the grok parser, separated by a new
            line.
          example: |
            rule_name_1 foo
            rule_name_2 bar
          type: string
        support_rules:
          default: ""
          description: List of support rules for the grok parser, separated by a new
            line.
          example: |
            rule_name_1 foo
            rule_name_2 bar
          type: string
      required:
        - match_rules
      type: object
    LogsGrokParserType:
      default: grok-parser
      description: Type of logs grok parser.
      enum:
        - grok-parser
      example: grok-parser
      type: string
      x-enum-varnames:
        - GROK_PARSER
    LogsIndex:
      description: Object describing a Datadog Log index.
      example:
        filter:
          query: source:python
        exclusion_filters:
          - filter:
              sample_rate: 1
              query: '*'
            is_enabled: true
            name: payment
          - filter:
              sample_rate: 1
              query: '*'
            is_enabled: true
            name: payment
        num_retention_days: 15
        is_rate_limited: false
        name: main
        daily_limit: 300000000
      properties:
        daily_limit:
          description: The number of log events you can send in this index per day
            before you are rate-limited.
          example: 300000000
          format: int64
          type: integer
        exclusion_filters:
          description: |-
            An array of exclusion objects. The logs are tested against the query of each filter,
            following the order of the array. Only the first matching active exclusion matters,
            others (if any) are ignored.
          items:
            $ref: '#/components/schemas/LogsExclusion'
          type: array
        filter:
          $ref: '#/components/schemas/LogsFilter'
        is_rate_limited:
          description: |-
            A boolean stating if the index is rate limited, meaning more logs than the daily limit have been sent.
            Rate limit is reset every-day at 2pm UTC.
          example: false
          readOnly: true
          type: boolean
        name:
          description: The name of the index.
          example: main
          type: string
        num_retention_days:
          description: |-
            The number of days before logs are deleted from this index. Available values depend on
            retention plans specified in your organization's contract/subscriptions.
          example: 15
          format: int64
          type: integer
      required:
        - filter
        - name
      type: object
    LogsIndexListResponse:
      description: Object with all Index configurations for a given organization.
      example:
        indexes:
          - filter:
              query: source:python
            exclusion_filters:
              - filter:
                  sample_rate: 1
                  query: '*'
                is_enabled: true
                name: payment
              - filter:
                  sample_rate: 1
                  query: '*'
                is_enabled: true
                name: payment
            num_retention_days: 15
            is_rate_limited: false
            name: main
            daily_limit: 300000000
          - filter:
              query: source:python
            exclusion_filters:
              - filter:
                  sample_rate: 1
                  query: '*'
                is_enabled: true
                name: payment
              - filter:
                  sample_rate: 1
                  query: '*'
                is_enabled: true
                name: payment
            num_retention_days: 15
            is_rate_limited: false
            name: main
            daily_limit: 300000000
      properties:
        indexes:
          description: Array of Log index configurations.
          items:
            $ref: '#/components/schemas/LogsIndex'
          type: array
      type: object
    LogsIndexUpdateRequest:
      description: Object for updating a Datadog Log index.
      example:
        filter:
          query: source:python
        exclusion_filters:
          - filter:
              sample_rate: 1
              query: '*'
            is_enabled: true
            name: payment
          - filter:
              sample_rate: 1
              query: '*'
            is_enabled: true
            name: payment
        num_retention_days: 6
        daily_limit: 0
        disable_daily_limit: true
      properties:
        daily_limit:
          description: The number of log events you can send in this index per day
            before you are rate-limited.
          format: int64
          type: integer
        disable_daily_limit:
          description: |-
            If true, sets the `daily_limit` value to null and the index is not limited on a daily basis (any
            specified `daily_limit` value in the request is ignored). If false or omitted, the index's current
            `daily_limit` is maintained.
          type: boolean
        exclusion_filters:
          description: |-
            An array of exclusion objects. The logs are tested against the query of each filter,
            following the order of the array. Only the first matching active exclusion matters,
            others (if any) are ignored.
          items:
            $ref: '#/components/schemas/LogsExclusion'
          type: array
        filter:
          $ref: '#/components/schemas/LogsFilter'
        num_retention_days:
          description: |-
            The number of days before logs are deleted from this index. Available values depend on
            retention plans specified in your organization's contract/subscriptions.

            **Note:** Changing the retention for an index adjusts the length of retention for all logs
            already in this index. It may also affect billing.
          format: int64
          type: integer
      required:
        - filter
      type: object
    LogsIndexesOrder:
      description: Object containing the ordered list of log index names.
      example:
        index_names:
          - main
          - payments
          - web
      properties:
        index_names:
          description: |-
            Array of strings identifying by their name(s) the index(es) of your organization.
            Logs are tested against the query filter of each index one by one, following the order of the array.
            Logs are eventually stored in the first matching index.
          example:
            - main
            - payments
            - web
          items:
            description: An index name.
            type: string
          type: array
      required:
        - index_names
      type: object
    LogsLookupProcessor:
      description: |-
        Use the Lookup Processor to define a mapping between a log attribute
        and a human readable value saved in the processors mapping table.
        For example, you can use the Lookup Processor to map an internal service ID
        into a human readable service name. Alternatively, you could also use it to check
        if the MAC address that just attempted to connect to the production
        environment belongs to your list of stolen machines.
      properties:
        default_lookup:
          description: Value to set the target attribute if the source value is not
            found in the list.
          type: string
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        lookup_table:
          description: |-
            Mapping table of values for the source attribute and their associated target attribute values,
            formatted as `["source_key1,target_value1", "source_key2,target_value2"]`
          example: []
          items:
            description: Mapping between a source and a value, it should follow the
              format `"<SOURCE>,<VALUE>"`.
            type: string
          type: array
        name:
          description: Name of the processor.
          type: string
        source:
          description: Source attribute used to perform the lookup.
          example: ""
          type: string
        target:
          description: |-
            Name of the attribute that contains the corresponding value in the mapping list
            or the `default_lookup` if not found in the mapping list.
          example: ""
          type: string
        type:
          $ref: '#/components/schemas/LogsLookupProcessorType'
      required:
        - lookup_table
        - source
        - target
        - type
      type: object
    LogsLookupProcessorType:
      default: lookup-processor
      description: Type of logs lookup processor.
      enum:
        - lookup-processor
      example: lookup-processor
      type: string
      x-enum-varnames:
        - LOOKUP_PROCESSOR
    LogsMessageRemapper:
      description: |-
        The message is a key attribute in Datadog.
        It is displayed in the message column of the Log Explorer and you can do full string search on it.
        Use this Processor to define one or more attributes as the official log message.

        **Note:** If multiple log message remapper processors can be applied to a given log,
        only the first one (according to the pipeline order) is taken into account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - msg
          description: Array of source attributes.
          example:
            - msg
          items:
            description: Attribute used as a source to define the log associated message.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsMessageRemapperType'
      required:
        - sources
        - type
      type: object
    LogsMessageRemapperType:
      default: message-remapper
      description: Type of logs message remapper.
      enum:
        - message-remapper
      example: message-remapper
      type: string
      x-enum-varnames:
        - MESSAGE_REMAPPER
    LogsPipeline:
      description: |-
        Pipelines and processors operate on incoming logs,
        parsing and transforming them into structured attributes for easier querying.

        **Note**: These endpoints are only available for admin users.
        Make sure to use an application key created by an admin.
      example:
        filter:
          query: source:python
        is_enabled: true
        name: ""
        is_read_only: true
        id: id
        processors:
          - null
          - null
        type: pipeline
      properties:
        filter:
          $ref: '#/components/schemas/LogsFilter'
        id:
          description: ID of the pipeline.
          readOnly: true
          type: string
        is_enabled:
          description: Whether or not the pipeline is enabled.
          type: boolean
        is_read_only:
          description: Whether or not the pipeline can be edited.
          readOnly: true
          type: boolean
        name:
          description: Name of the pipeline.
          example: ""
          type: string
        processors:
          description: Ordered list of processors in this pipeline.
          items:
            $ref: '#/components/schemas/LogsProcessor'
          type: array
        type:
          description: Type of pipeline.
          example: pipeline
          readOnly: true
          type: string
      required:
        - name
      type: object
    LogsPipelineList:
      description: Array of pipeline ID strings.
      items:
        $ref: '#/components/schemas/LogsPipeline'
      type: array
    LogsPipelineProcessor:
      description: |-
        Nested Pipelines are pipelines within a pipeline. Use Nested Pipelines to split the processing into two steps.
        For example, first use a high-level filtering such as team and then a second level of filtering based on the
        integration, service, or any other tag or attribute.

        A pipeline can contain Nested Pipelines and Processors whereas a Nested Pipeline can only contain Processors.
      properties:
        filter:
          $ref: '#/components/schemas/LogsFilter'
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        processors:
          description: Ordered list of processors in this pipeline.
          items:
            $ref: '#/components/schemas/LogsProcessor'
          type: array
        type:
          $ref: '#/components/schemas/LogsPipelineProcessorType'
      required:
        - type
      type: object
    LogsPipelineProcessorType:
      default: pipeline
      description: Type of logs pipeline processor.
      enum:
        - pipeline
      example: pipeline
      type: string
      x-enum-varnames:
        - PIPELINE
    LogsPipelinesOrder:
      description: Object containing the ordered list of pipeline IDs.
      example:
        pipeline_ids:
          - tags
          - org_ids
          - products
      properties:
        pipeline_ids:
          description: |-
            Ordered Array of `<PIPELINE_ID>` strings, the order of pipeline IDs in the array
            define the overall Pipelines order for Datadog.
          example:
            - tags
            - org_ids
            - products
          items:
            description: A given pipeline ID.
            type: string
          type: array
      required:
        - pipeline_ids
      type: object
    LogsProcessor:
      description: Definition of a logs processor.
      oneOf:
        - $ref: '#/components/schemas/LogsGrokParser'
        - $ref: '#/components/schemas/LogsDateRemapper'
        - $ref: '#/components/schemas/LogsStatusRemapper'
        - $ref: '#/components/schemas/LogsServiceRemapper'
        - $ref: '#/components/schemas/LogsMessageRemapper'
        - $ref: '#/components/schemas/LogsAttributeRemapper'
        - $ref: '#/components/schemas/LogsURLParser'
        - $ref: '#/components/schemas/LogsUserAgentParser'
        - $ref: '#/components/schemas/LogsCategoryProcessor'
        - $ref: '#/components/schemas/LogsArithmeticProcessor'
        - $ref: '#/components/schemas/LogsStringBuilderProcessor'
        - $ref: '#/components/schemas/LogsPipelineProcessor'
        - $ref: '#/components/schemas/LogsGeoIPParser'
        - $ref: '#/components/schemas/LogsLookupProcessor'
        - $ref: '#/components/schemas/LogsTraceRemapper'
      type: object
    LogsQueryCompute:
      description: Define computation for a log query.
      properties:
        aggregation:
          description: The aggregation method.
          example: avg
          type: string
        facet:
          description: Facet name.
          example: '@duration'
          type: string
        interval:
          description: Define a time interval in seconds.
          example: 5000
          format: int64
          type: integer
      required:
        - aggregation
      type: object
    LogsRetentionAggSumUsage:
      description: Object containing indexed logs usage aggregated across organizations
        and months for a retention period.
      example:
        logs_indexed_logs_usage_agg_sum: 6
        logs_rehydrated_indexed_logs_usage_agg_sum: 3
        retention: retention
        logs_live_indexed_logs_usage_agg_sum: 3
      properties:
        logs_indexed_logs_usage_agg_sum:
          description: Total indexed logs for this retention period.
          format: int64
          type: integer
        logs_live_indexed_logs_usage_agg_sum:
          description: Live indexed logs for this retention period.
          format: int64
          type: integer
        logs_rehydrated_indexed_logs_usage_agg_sum:
          description: Rehydrated indexed logs for this retention period.
          format: int64
          type: integer
        retention:
          description: The retention period in days or "custom" for all custom retention
            periods.
          type: string
      type: object
    LogsRetentionSumUsage:
      description: Object containing indexed logs usage grouped by retention period
        and summed.
      example:
        logs_indexed_logs_usage_sum: 6
        logs_live_indexed_logs_usage_sum: 6
        logs_rehydrated_indexed_logs_usage_sum: 5
        retention: retention
      properties:
        logs_indexed_logs_usage_sum:
          description: Total indexed logs for this retention period.
          format: int64
          type: integer
        logs_live_indexed_logs_usage_sum:
          description: Live indexed logs for this retention period.
          format: int64
          type: integer
        logs_rehydrated_indexed_logs_usage_sum:
          description: Rehydrated indexed logs for this retention period.
          format: int64
          type: integer
        retention:
          description: The retention period in days or "custom" for all custom retention
            periods.
          type: string
      type: object
    LogsServiceRemapper:
      description: |-
        Use this processor if you want to assign one or more attributes as the official service.

        **Note:** If multiple service remapper processors can be applied to a given log,
        only the first one (according to the pipeline order) is taken into account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          description: Array of source attributes.
          example:
            - web
            - gateway
          items:
            description: Attribute used as a source to define the log associated service.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsServiceRemapperType'
      required:
        - sources
        - type
      type: object
    LogsServiceRemapperType:
      default: service-remapper
      description: Type of logs service remapper.
      enum:
        - service-remapper
      example: service-remapper
      type: string
      x-enum-varnames:
        - SERVICE_REMAPPER
    LogsStatusRemapper:
      description: |-
        Use this Processor if you want to assign some attributes as the official status.

        Each incoming status value is mapped as follows.

          - Integers from 0 to 7 map to the Syslog severity standards
          - Strings beginning with `emerg` or f (case-insensitive) map to `emerg` (0)
          - Strings beginning with `a` (case-insensitive) map to `alert` (1)
          - Strings beginning with `c` (case-insensitive) map to `critical` (2)
          - Strings beginning with `err` (case-insensitive) map to `error` (3)
          - Strings beginning with `w` (case-insensitive) map to `warning` (4)
          - Strings beginning with `n` (case-insensitive) map to `notice` (5)
          - Strings beginning with `i` (case-insensitive) map to `info` (6)
          - Strings beginning with `d`, `trace` or `verbose` (case-insensitive) map to `debug` (7)
          - Strings beginning with `o` or matching `OK` or `Success` (case-insensitive) map to OK
          - All others map to `info` (6)

          **Note:** If multiple log status remapper processors can be applied to a given log,
          only the first one (according to the pipelines order) is taken into account.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          description: Array of source attributes.
          example: []
          items:
            description: Attribute used as a source to define the log associated status.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsStatusRemapperType'
      required:
        - sources
        - type
      type: object
    LogsStatusRemapperType:
      default: status-remapper
      description: Type of logs status remapper.
      enum:
        - status-remapper
      example: status-remapper
      type: string
      x-enum-varnames:
        - STATUS_REMAPPER
    LogsStringBuilderProcessor:
      description: |-
        Use the string builder processor to add a new attribute (without spaces or special characters)
        to a log with the result of the provided template.
        This enables aggregation of different attributes or raw strings into a single attribute.

        The template is defined by both raw text and blocks with the syntax `%{attribute_path}`.

        **Notes**:

        - The processor only accepts attributes with values or an array of values in the blocks.
        - If an attribute cannot be used (object or array of object),
          it is replaced by an empty string or the entire operation is skipped depending on your selection.
        - If the target attribute already exists, it is overwritten by the result of the template.
        - Results of the template cannot exceed 256 characters.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        is_replace_missing:
          default: false
          description: |-
            If true, it replaces all missing attributes of `template` by an empty string.
            If `false` (default), skips the operation for missing attributes.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        target:
          description: The name of the attribute that contains the result of the template.
          example: ""
          type: string
        template:
          description: A formula with one or more attributes and raw text.
          example: ""
          type: string
        type:
          $ref: '#/components/schemas/LogsStringBuilderProcessorType'
      required:
        - target
        - template
        - type
      type: object
    LogsStringBuilderProcessorType:
      default: string-builder-processor
      description: Type of logs string builder processor.
      enum:
        - string-builder-processor
      example: string-builder-processor
      type: string
      x-enum-varnames:
        - STRING_BUILDER_PROCESSOR
    LogsTraceRemapper:
      description: |-
        There are two ways to improve correlation between application traces and logs.

          1. Follow the documentation on [how to inject a trace ID in the application logs](https://docs.datadoghq.com/tracing/connect_logs_and_traces)
          and by default log integrations take care of all the rest of the setup.

          2. Use the Trace remapper processor to define a log attribute as its associated trace ID.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - dd.trace_id
          description: Array of source attributes.
          items:
            description: Attribute to extract the Trace ID from.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/LogsTraceRemapperType'
      required:
        - type
      type: object
    LogsTraceRemapperType:
      default: trace-id-remapper
      description: Type of logs trace remapper.
      enum:
        - trace-id-remapper
      example: trace-id-remapper
      type: string
      x-enum-varnames:
        - TRACE_ID_REMAPPER
    LogsURLParser:
      description: This processor extracts query parameters and other important parameters
        from a URL.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        normalize_ending_slashes:
          default: false
          description: Normalize the ending slashes or not.
          nullable: true
          type: boolean
        sources:
          default:
            - http.url
          description: Array of source attributes.
          example:
            - http.url
          items:
            description: Attribute to extract the URL from.
            type: string
          type: array
        target:
          default: http.url_details
          description: Name of the parent attribute that contains all the extracted
            details from the `sources`.
          example: http.url_details
          type: string
        type:
          $ref: '#/components/schemas/LogsURLParserType'
      required:
        - sources
        - target
        - type
      type: object
    LogsURLParserType:
      default: url-parser
      description: Type of logs URL parser.
      enum:
        - url-parser
      example: url-parser
      type: string
      x-enum-varnames:
        - URL_PARSER
    LogsUserAgentParser:
      description: |-
        The User-Agent parser takes a User-Agent attribute and extracts the OS, browser, device, and other user data.
        It recognizes major bots like the Google Bot, Yahoo Slurp, and Bing.
      properties:
        is_enabled:
          default: false
          description: Whether or not the processor is enabled.
          type: boolean
        is_encoded:
          default: false
          description: Define if the source attribute is URL encoded or not.
          type: boolean
        name:
          description: Name of the processor.
          type: string
        sources:
          default:
            - http.useragent
          description: Array of source attributes.
          example:
            - http.useragent
          items:
            description: Attribute to extract the User-Agent from.
            type: string
          type: array
        target:
          default: http.useragent_details
          description: Name of the parent attribute that contains all the extracted
            details from the `sources`.
          example: http.useragent_details
          type: string
        type:
          $ref: '#/components/schemas/LogsUserAgentParserType'
      required:
        - sources
        - target
        - type
      type: object
    LogsUserAgentParserType:
      default: user-agent-parser
      description: Type of logs User-Agent parser.
      enum:
        - user-agent-parser
      example: user-agent-parser
      type: string
      x-enum-varnames:
        - USER_AGENT_PARSER
    MetricMetadata:
      description: Object with all metric related metadata.
      example:
        unit: byte
        per_unit: second
        integration: integration
        description: description
        statsd_interval: 0
        short_name: short_name
        type: count
      properties:
        description:
          description: Metric description.
          type: string
        integration:
          description: Name of the integration that sent the metric if applicable.
          readOnly: true
          type: string
        per_unit:
          description: Per unit of the metric such as `second` in `bytes per second`.
          example: second
          type: string
        short_name:
          description: A more human-readable and abbreviated version of the metric
            name.
          type: string
        statsd_interval:
          description: StatsD flush interval of the metric in seconds if applicable.
          format: int64
          type: integer
        type:
          description: Metric type such as `gauge` or `rate`.
          example: count
          type: string
        unit:
          description: Primary unit of the metric such as `byte` or `operation`.
          example: byte
          type: string
      type: object
    MetricSearchResponse:
      description: Object containing the list of metrics matching the search query.
      example:
        results:
          metrics:
            - metrics
            - metrics
      properties:
        results:
          $ref: '#/components/schemas/MetricSearchResponse_results'
      type: object
    MetricsListResponse:
      description: Object listing all metric names stored by Datadog since a given
        time.
      example:
        from: from
        metrics:
          - metrics
          - metrics
      properties:
        from:
          description: Time when the metrics were active, seconds since the Unix epoch.
          type: string
        metrics:
          description: List of metric names.
          items:
            description: A metric name.
            type: string
          type: array
      type: object


    MetricsPayload:
      description: The metrics' payload.
      example:
        series:
          - metric: system.load.1
            points:
              - - 1475317847
                - 0.7
      properties:
        series:
          description: A list of time series to submit to Datadog.
          example:
            - metric: system.load.1
              points:
                - - 1475317847
                  - 0.7
          items:
            $ref: '#/components/schemas/Series'
          type: array
      required:
        - series
      type: object
    MetricsQueryMetadata:
      description: Object containing all metric names returned and their associated
        metadata.
      example:
        expression: system.cpu.idle{host:foo,env:test}
        pointlist:
          - - 1575317847
            - 0.5
          - - 1575317847
            - 0.5
        length: 5
        start: 2
        query_index: 5
        display_name: system.cpu.idle
        tag_set:
          - tag_set
          - tag_set
        unit:
          - plural: minutes
            name: minute
            short_name: min
            family: time
            scale_factor: 60.0
          - plural: minutes
            name: minute
            short_name: min
            family: time
            scale_factor: 60.0
        metric: system.cpu.idle
        scope: host:foo,env:test
        end: 6
        interval: 1
        aggr: avg
      properties:
        aggr:
          description: Aggregation type.
          example: avg
          readOnly: true
          type: string
        display_name:
          description: Display name of the metric.
          example: system.cpu.idle
          readOnly: true
          type: string
        end:
          description: End of the time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        expression:
          description: Metric expression.
          example: system.cpu.idle{host:foo,env:test}
          readOnly: true
          type: string
        interval:
          description: Number of seconds between data samples.
          format: int64
          readOnly: true
          type: integer
        length:
          description: Number of data samples.
          format: int64
          readOnly: true
          type: integer
        metric:
          description: Metric name.
          example: system.cpu.idle
          readOnly: true
          type: string
        pointlist:
          description: List of points of the time series.
          items:
            $ref: '#/components/schemas/Point'
          readOnly: true
          type: array
        query_index:
          description: The index of the series' query within the request.
          format: int64
          readOnly: true
          type: integer
        scope:
          description: Metric scope, comma separated list of tags.
          example: host:foo,env:test
          readOnly: true
          type: string
        start:
          description: Start of the time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        tag_set:
          description: Unique tags identifying this series.
          items:
            description: Unique tags identifying this series.
            type: string
          readOnly: true
          type: array
        unit:
          description: |-
            Detailed information about the metric unit.
            First element describes the "primary unit" (for example, `bytes` in `bytes per second`),
            second describes the "per unit" (for example, `second` in `bytes per second`).
          items:
            $ref: '#/components/schemas/MetricsQueryUnit'
          maxItems: 2
          minItems: 2
          readOnly: true
          type: array
      type: object
    MetricsQueryResponse:
      description: Response Object that includes your query and the list of metrics
        retrieved.
      example:
        res_type: time_series
        from_date: 0
        to_date: 7
        series:
          - expression: system.cpu.idle{host:foo,env:test}
            pointlist:
              - - 1575317847
                - 0.5
              - - 1575317847
                - 0.5
            length: 5
            start: 2
            query_index: 5
            display_name: system.cpu.idle
            tag_set:
              - tag_set
              - tag_set
            unit:
              - plural: minutes
                name: minute
                short_name: min
                family: time
                scale_factor: 60.0
              - plural: minutes
                name: minute
                short_name: min
                family: time
                scale_factor: 60.0
            metric: system.cpu.idle
            scope: host:foo,env:test
            end: 6
            interval: 1
            aggr: avg
          - expression: system.cpu.idle{host:foo,env:test}
            pointlist:
              - - 1575317847
                - 0.5
              - - 1575317847
                - 0.5
            length: 5
            start: 2
            query_index: 5
            display_name: system.cpu.idle
            tag_set:
              - tag_set
              - tag_set
            unit:
              - plural: minutes
                name: minute
                short_name: min
                family: time
                scale_factor: 60.0
              - plural: minutes
                name: minute
                short_name: min
                family: time
                scale_factor: 60.0
            metric: system.cpu.idle
            scope: host:foo,env:test
            end: 6
            interval: 1
            aggr: avg
        query: query
        group_by:
          - group_by
          - group_by
        error: error
        message: message
        status: ok
      properties:
        error:
          description: Message indicating the errors if status is not `ok`.
          readOnly: true
          type: string
        from_date:
          description: Start of requested time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        group_by:
          description: List of tag keys on which to group.
          items:
            description: Tag key to group by your metric.
            type: string
          readOnly: true
          type: array
        message:
          description: Message indicating `success` if status is `ok`.
          readOnly: true
          type: string
        query:
          description: Query string
          readOnly: true
          type: string
        res_type:
          description: Type of response.
          example: time_series
          readOnly: true
          type: string
        series:
          description: List of timeseries queried.
          items:
            $ref: '#/components/schemas/MetricsQueryMetadata'
          readOnly: true
          type: array
        status:
          description: Status of the query.
          example: ok
          readOnly: true
          type: string
        to_date:
          description: End of requested time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
      type: object
    MetricsQueryUnit:
      description: Object containing the metric unit family, scale factor, name, and
        short name.
      example:
        plural: minutes
        name: minute
        short_name: min
        family: time
        scale_factor: 60.0
      nullable: true
      properties:
        family:
          description: Unit family, allows for conversion between units of the same
            family, for scaling.
          example: time
          readOnly: true
          type: string
        name:
          description: Unit name
          example: minute
          readOnly: true
          type: string
        plural:
          description: Plural form of the unit name.
          example: minutes
          readOnly: true
          type: string
        scale_factor:
          description: Factor for scaling between units of the same family.
          example: 60.0
          format: double
          readOnly: true
          type: number
        short_name:
          description: Abbreviation of the unit.
          example: min
          readOnly: true
          type: string
      type: object
    Monitor:
      description: Object describing a monitor.
      example:
        creator:
          name: name
          handle: handle
          email: email
        created: 2000-01-23T04:56:07.000+00:00
        query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
        message: message
        priority: 3
        restricted_roles:
          - restricted_roles
          - restricted_roles
        type: metric alert
        multi: true
        tags:
          - tags
          - tags
        deleted: 2000-01-23T04:56:07.000+00:00
        name: name
        options:
          no_data_timeframe: 2
          silenced:
            key: 9
          synthetics_check_id: synthetics_check_id
          notify_no_data: false
          enable_logs_sample: true
          aggregation:
            metric: metrics.name
            group_by: host
            type: count
          evaluation_delay: 6
          groupby_simple_monitor: true
          notify_audit: false
          min_location_failed: 5
          new_host_delay: 5
          renotify_interval: 7
          thresholds:
            critical: 3.616076749251911
            warning: 1.2315135367772556
            warning_recovery: 1.0246457001441578
            ok: 4.145608029883936
            critical_recovery: 2.027123023002322
            unknown: 7.386281948385884
          min_failure_duration: 1055
          threshold_windows:
            trigger_window: trigger_window
            recovery_window: recovery_window
          include_tags: true
          require_full_window: true
          device_ids:
            - null
            - null
          escalation_message: none
          timeout_h: 1
          locked: true
        modified: 2000-01-23T04:56:07.000+00:00
        id: 0
        state:
          groups:
            key:
              last_triggered_ts: 5
              last_notified_ts: 1
              name: name
              last_resolved_ts: 4
              last_nodata_ts: 7
      properties:
        created:
          description: Timestamp of the monitor creation.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        deleted:
          description: Whether or not the monitor is deleted. (Always `null`)
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          description: ID of this monitor.
          format: int64
          readOnly: true
          type: integer
        message:
          description: A message to include with notifications for this monitor.
          type: string
        modified:
          description: Last timestamp when the monitor was edited.
          format: date-time
          readOnly: true
          type: string
        multi:
          description: Whether or not the monitor is broken down on different groups.
          readOnly: true
          type: boolean
        name:
          description: The monitor name.
          type: string
        options:
          $ref: '#/components/schemas/MonitorOptions'
        overall_state:
          $ref: '#/components/schemas/MonitorOverallStates'
        priority:
          description: Integer from 1 (high) to 5 (low) indicating alert severity.
          format: int64
          maximum: 5
          minimum: 1
          type: integer
        query:
          description: The monitor query.
          example: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
          type: string
        restricted_roles:
          description: A list of role identifiers that can be pulled from the Roles
            API. Cannot be used with `locked` option.
          items:
            description: A role UUID.
            type: string
          type: array
        state:
          $ref: '#/components/schemas/MonitorState'
        tags:
          description: Tags associated to your monitor.
          items:
            description: A Datadog tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/MonitorType'
      required:
        - query
        - type
      type: object
    MonitorDeviceID:
      description: ID of the device the Synthetics monitor is running on. Same as
        `SyntheticsDeviceID`.
      enum:
        - laptop_large
        - tablet
        - mobile_small
        - chrome.laptop_large
        - chrome.tablet
        - chrome.mobile_small
        - firefox.laptop_large
        - firefox.tablet
        - firefox.mobile_small
      type: string
      x-enum-varnames:
        - LAPTOP_LARGE
        - TABLET
        - MOBILE_SMALL
        - CHROME_LAPTOP_LARGE
        - CHROME_TABLET
        - CHROME_MOBILE_SMALL
        - FIREFOX_LAPTOP_LARGE
        - FIREFOX_TABLET
        - FIREFOX_MOBILE_SMALL
    MonitorGroupSearchResponse:
      description: The response of a monitor group search.
      example:
        counts:
          status:
            - count: 2
              name: OK
          type:
            - count: 2
              name: metric
        groups:
          - group: '*'
            group_tags:
              - '*'
            last_nodata_ts: 0
            last_triggered_ts: 1525702966
            monitor_id: 2738266
            monitor_name: '[demo] Cassandra disk usage is high on {{host.name}}'
            status: OK
          - group: '*'
            group_tags:
              - '*'
            last_nodata_ts: 0
            last_triggered_ts: 1525703008
            monitor_id: 1576648
            monitor_name: '[demo] Disk usage is high on {{host.name}}'
            status: OK
        metadata:
          page: 0
          page_count: 2
          per_page: 30
          total_count: 2
      properties:
        counts:
          $ref: '#/components/schemas/MonitorGroupSearchResponse_counts'
        groups:
          description: The list of found monitor groups.
          items:
            $ref: '#/components/schemas/MonitorGroupSearchResult'
          readOnly: true
          type: array
        metadata:
          $ref: '#/components/schemas/MonitorSearchResponseMetadata'
      type: object
    MonitorGroupSearchResult:
      description: A single monitor group search result.
      properties:
        group:
          description: The name of the group.
          readOnly: true
          type: string
        group_tags:
          description: The list of tags of the monitor group.
          items:
            description: One monitor group tag.
            readOnly: true
            type: string
          readOnly: true
          type: array
        last_nodata_ts:
          description: Latest timestamp the monitor group was in NO_DATA state.
          format: int64
          readOnly: true
          type: integer
        last_triggered_ts:
          description: Latest timestamp the monitor group triggered.
          format: int64
          nullable: true
          readOnly: true
          type: integer
        monitor_id:
          description: The ID of the monitor.
          format: int64
          readOnly: true
          type: integer
        monitor_name:
          description: The name of the monitor.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/MonitorOverallStates'
      type: object
    MonitorOptions:
      description: List of options associated with your monitor.
      example:
        no_data_timeframe: 2
        silenced:
          key: 9
        synthetics_check_id: synthetics_check_id
        notify_no_data: false
        enable_logs_sample: true
        aggregation:
          metric: metrics.name
          group_by: host
          type: count
        evaluation_delay: 6
        groupby_simple_monitor: true
        notify_audit: false
        min_location_failed: 5
        new_host_delay: 5
        renotify_interval: 7
        thresholds:
          critical: 3.616076749251911
          warning: 1.2315135367772556
          warning_recovery: 1.0246457001441578
          ok: 4.145608029883936
          critical_recovery: 2.027123023002322
          unknown: 7.386281948385884
        min_failure_duration: 1055
        threshold_windows:
          trigger_window: trigger_window
          recovery_window: recovery_window
        include_tags: true
        require_full_window: true
        device_ids:
          - null
          - null
        escalation_message: none
        timeout_h: 1
        locked: true
      properties:
        aggregation:
          $ref: '#/components/schemas/MonitorOptions_aggregation'
        device_ids:
          deprecated: true
          description: IDs of the device the Synthetics monitor is running on.
          items:
            $ref: '#/components/schemas/MonitorDeviceID'
          readOnly: true
          type: array
        enable_logs_sample:
          description: Whether or not to send a log sample when the log monitor triggers.
          type: boolean
        escalation_message:
          default: none
          description: |-
            We recommend using the [is_renotify](https://docs.datadoghq.com/monitors/notifications/?tab=is_alert#renotify),
            block in the original message instead.
            A message to include with a re-notification. Supports the `@username` notification we allow elsewhere.
            Not applicable if `renotify_interval` is `None`.
          type: string
        evaluation_delay:
          description: |-
            Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the value is set to `300` (5min),
            the timeframe is set to `last_5m` and the time is 7:00, the monitor evaluates data from 6:50 to 6:55.
            This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor always has data during evaluation.
          format: int64
          nullable: true
          type: integer
        groupby_simple_monitor:
          description: Whether the log alert monitor triggers a single alert or multiple
            alerts when any group breaches a threshold.
          type: boolean
        include_tags:
          default: true
          description: |-
            A Boolean indicating whether notifications from this monitor automatically inserts its triggering tags into the title.

            **Examples**
            - If `True`, `[Triggered on {host:h1}] Monitor Title`
            - If `False`, `[Triggered] Monitor Title`
          type: boolean
        locked:
          description: Whether or not the monitor is locked (only editable by creator
            and admins).
          type: boolean
        min_failure_duration:
          default: 0
          description: How long the test should be in failure before alerting (integer,
            number of seconds, max 7200).
          format: int64
          maximum: 7200
          minimum: 0
          nullable: true
          type: integer
        min_location_failed:
          default: 1
          description: |-
            The minimum number of locations in failure at the same time during
            at least one moment in the `min_failure_duration` period (`min_location_failed` and `min_failure_duration`
            are part of the advanced alerting rules - integer, >= 1).
          format: int64
          nullable: true
          type: integer
        new_host_delay:
          default: 300
          description: |-
            Time (in seconds) to allow a host to boot and applications
            to fully start before starting the evaluation of monitor results.
            Should be a non negative integer.
          format: int64
          nullable: true
          type: integer
        no_data_timeframe:
          description: |-
            The number of minutes before a monitor notifies after data stops reporting.
            Datadog recommends at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.
            If omitted, 2x the evaluation timeframe is used for metric alerts, and 24 hours is used for service checks.
          format: int64
          nullable: true
          type: integer
        notify_audit:
          default: false
          description: A Boolean indicating whether tagged users is notified on changes
            to this monitor.
          type: boolean
        notify_no_data:
          default: false
          description: A Boolean indicating whether this monitor notifies when data
            stops reporting.
          type: boolean
        renotify_interval:
          description: |-
            The number of minutes after the last notification before a monitor re-notifies on the current status.
            It only re-notifies if it’s not resolved.
          format: int64
          nullable: true
          type: integer
        require_full_window:
          description: |-
            A Boolean indicating whether this monitor needs a full window of data before it’s evaluated.
            We highly recommend you set this to `false` for sparse metrics,
            otherwise some evaluations are skipped. Default is false.
          type: boolean
        silenced:
          additionalProperties:
            description: ID of the downtime applied to the monitor.
            format: int64
            nullable: true
            type: integer
          deprecated: true
          description: Information about the downtime applied to the monitor.
          type: object
        synthetics_check_id:
          deprecated: true
          description: ID of the corresponding Synthetic check.
          nullable: true
          type: string
        threshold_windows:
          $ref: '#/components/schemas/MonitorThresholdWindowOptions'
        thresholds:
          $ref: '#/components/schemas/MonitorThresholds'
        timeout_h:
          description: The number of hours of the monitor not reporting data before
            it automatically resolves from a triggered state.
          format: int64
          nullable: true
          type: integer
      type: object
    MonitorOverallStates:
      description: The different states your monitor can be in.
      enum:
        - Alert
        - Ignored
        - No Data
        - OK
        - Skipped
        - Unknown
        - Warn
      readOnly: true
      type: string
      x-enum-varnames:
        - ALERT
        - IGNORED
        - NO_DATA
        - OK
        - SKIPPED
        - UNKNOWN
        - WARN
    MonitorSearchCount:
      description: Search facets.
      items:
        description: A facet item.
        properties:
          count:
            description: The number of found monitors with the listed value.
            format: int64
            readOnly: true
            type: integer
          name:
            description: The facet value.
            readOnly: true
        type: object
      type: array
    MonitorSearchResponse:
      description: The response form a monitor search.
      example:
        counts:
          muted:
            - count: 3
              name: false
            - count: 3
              name: true
          status:
            - count: 4
              name: No Data
            - count: 2
              name: OK
          tag:
            - count: 6
              name: service:cassandra
          type:
            - count: 6
              name: metric
        metadata:
          page: 0
          page_count: 6
          per_page: 30
          total_count: 6
        monitors:
          - classification: metric
            creator:
              handle: john@datadoghq.com
              name: John Doe
            id: 2699850
            last_triggered_ts: null
            metrics:
              - system.cpu.user
            name: Cassandra CPU is high on {{host.name}} in {{availability-zone.name}}
            notifications:
              - handle: jane@datadoghq.com
                name: Jane Doe
            org_id: 1234
            scopes:
              - '!availability-zone:us-east-1c'
              - name:cassandra
            status: No Data
            tags:
              - service:cassandra
            type: metric alert
      properties:
        counts:
          $ref: '#/components/schemas/MonitorSearchResponse_counts'
        metadata:
          $ref: '#/components/schemas/MonitorSearchResponseMetadata'
        monitors:
          description: The list of found monitors.
          items:
            $ref: '#/components/schemas/MonitorSearchResult'
          readOnly: true
          type: array
      type: object
    MonitorSearchResponseMetadata:
      description: Metadata about the response.
      properties:
        page:
          description: The page to start paginating from.
          format: int64
          readOnly: true
          type: integer
        page_count:
          description: The number of pages.
          format: int64
          readOnly: true
          type: integer
        per_page:
          description: The number of monitors to return per page.
          format: int64
          readOnly: true
          type: integer
        total_count:
          description: The total number of monitors.
          format: int64
          readOnly: true
          type: integer
      type: object
    MonitorSearchResult:
      description: Holds search results.
      properties:
        classification:
          description: Classification of the monitor.
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        id:
          description: ID of the monitor.
          format: int64
          readOnly: true
          type: integer
        last_triggered_ts:
          description: Latest timestamp the monitor triggered.
          format: int64
          nullable: true
          readOnly: true
          type: integer
        metrics:
          description: Metrics used by the monitor.
          items:
            description: A metric used by the monitor.
            readOnly: true
            type: string
          readOnly: true
          type: array
        name:
          description: The monitor name.
          readOnly: true
          type: string
        notifications:
          description: The notification triggered by the monitor.
          items:
            $ref: '#/components/schemas/MonitorSearchResultNotification'
          readOnly: true
          type: array
        org_id:
          description: The ID of the organization.
          format: int64
          readOnly: true
          type: integer
        scopes:
          description: |-
            The scope(s) to which the downtime applies, e.g. `host:app2`.
            Provide multiple scopes as a comma-separated list, e.g. `env:dev,env:prod`.
            The resulting downtime applies to sources that matches ALL provided scopes
            (i.e. `env:dev AND env:prod`), NOT any of them.
          example:
            - host:app2
            - env:dev,env:prod
          items:
            description: Scope value(s).
            readOnly: true
            type: string
          type: array
        status:
          $ref: '#/components/schemas/MonitorOverallStates'
        tags:
          description: Tags associated with the monitor.
          items:
            description: A tag associated with the monitor.
            readOnly: true
            type: string
          readOnly: true
          type: array
        type:
          $ref: '#/components/schemas/MonitorType'
      type: object
    MonitorSearchResultNotification:
      description: A notification triggered by the monitor.
      properties:
        handle:
          description: The email address that received the notification.
          readOnly: true
          type: string
        name:
          description: The username receiving the notification
          readOnly: true
          type: string
      readOnly: true
      type: object
    MonitorState:
      description: Wrapper object with the different monitor states.
      example:
        groups:
          key:
            last_triggered_ts: 5
            last_notified_ts: 1
            name: name
            last_resolved_ts: 4
            last_nodata_ts: 7
      properties:
        groups:
          additionalProperties:
            $ref: '#/components/schemas/MonitorStateGroup'
          description: |-
            Dictionary where the keys are groups (comma separated lists of tags) and the values are
            the list of groups your monitor is broken down on.
          type: object
      readOnly: true
      type: object
    MonitorStateGroup:
      description: Monitor state for a single group.
      example:
        last_triggered_ts: 5
        last_notified_ts: 1
        name: name
        last_resolved_ts: 4
        last_nodata_ts: 7
      properties:
        last_nodata_ts:
          description: Latest timestamp the monitor was in NO_DATA state.
          format: int64
          type: integer
        last_notified_ts:
          description: Latest timestamp of the notification sent for this monitor
            group.
          format: int64
          type: integer
        last_resolved_ts:
          description: Latest timestamp the monitor group was resolved.
          format: int64
          type: integer
        last_triggered_ts:
          description: Latest timestamp the monitor group triggered.
          format: int64
          type: integer
        name:
          description: The name of the monitor.
          type: string
        status:
          $ref: '#/components/schemas/MonitorOverallStates'
      type: object
    MonitorSummaryWidgetDefinition:
      description: The monitor summary widget displays a summary view of all your
        Datadog monitors, or a subset based on a query. Only available on FREE layout
        dashboards.
      properties:
        color_preference:
          $ref: '#/components/schemas/WidgetColorPreference'
        count:
          deprecated: true
          description: The number of monitors to display.
          format: int64
          type: integer
        display_format:
          $ref: '#/components/schemas/WidgetMonitorSummaryDisplayFormat'
        hide_zero_counts:
          description: Whether to show counts of 0 or not.
          type: boolean
        query:
          description: Query to filter the monitors with.
          example: ""
          type: string
        show_last_triggered:
          description: Whether to show the time that has elapsed since the monitor/group
            triggered.
          type: boolean
        sort:
          $ref: '#/components/schemas/WidgetMonitorSummarySort'
        start:
          deprecated: true
          description: The start of the list. Typically 0.
          format: int64
          type: integer
        summary_type:
          $ref: '#/components/schemas/WidgetSummaryType'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/MonitorSummaryWidgetDefinitionType'
      required:
        - query
        - type
      type: object
    MonitorSummaryWidgetDefinitionType:
      default: manage_status
      description: Type of the monitor summary widget.
      enum:
        - manage_status
      example: manage_status
      type: string
      x-enum-varnames:
        - MANAGE_STATUS
    MonitorThresholdWindowOptions:
      description: Alerting time window options.
      example:
        trigger_window: trigger_window
        recovery_window: recovery_window
      properties:
        recovery_window:
          description: Describes how long an anomalous metric must be normal before
            the alert recovers.
          nullable: true
          type: string
        trigger_window:
          description: Describes how long a metric must be anomalous before an alert
            triggers.
          nullable: true
          type: string
      type: object
    MonitorThresholds:
      description: List of the different monitor threshold available.
      example:
        critical: 3.616076749251911
        warning: 1.2315135367772556
        warning_recovery: 1.0246457001441578
        ok: 4.145608029883936
        critical_recovery: 2.027123023002322
        unknown: 7.386281948385884
      properties:
        critical:
          description: The monitor `CRITICAL` threshold.
          format: double
          type: number
        critical_recovery:
          description: The monitor `CRITICAL` recovery threshold.
          format: double
          nullable: true
          type: number
        ok:
          description: The monitor `OK` threshold.
          format: double
          nullable: true
          type: number
        unknown:
          description: The monitor UNKNOWN threshold.
          format: double
          nullable: true
          type: number
        warning:
          description: The monitor `WARNING` threshold.
          format: double
          nullable: true
          type: number
        warning_recovery:
          description: The monitor `WARNING` recovery threshold.
          format: double
          nullable: true
          type: number
      type: object
    MonitorType:
      description: The type of the monitor.
      enum:
        - composite
        - event alert
        - log alert
        - metric alert
        - process alert
        - query alert
        - rum alert
        - service check
        - synthetics alert
        - trace-analytics alert
        - slo alert
        - event-v2 alert
      example: metric alert
      type: string
      x-enum-varnames:
        - COMPOSITE
        - EVENT_ALERT
        - LOG_ALERT
        - METRIC_ALERT
        - PROCESS_ALERT
        - QUERY_ALERT
        - RUM_ALERT
        - SERVICE_CHECK
        - SYNTHETICS_ALERT
        - TRACE_ANALYTICS_ALERT
        - SLO_ALERT
        - EVENT_V2_ALERT
    MonitorUpdateRequest:
      description: Object describing a monitor update request.
      example:
        creator:
          name: name
          handle: handle
          email: email
        created: 2000-01-23T04:56:07.000+00:00
        query: query
        message: message
        priority: 3
        restricted_roles:
          - restricted_roles
          - restricted_roles
        type: metric alert
        multi: true
        tags:
          - tags
          - tags
        deleted: 2000-01-23T04:56:07.000+00:00
        name: name
        options:
          no_data_timeframe: 2
          silenced:
            key: 9
          synthetics_check_id: synthetics_check_id
          notify_no_data: false
          enable_logs_sample: true
          aggregation:
            metric: metrics.name
            group_by: host
            type: count
          evaluation_delay: 6
          groupby_simple_monitor: true
          notify_audit: false
          min_location_failed: 5
          new_host_delay: 5
          renotify_interval: 7
          thresholds:
            critical: 3.616076749251911
            warning: 1.2315135367772556
            warning_recovery: 1.0246457001441578
            ok: 4.145608029883936
            critical_recovery: 2.027123023002322
            unknown: 7.386281948385884
          min_failure_duration: 1055
          threshold_windows:
            trigger_window: trigger_window
            recovery_window: recovery_window
          include_tags: true
          require_full_window: true
          device_ids:
            - null
            - null
          escalation_message: none
          timeout_h: 1
          locked: true
        modified: 2000-01-23T04:56:07.000+00:00
        id: 0
        state:
          groups:
            key:
              last_triggered_ts: 5
              last_notified_ts: 1
              name: name
              last_resolved_ts: 4
              last_nodata_ts: 7
      properties:
        created:
          description: Timestamp of the monitor creation.
          format: date-time
          readOnly: true
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        deleted:
          description: Whether or not the monitor is deleted. (Always `null`)
          format: date-time
          nullable: true
          readOnly: true
          type: string
        id:
          description: ID of this monitor.
          format: int64
          readOnly: true
          type: integer
        message:
          description: A message to include with notifications for this monitor.
          type: string
        modified:
          description: Last timestamp when the monitor was edited.
          format: date-time
          readOnly: true
          type: string
        multi:
          description: Whether or not the monitor is broken down on different groups.
          readOnly: true
          type: boolean
        name:
          description: The monitor name.
          type: string
        options:
          $ref: '#/components/schemas/MonitorOptions'
        overall_state:
          $ref: '#/components/schemas/MonitorOverallStates'
        priority:
          description: Integer from 1 (high) to 5 (low) indicating alert severity.
          format: int64
          maximum: 5
          minimum: 1
          type: integer
        query:
          description: The monitor query.
          type: string
        restricted_roles:
          description: A list of role identifiers that can be pulled from the Roles
            API. Cannot be used with `locked` option.
          items:
            description: A role UUID.
            type: string
          type: array
        state:
          $ref: '#/components/schemas/MonitorState'
        tags:
          description: Tags associated to your monitor.
          items:
            description: A Datadog tag.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/MonitorType'
      type: object
    NoteWidgetDefinition:
      description: The notes and links widget is similar to free text widget, but
        allows for more formatting options.
      properties:
        background_color:
          description: Background color of the note.
          type: string
        content:
          description: Content of the note.
          example: ""
          type: string
        font_size:
          description: Size of the text.
          type: string
        has_padding:
          default: true
          description: Whether to add padding or not.
          type: boolean
        show_tick:
          description: Whether to show a tick or not.
          type: boolean
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        tick_edge:
          $ref: '#/components/schemas/WidgetTickEdge'
        tick_pos:
          description: Where to position the tick on an edge.
          type: string
        type:
          $ref: '#/components/schemas/NoteWidgetDefinitionType'
        vertical_align:
          $ref: '#/components/schemas/WidgetVerticalAlign'
      required:
        - content
        - type
      type: object
    NoteWidgetDefinitionType:
      default: note
      description: Type of the note widget.
      enum:
        - note
      example: note
      type: string
      x-enum-varnames:
        - NOTE
    NotebookAbsoluteTime:
      description: Absolute timeframe.
      example:
        end: 2021-02-24T20:18:28+00:00
        start: 2021-02-24T19:18:28+00:00
      properties:
        end:
          description: The end time.
          example: 2021-02-24T20:18:28Z
          format: date-time
          type: string
        live:
          description: Indicates whether the timeframe should be shifted to end at
            the current time.
          type: boolean
        start:
          description: The start time.
          example: 2021-02-24T19:18:28Z
          format: date-time
          type: string
      required:
        - end
        - start
      type: object
    NotebookAuthor:
      description: Attributes of user object returned by the API.
      example:
        icon: icon
        name: name
        verified: true
        created_at: 2000-01-23T04:56:07.000+00:00
        disabled: true
        handle: handle
        title: title
        email: email
        status: status
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        name:
          description: Name of the user.
          type: string
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    NotebookCellCreateRequest:
      description: The description of a notebook cell create request.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCellCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/NotebookCellResourceType'
      required:
        - attributes
        - type
      type: object
    NotebookCellCreateRequestAttributes:
      description: |-
        The attributes of a notebook cell in create cell request. Valid cell types are `markdown`, `timeseries`, `toplist`, `heatmap`, `distribution`,
        `log_stream`. [More information on each graph visualization type.](https://docs.datadoghq.com/dashboards/widgets/)
      example:
        definition:
          requests:
            - display_type: line
              q: avg:system.load.1{*}
              style:
                line_type: solid
                line_width: normal
                palette: dog_classic
          show_legend: true
          type: timeseries
          yaxis:
            scale: linear
        graph_size: m
        split_by:
          keys: []
          tags: []
        time: null
      oneOf:
        - $ref: '#/components/schemas/NotebookMarkdownCellAttributes'
        - $ref: '#/components/schemas/NotebookTimeseriesCellAttributes'
        - $ref: '#/components/schemas/NotebookToplistCellAttributes'
        - $ref: '#/components/schemas/NotebookHeatMapCellAttributes'
        - $ref: '#/components/schemas/NotebookDistributionCellAttributes'
        - $ref: '#/components/schemas/NotebookLogStreamCellAttributes'
      type: object
    NotebookCellResourceType:
      default: notebook_cells
      description: Type of the Notebook Cell resource.
      enum:
        - notebook_cells
      example: notebook_cells
      type: string
      x-enum-varnames:
        - NOTEBOOK_CELLS
    NotebookCellResponse:
      description: The description of a notebook cell response.
      example:
        id: abcd1234
        type: notebook_cells
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCellResponseAttributes'
        id:
          description: Notebook cell ID.
          example: abcd1234
          type: string
        type:
          $ref: '#/components/schemas/NotebookCellResourceType'
      required:
        - attributes
        - id
        - type
      type: object
    NotebookCellResponseAttributes:
      description: |-
        The attributes of a notebook cell response. Valid cell types are `markdown`, `timeseries`, `toplist`, `heatmap`, `distribution`,
        `log_stream`. [More information on each graph visualization type.](https://docs.datadoghq.com/dashboards/widgets/)
      oneOf:
        - $ref: '#/components/schemas/NotebookMarkdownCellAttributes'
        - $ref: '#/components/schemas/NotebookTimeseriesCellAttributes'
        - $ref: '#/components/schemas/NotebookToplistCellAttributes'
        - $ref: '#/components/schemas/NotebookHeatMapCellAttributes'
        - $ref: '#/components/schemas/NotebookDistributionCellAttributes'
        - $ref: '#/components/schemas/NotebookLogStreamCellAttributes'
      type: object
    NotebookCellTime:
      description: Timeframe for the notebook cell. When 'null', the notebook global
        time is used.
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/NotebookRelativeTime'
        - $ref: '#/components/schemas/NotebookAbsoluteTime'
      type: object
    NotebookCellUpdateRequest:
      description: The description of a notebook cell update request.
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCellUpdateRequestAttributes'
        id:
          description: Notebook cell ID.
          example: abcd1234
          type: string
        type:
          $ref: '#/components/schemas/NotebookCellResourceType'
      required:
        - attributes
        - id
        - type
      type: object
    NotebookCellUpdateRequestAttributes:
      description: |-
        The attributes of a notebook cell in update cell request. Valid cell types are `markdown`, `timeseries`, `toplist`, `heatmap`, `distribution`,
        `log_stream`. [More information on each graph visualization type.](https://docs.datadoghq.com/dashboards/widgets/)
      example:
        definition:
          requests:
            - display_type: line
              q: avg:system.load.1{*}
              style:
                line_type: solid
                line_width: normal
                palette: dog_classic
          show_legend: true
          type: timeseries
          yaxis:
            scale: linear
        graph_size: m
        split_by:
          keys: []
          tags: []
        time: null
      oneOf:
        - $ref: '#/components/schemas/NotebookMarkdownCellAttributes'
        - $ref: '#/components/schemas/NotebookTimeseriesCellAttributes'
        - $ref: '#/components/schemas/NotebookToplistCellAttributes'
        - $ref: '#/components/schemas/NotebookHeatMapCellAttributes'
        - $ref: '#/components/schemas/NotebookDistributionCellAttributes'
        - $ref: '#/components/schemas/NotebookLogStreamCellAttributes'
      type: object
    NotebookCreateData:
      description: The data for a notebook create request.
      example:
        attributes:
          cells:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              type: notebook_cells
          name: Example Notebook
          status: published
        type: notebooks
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookCreateDataAttributes'
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - attributes
        - type
      type: object
    NotebookCreateDataAttributes:
      description: The data attributes of a notebook.
      example:
        cells:
          - attributes:
              definition:
                text: |-
                  ## Some test markdown

                  ```js
                  var x, y;
                  x = 5;
                  y = 6;
                  ```
                type: markdown
            type: notebook_cells
          - attributes:
              definition:
                requests:
                  - display_type: line
                    q: avg:system.load.1{*}
                    style:
                      line_type: solid
                      line_width: normal
                      palette: dog_classic
                show_legend: true
                type: timeseries
                yaxis:
                  scale: linear
              graph_size: m
              split_by:
                keys: []
                tags: []
              time: null
            type: notebook_cells
        name: Example Notebook
        status: published
      properties:
        cells:
          description: List of cells to display in the notebook.
          example:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              type: notebook_cells
          items:
            $ref: '#/components/schemas/NotebookCellCreateRequest'
          type: array
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - cells
        - name
        - time
      type: object
    NotebookCreateRequest:
      description: The description of a notebook create request.
      example:
        data:
          attributes:
            cells:
              - attributes:
                  definition:
                    text: |-
                      ## Some test markdown

                      ```js
                      var x, y;
                      x = 5;
                      y = 6;
                      ```
                    type: markdown
                type: notebook_cells
              - attributes:
                  definition:
                    requests:
                      - display_type: line
                        q: avg:system.load.1{*}
                        style:
                          line_type: solid
                          line_width: normal
                          palette: dog_classic
                    show_legend: true
                    type: timeseries
                    yaxis:
                      scale: linear
                  graph_size: m
                  split_by:
                    keys: []
                    tags: []
                  time: null
                type: notebook_cells
            name: Example Notebook
            status: published
          type: notebooks
      properties:
        data:
          $ref: '#/components/schemas/NotebookCreateData'
      required:
        - data
      type: object
    NotebookDistributionCellAttributes:
      description: The attributes of a notebook `distribution` cell.
      properties:
        definition:
          $ref: '#/components/schemas/DistributionWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookGlobalTime:
      description: Notebook global timeframe.
      oneOf:
        - $ref: '#/components/schemas/NotebookRelativeTime'
        - $ref: '#/components/schemas/NotebookAbsoluteTime'
      type: object
    NotebookGraphSize:
      description: The size of the graph.
      enum:
        - xs
        - s
        - m
        - l
        - xl
      example: m
      type: string
      x-enum-varnames:
        - EXTRA_SMALL
        - SMALL
        - MEDIUM
        - LARGE
        - EXTRA_LARGE
    NotebookHeatMapCellAttributes:
      description: The attributes of a notebook `heatmap` cell.
      properties:
        definition:
          $ref: '#/components/schemas/HeatMapWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookLogStreamCellAttributes:
      description: The attributes of a notebook `log_stream` cell.
      properties:
        definition:
          $ref: '#/components/schemas/LogStreamWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookMarkdownCellAttributes:
      description: The attributes of a notebook `markdown` cell.
      properties:
        definition:
          $ref: '#/components/schemas/NotebookMarkdownCellDefinition'
      required:
        - definition
      type: object
    NotebookMarkdownCellDefinition:
      description: Text in a notebook is formatted with [Markdown](https://daringfireball.net/projects/markdown/),
        which enables the use of headings, subheadings, links, images, lists, and
        code blocks.
      properties:
        text:
          description: The markdown content.
          example: "# Example Header \nexample content"
          type: string
        type:
          $ref: '#/components/schemas/NotebookMarkdownCellDefinitionType'
      required:
        - text
        - type
      type: object
    NotebookMarkdownCellDefinitionType:
      default: markdown
      description: Type of the markdown cell.
      enum:
        - markdown
      example: markdown
      type: string
      x-enum-varnames:
        - MARKDOWN
    NotebookRelativeTime:
      description: Relative timeframe.
      example:
        live_span: 1h
      properties:
        live_span:
          $ref: '#/components/schemas/WidgetLiveSpan'
      required:
        - live_span
      type: object
    NotebookResourceType:
      default: notebooks
      description: Type of the Notebook resource.
      enum:
        - notebooks
      example: notebooks
      type: string
      x-enum-varnames:
        - NOTEBOOKS
    NotebookResponse:
      description: The description of a notebook response.
      example:
        data:
          attributes:
            cells:
              - attributes:
                  definition:
                    text: |-
                      ## Some test markdown

                      ```js
                      var x, y;
                      x = 5;
                      y = 6;
                      ```
                    type: markdown
                id: bzbycoya
                type: notebook_cells
              - attributes:
                  definition:
                    requests:
                      - display_type: line
                        q: avg:system.load.1{*}
                        style:
                          line_type: solid
                          line_width: normal
                          palette: dog_classic
                    show_legend: true
                    type: timeseries
                    yaxis:
                      scale: linear
                  graph_size: m
                  split_by:
                    keys: []
                    tags: []
                  time: null
                id: 9k6bc6xc
                type: notebook_cells
            author:
              icon: icon
              name: name
              verified: true
              created_at: 2000-01-23T04:56:07.000+00:00
              disabled: true
              handle: handle
              title: title
              email: email
              status: status
            created: 2021-02-24T23:14:15.173964Z
            name: Example Notebook
            modified: 2021-02-24T23:15:23.274966Z
            status: published
          id: 123456
          type: notebooks
      properties:
        data:
          $ref: '#/components/schemas/NotebookResponseData'
      type: object
    NotebookResponseData:
      description: The data for a notebook.
      example:
        attributes:
          cells:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              id: bzbycoya
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              id: 9k6bc6xc
              type: notebook_cells
          author:
            icon: icon
            name: name
            verified: true
            created_at: 2000-01-23T04:56:07.000+00:00
            disabled: true
            handle: handle
            title: title
            email: email
            status: status
          created: 2021-02-24T23:14:15.173964Z
          name: Example Notebook
          modified: 2021-02-24T23:15:23.274966Z
          status: published
        id: 123456
        type: notebooks
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookResponseDataAttributes'
        id:
          description: Unique notebook ID, assigned when you create the notebook.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - attributes
        - id
        - type
      type: object
    NotebookResponseDataAttributes:
      description: The attributes of a notebook.
      example:
        cells:
          - attributes:
              definition:
                text: |-
                  ## Some test markdown

                  ```js
                  var x, y;
                  x = 5;
                  y = 6;
                  ```
                type: markdown
            id: bzbycoya
            type: notebook_cells
          - attributes:
              definition:
                requests:
                  - display_type: line
                    q: avg:system.load.1{*}
                    style:
                      line_type: solid
                      line_width: normal
                      palette: dog_classic
                show_legend: true
                type: timeseries
                yaxis:
                  scale: linear
              graph_size: m
              split_by:
                keys: []
                tags: []
              time: null
            id: 9k6bc6xc
            type: notebook_cells
        author:
          icon: icon
          name: name
          verified: true
          created_at: 2000-01-23T04:56:07.000+00:00
          disabled: true
          handle: handle
          title: title
          email: email
          status: status
        created: 2021-02-24T23:14:15.173964Z
        name: Example Notebook
        modified: 2021-02-24T23:15:23.274966Z
        status: published
      properties:
        author:
          $ref: '#/components/schemas/NotebookAuthor'
        cells:
          description: List of cells to display in the notebook.
          example:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              id: bzbycoya
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              id: 9k6bc6xc
              type: notebook_cells
          items:
            $ref: '#/components/schemas/NotebookCellResponse'
          type: array
        created:
          description: UTC time stamp for when the notebook was created.
          example: 2021-02-24T23:14:15.173964Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: UTC time stamp for when the notebook was last modified.
          example: 2021-02-24T23:15:23.274966Z
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - cells
        - name
        - time
      type: object
    NotebookSplitBy:
      description: Object describing how to split the graph to display multiple visualizations
        per request.
      example:
        keys: []
        tags: []
      properties:
        keys:
          description: Keys to split on.
          items:
            description: A key to split on.
            example: environment
            type: string
          type: array
        tags:
          description: Tags to split on.
          items:
            description: A tag to split on.
            example: environment:staging
            type: string
          type: array
      required:
        - keys
        - tags
      type: object
    NotebookStatus:
      default: published
      description: Publication status of the notebook. For now, always "published".
      enum:
        - published
      example: published
      type: string
      x-enum-varnames:
        - PUBLISHED
    NotebookTimeseriesCellAttributes:
      description: The attributes of a notebook `timeseries` cell.
      properties:
        definition:
          $ref: '#/components/schemas/TimeseriesWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookToplistCellAttributes:
      description: The attributes of a notebook `toplist` cell.
      properties:
        definition:
          $ref: '#/components/schemas/ToplistWidgetDefinition'
        graph_size:
          $ref: '#/components/schemas/NotebookGraphSize'
        split_by:
          $ref: '#/components/schemas/NotebookSplitBy'
        time:
          $ref: '#/components/schemas/NotebookCellTime'
      required:
        - definition
      type: object
    NotebookUpdateCell:
      description: |-
        Updating a notebook can either insert new cell(s) or update existing cell(s) by including the cell `id`.
        To delete existing cell(s), simply omit it from the list of cells.
      oneOf:
        - $ref: '#/components/schemas/NotebookCellCreateRequest'
        - $ref: '#/components/schemas/NotebookCellUpdateRequest'
      type: object
    NotebookUpdateData:
      description: The data for a notebook update request.
      example:
        attributes:
          cells:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              id: bzbycoya
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              id: 9k6bc6xc
              type: notebook_cells
          name: Example Notebook
          status: published
        type: notebooks
      properties:
        attributes:
          $ref: '#/components/schemas/NotebookUpdateDataAttributes'
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - attributes
        - type
      type: object
    NotebookUpdateDataAttributes:
      description: The data attributes of a notebook.
      example:
        cells:
          - attributes:
              definition:
                text: |-
                  ## Some test markdown

                  ```js
                  var x, y;
                  x = 5;
                  y = 6;
                  ```
                type: markdown
            id: bzbycoya
            type: notebook_cells
          - attributes:
              definition:
                requests:
                  - display_type: line
                    q: avg:system.load.1{*}
                    style:
                      line_type: solid
                      line_width: normal
                      palette: dog_classic
                show_legend: true
                type: timeseries
                yaxis:
                  scale: linear
              graph_size: m
              split_by:
                keys: []
                tags: []
              time: null
            id: 9k6bc6xc
            type: notebook_cells
        name: Example Notebook
        status: published
      properties:
        cells:
          description: List of cells to display in the notebook.
          example:
            - attributes:
                definition:
                  text: |-
                    ## Some test markdown

                    ```js
                    var x, y;
                    x = 5;
                    y = 6;
                    ```
                  type: markdown
              id: bzbycoya
              type: notebook_cells
            - attributes:
                definition:
                  requests:
                    - display_type: line
                      q: avg:system.load.1{*}
                      style:
                        line_type: solid
                        line_width: normal
                        palette: dog_classic
                  show_legend: true
                  type: timeseries
                  yaxis:
                    scale: linear
                graph_size: m
                split_by:
                  keys: []
                  tags: []
                time: null
              id: 9k6bc6xc
              type: notebook_cells
          items:
            $ref: '#/components/schemas/NotebookUpdateCell'
          type: array
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - cells
        - name
        - time
      type: object
    NotebookUpdateRequest:
      description: The description of a notebook update request.
      example:
        data:
          attributes:
            cells:
              - attributes:
                  definition:
                    text: |-
                      ## Some test markdown

                      ```js
                      var x, y;
                      x = 5;
                      y = 6;
                      ```
                    type: markdown
                id: bzbycoya
                type: notebook_cells
              - attributes:
                  definition:
                    requests:
                      - display_type: line
                        q: avg:system.load.1{*}
                        style:
                          line_type: solid
                          line_width: normal
                          palette: dog_classic
                    show_legend: true
                    type: timeseries
                    yaxis:
                      scale: linear
                  graph_size: m
                  split_by:
                    keys: []
                    tags: []
                  time: null
                id: 9k6bc6xc
                type: notebook_cells
            name: Example Notebook
            status: published
          type: notebooks
      properties:
        data:
          $ref: '#/components/schemas/NotebookUpdateData'
      required:
        - data
      type: object
    NotebooksResponse:
      description: Notebooks get all response.
      example:
        data:
          - attributes:
              cells:
                - id: abcd1234
                  type: notebook_cells
                - id: abcd1234
                  type: notebook_cells
              author:
                icon: icon
                name: name
                verified: true
                created_at: 2000-01-23T04:56:07.000+00:00
                disabled: true
                handle: handle
                title: title
                email: email
                status: status
              created: 2021-02-24T23:14:15.173964Z
              name: Example Notebook
              modified: 2021-02-24T23:15:23.274966Z
              status: published
            id: 123456
            type: notebooks
          - attributes:
              cells:
                - id: abcd1234
                  type: notebook_cells
                - id: abcd1234
                  type: notebook_cells
              author:
                icon: icon
                name: name
                verified: true
                created_at: 2000-01-23T04:56:07.000+00:00
                disabled: true
                handle: handle
                title: title
                email: email
                status: status
              created: 2021-02-24T23:14:15.173964Z
              name: Example Notebook
              modified: 2021-02-24T23:15:23.274966Z
              status: published
            id: 123456
            type: notebooks
        meta:
          page:
            total_count: 0
            total_filtered_count: 6
      properties:
        data:
          description: List of notebook definitions.
          items:
            $ref: '#/components/schemas/NotebooksResponseData'
          type: array
        meta:
          $ref: '#/components/schemas/NotebooksResponse_meta'
      type: object
    NotebooksResponseData:
      description: The data for a notebook in get all response.
      example:
        attributes:
          cells:
            - id: abcd1234
              type: notebook_cells
            - id: abcd1234
              type: notebook_cells
          author:
            icon: icon
            name: name
            verified: true
            created_at: 2000-01-23T04:56:07.000+00:00
            disabled: true
            handle: handle
            title: title
            email: email
            status: status
          created: 2021-02-24T23:14:15.173964Z
          name: Example Notebook
          modified: 2021-02-24T23:15:23.274966Z
          status: published
        id: 123456
        type: notebooks
      properties:
        attributes:
          $ref: '#/components/schemas/NotebooksResponseDataAttributes'
        id:
          description: Unique notebook ID, assigned when you create the notebook.
          example: 123456
          format: int64
          readOnly: true
          type: integer
        type:
          $ref: '#/components/schemas/NotebookResourceType'
      required:
        - attributes
        - id
        - type
      type: object
    NotebooksResponseDataAttributes:
      description: The attributes of a notebook in get all response.
      example:
        cells:
          - id: abcd1234
            type: notebook_cells
          - id: abcd1234
            type: notebook_cells
        author:
          icon: icon
          name: name
          verified: true
          created_at: 2000-01-23T04:56:07.000+00:00
          disabled: true
          handle: handle
          title: title
          email: email
          status: status
        created: 2021-02-24T23:14:15.173964Z
        name: Example Notebook
        modified: 2021-02-24T23:15:23.274966Z
        status: published
      properties:
        author:
          $ref: '#/components/schemas/NotebookAuthor'
        cells:
          description: List of cells to display in the notebook.
          items:
            $ref: '#/components/schemas/NotebookCellResponse'
          type: array
        created:
          description: UTC time stamp for when the notebook was created.
          example: 2021-02-24T23:14:15.173964Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: UTC time stamp for when the notebook was last modified.
          example: 2021-02-24T23:15:23.274966Z
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the notebook.
          example: Example Notebook
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/NotebookStatus'
        time:
          $ref: '#/components/schemas/NotebookGlobalTime'
      required:
        - name
      type: object
    NotebooksResponsePage:
      description: Pagination metadata returned by the API.
      example:
        total_count: 0
        total_filtered_count: 6
      properties:
        total_count:
          description: The total number of notebooks that would be returned if the
            request was not filtered by `start` and `count` parameters.
          format: int64
          type: integer
        total_filtered_count:
          description: The total number of notebooks returned.
          format: int64
          type: integer
      type: object
    OrganizationBilling:
      deprecated: true
      description: A JSON array of billing type.
      example:
        type: parent_billing
      properties:
        type:
          description: The type of billing. Only `parent_billing` is supported.
          type: string
      type: object
    OrganizationCreateBody:
      description: Object describing an organization to create.
      example:
        name: New child org
        subscription:
          type: pro
        billing:
          type: parent_billing
      properties:
        billing:
          $ref: '#/components/schemas/OrganizationBilling'
        name:
          description: The name of the new child-organization, limited to 32 characters.
          example: New child org
          maximum: 32
          type: string
        subscription:
          $ref: '#/components/schemas/OrganizationSubscription'
      required:
        - name
      type: object
    OrganizationCreateResponse:
      description: Response object for an organization creation.
      example:
        api_key:
          created: 2019-08-02 15:31:07
          name: example user
          created_by: john@example.com
          key: 1234512345123456abcabc912349abcd
        org:
          settings:
            saml_idp_initiated_login:
              enabled: false
            saml_idp_endpoint: https://my.saml.endpoint
            saml_can_be_enabled: false
            private_widget_share: false
            saml_login_url: https://my.saml.login.url
            saml:
              enabled: false
            saml_autocreate_users_domains:
              domains:
                - example.com
                - example.com
              enabled: false
            saml_idp_metadata_uploaded: false
            saml_strict_mode:
              enabled: false
            saml_autocreate_access_role: st
          created: 2019-09-26T17:28:28Z
          name: New child org
          description: some description
          subscription:
            type: pro
          billing:
            type: parent_billing
          public_id: abcdef12345
        application_key:
          owner: example.com
          name: example user
          hash: 1234512345123459cda4eb9ced49a3d84fd0138c
        user:
          access_role: st
          icon: /path/to/matching/gravatar/icon
          name: test user
          verified: true
          disabled: false
          handle: test@datadoghq.com
          email: test@datadoghq.com
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKey'
        application_key:
          $ref: '#/components/schemas/ApplicationKey'
        org:
          $ref: '#/components/schemas/Organization'
        user:
          $ref: '#/components/schemas/User'
      type: object
    OrganizationListResponse:
      description: Response with the list of organizations.
      example:
        orgs:
          - settings:
              saml_idp_initiated_login:
                enabled: false
              saml_idp_endpoint: https://my.saml.endpoint
              saml_can_be_enabled: false
              private_widget_share: false
              saml_login_url: https://my.saml.login.url
              saml:
                enabled: false
              saml_autocreate_users_domains:
                domains:
                  - example.com
                  - example.com
                enabled: false
              saml_idp_metadata_uploaded: false
              saml_strict_mode:
                enabled: false
              saml_autocreate_access_role: st
            created: 2019-09-26T17:28:28Z
            name: New child org
            description: some description
            subscription:
              type: pro
            billing:
              type: parent_billing
            public_id: abcdef12345
          - settings:
              saml_idp_initiated_login:
                enabled: false
              saml_idp_endpoint: https://my.saml.endpoint
              saml_can_be_enabled: false
              private_widget_share: false
              saml_login_url: https://my.saml.login.url
              saml:
                enabled: false
              saml_autocreate_users_domains:
                domains:
                  - example.com
                  - example.com
                enabled: false
              saml_idp_metadata_uploaded: false
              saml_strict_mode:
                enabled: false
              saml_autocreate_access_role: st
            created: 2019-09-26T17:28:28Z
            name: New child org
            description: some description
            subscription:
              type: pro
            billing:
              type: parent_billing
            public_id: abcdef12345
      properties:
        orgs:
          description: Array of organization objects.
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      type: object
    OrganizationResponse:
      description: Response with an organization.
      example:
        org:
          settings:
            saml_idp_initiated_login:
              enabled: false
            saml_idp_endpoint: https://my.saml.endpoint
            saml_can_be_enabled: false
            private_widget_share: false
            saml_login_url: https://my.saml.login.url
            saml:
              enabled: false
            saml_autocreate_users_domains:
              domains:
                - example.com
                - example.com
              enabled: false
            saml_idp_metadata_uploaded: false
            saml_strict_mode:
              enabled: false
            saml_autocreate_access_role: st
          created: 2019-09-26T17:28:28Z
          name: New child org
          description: some description
          subscription:
            type: pro
          billing:
            type: parent_billing
          public_id: abcdef12345
      properties:
        org:
          $ref: '#/components/schemas/Organization'
      type: object
    OrganizationSubscription:
      deprecated: true
      description: Subscription definition.
      example:
        type: pro
      properties:
        type:
          description: The subscription type. Types available are `trial`, `free`,
            and `pro`.
          type: string
      type: object
    PagerDutyService:
      description: The PagerDuty service that is available for integration with Datadog.
      example:
        service_key: ""
        service_name: ""
      properties:
        service_key:
          description: Your service key in PagerDuty.
          example: ""
          type: string
        service_name:
          description: Your service name associated with a service key in PagerDuty.
          example: ""
          type: string
      required:
        - service_key
        - service_name
      type: object
    PagerDutyServiceKey:
      description: PagerDuty service object key.
      example:
        service_key: ""
      properties:
        service_key:
          description: Your service key in PagerDuty.
          example: ""
          type: string
      required:
        - service_key
      type: object
    PagerDutyServiceName:
      description: PagerDuty service object name.
      example:
        service_name: ""
      properties:
        service_name:
          description: Your service name associated service key in PagerDuty.
          example: ""
          type: string
      required:
        - service_name
      type: object
    Point:
      description: Array of timeseries points.
      example:
        - 1575317847
        - 0.5
      items:
        description: |-
          Each point is of the form `[POSIX_timestamp, numeric_value]`.
          The timestamp should be in seconds and current.
          The numeric value format should be a 32bit float gauge-type value.
          Current is defined as not more than 10 minutes in the future or more than 1 hour in the past.
        format: double
        nullable: true
        type: number
      maxItems: 2
      minItems: 2
      type: array
    ProcessQueryDefinition:
      description: The process query to use in the widget.
      properties:
        filter_by:
          description: List of processes.
          items:
            description: Process name.
            type: string
          type: array
        limit:
          description: Max number of items in the filter list.
          format: int64
          minimum: 0
          type: integer
        metric:
          description: Your chosen metric.
          example: ""
          type: string
        search_by:
          description: Your chosen search term.
          type: string
      required:
        - metric
      type: object
    QueryValueWidgetDefinition:
      description: Query values display the current value of a given metric, APM,
        or log query.
      properties:
        autoscale:
          description: Whether to use auto-scaling or not.
          type: boolean
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        custom_unit:
          description: Display a unit of your choice on the widget.
          type: string
        precision:
          description: Number of decimals to show. If not defined, the widget uses
            the raw value.
          format: int64
          type: integer
        requests:
          description: Widget definition.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/QueryValueWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        text_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/QueryValueWidgetDefinitionType'
      required:
        - requests
        - type
      type: object
    QueryValueWidgetDefinitionType:
      default: query_value
      description: Type of the query value widget.
      enum:
        - query_value
      example: query_value
      type: string
      x-enum-varnames:
        - QUERY_VALUE
    QueryValueWidgetRequest:
      description: Updated query value widget.
      properties:
        aggregator:
          $ref: '#/components/schemas/WidgetAggregator'
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        audit_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        conditional_formats:
          description: List of conditional formats.
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          type: array
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries. **This feature is
            currently in beta.**
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: TODO.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
            **This feature is currently in beta.**
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    SLOBulkDelete:
      additionalProperties:
        description: An array of all SLO timeframes.
        items:
          $ref: '#/components/schemas/SLOTimeframe'
        type: array
      description: |-
        A map of service level objective object IDs to arrays of timeframes,
        which indicate the thresholds to delete for each ID.
      example:
        id1:
          - 7d
          - 30d
        id2:
          - 7d
          - 30d
      type: object
    SLOBulkDeleteError:
      description: Object describing the error.
      example:
        id: ""
        message: ""
      properties:
        id:
          description: |-
            The ID of the service level objective object associated with
            this error.
          example: ""
          type: string
        message:
          description: The error message.
          example: ""
          type: string
        timeframe:
          $ref: '#/components/schemas/SLOErrorTimeframe'
      required:
        - id
        - message
        - timeframe
      type: object
    SLOBulkDeleteResponse:
      description: |-
        The bulk partial delete service level objective object endpoint
        response.

        This endpoint operates on multiple service level objective objects, so
        it may be partially successful. In such cases, the "data" and "error"
        fields in this response indicate which deletions succeeded and failed.
      example:
        data:
          deleted:
            - deleted
            - deleted
          updated:
            - updated
            - updated
        errors:
          - id: ""
            message: ""
          - id: ""
            message: ""
      properties:
        data:
          $ref: '#/components/schemas/SLOBulkDeleteResponse_data'
        errors:
          description: Array of errors object returned.
          items:
            $ref: '#/components/schemas/SLOBulkDeleteError'
          type: array
      type: object
    SLOCorrection:
      description: The response object of a list of SLO corrections
      example:
        attributes:
          creator:
            name: name
            handle: handle
            email: email
          timezone: timezone
          slo_id: slo_id
          start: 6
          description: description
          end: 0
          category: Scheduled Maintenance
        id: id
        type: correction
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionResponseAttributes'
        id:
          description: The ID of the SLO correction
          type: string
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      type: object
    SLOCorrectionCategory:
      description: Category the SLO correction belongs to
      enum:
        - Scheduled Maintenance
        - Outside Business Hours
        - Deployment
        - Other
      example: Scheduled Maintenance
      type: string
      x-enum-varnames:
        - SCHEDULED_MAINTENANCE
        - OUTSIDE_BUSINESS_HOURS
        - DEPLOYMENT
        - OTHER
    SLOCorrectionCreateData:
      description: The data object associated with the SLO correction to be created
      example:
        attributes:
          timezone: UTC
          slo_id: sloId
          start: 1600000000
          description: description
          end: 1600000000
          category: Scheduled Maintenance
        type: correction
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      type: object
    SLOCorrectionCreateRequest:
      description: An object that defines a correction to be applied to an SLO
      example:
        data:
          attributes:
            timezone: UTC
            slo_id: sloId
            start: 1600000000
            description: description
            end: 1600000000
            category: Scheduled Maintenance
          type: correction
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrectionCreateData'
      type: object
    SLOCorrectionCreateRequestAttributes:
      description: The attribute object associated with the SLO correction to be created
      example:
        timezone: UTC
        slo_id: sloId
        start: 1600000000
        description: description
        end: 1600000000
        category: Scheduled Maintenance
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        description:
          description: Description of the correction being made.
          type: string
        end:
          description: Ending time of the correction in epoch seconds
          example: 1600000000
          format: int64
          type: integer
        slo_id:
          description: ID of the SLO that this correction will be applied to
          example: sloId
          type: string
        start:
          description: Starting time of the correction in epoch seconds
          example: 1600000000
          format: int64
          type: integer
        timezone:
          description: The timezone to display in the UI for the correction times
            (defaults to "UTC")
          example: UTC
          type: string
      required:
        - category
        - end
        - slo_id
        - start
      type: object
    SLOCorrectionListResponse:
      description: A list of  SLO correction objects
      example:
        data:
          - attributes:
              creator:
                name: name
                handle: handle
                email: email
              timezone: timezone
              slo_id: slo_id
              start: 6
              description: description
              end: 0
              category: Scheduled Maintenance
            id: id
            type: correction
          - attributes:
              creator:
                name: name
                handle: handle
                email: email
              timezone: timezone
              slo_id: slo_id
              start: 6
              description: description
              end: 0
              category: Scheduled Maintenance
            id: id
            type: correction
        meta:
          page:
            total_count: 1
            total_filtered_count: 5
      properties:
        data:
          description: The list of of SLO corrections objects
          items:
            $ref: '#/components/schemas/SLOCorrection'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    SLOCorrectionResponse:
      description: The response object of an SLO correction
      example:
        data:
          attributes:
            creator:
              name: name
              handle: handle
              email: email
            timezone: timezone
            slo_id: slo_id
            start: 6
            description: description
            end: 0
            category: Scheduled Maintenance
          id: id
          type: correction
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrection'
      type: object
    SLOCorrectionResponseAttributes:
      description: The attribute object associated with the SLO correction
      example:
        creator:
          name: name
          handle: handle
          email: email
        timezone: timezone
        slo_id: slo_id
        start: 6
        description: description
        end: 0
        category: Scheduled Maintenance
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        creator:
          $ref: '#/components/schemas/Creator'
        description:
          description: Description of the correction being made.
          type: string
        end:
          description: Ending time of the correction in epoch seconds
          format: int64
          type: integer
        slo_id:
          description: ID of the SLO that this correction will be applied to
          type: string
        start:
          description: Starting time of the correction in epoch seconds
          format: int64
          type: integer
        timezone:
          description: The timezone to display in the UI for the correction times
            (defaults to "UTC")
          type: string
      type: object
    SLOCorrectionType:
      default: correction
      description: SLO correction resource type.
      enum:
        - correction
      example: correction
      type: string
      x-enum-varnames:
        - CORRECTION
    SLOCorrectionUpdateData:
      description: The data object associated with the SLO correction to be updated
      example:
        attributes:
          timezone: UTC
          start: 1600000000
          description: description
          end: 1600000000
          category: Scheduled Maintenance
        type: correction
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      type: object
    SLOCorrectionUpdateRequest:
      description: An object that defines a correction to be applied to an SLO
      example:
        data:
          attributes:
            timezone: UTC
            start: 1600000000
            description: description
            end: 1600000000
            category: Scheduled Maintenance
          type: correction
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrectionUpdateData'
      type: object
    SLOCorrectionUpdateRequestAttributes:
      description: The attribute object associated with the SLO correction to be updated
      example:
        timezone: UTC
        start: 1600000000
        description: description
        end: 1600000000
        category: Scheduled Maintenance
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        description:
          description: Description of the correction being made.
          type: string
        end:
          description: Ending time of the correction in epoch seconds
          example: 1600000000
          format: int64
          type: integer
        start:
          description: Starting time of the correction in epoch seconds
          example: 1600000000
          format: int64
          type: integer
        timezone:
          description: The timezone to display in the UI for the correction times
            (defaults to "UTC")
          example: UTC
          type: string
      type: object
    SLODeleteResponse:
      description: A response list of all service level objective deleted.
      example:
        data:
          - data
          - data
        errors:
          key: errors
      properties:
        data:
          description: An array containing the ID of the deleted service level objective
            object.
          items:
            description: ID of a deleted SLO.
            type: string
          type: array
        errors:
          additionalProperties:
            description: Error preventing the SLO deletion.
            type: string
          description: An dictionary containing the ID of the SLO as key and a deletion
            error as value.
          type: object
      type: object
    SLOErrorBudgetRemainingData:
      additionalProperties:
        description: Remaining error budget.
        format: double
        type: number
      description: A mapping of threshold `timeframe` to the remaining error budget.
      example:
        "7d": 100.0
      type: object
    SLOErrorTimeframe:
      description: |-
        The timeframe of the threshold associated with this error
        or "all" if all thresholds are affected.
      enum:
        - 7d
        - 30d
        - 90d
        - all
      type: string
      x-enum-varnames:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - NINETY_DAYS
        - ALL
    SLOHistoryMetrics:
      description: |-
        A `metric` based SLO history response.

        This is not included in responses for `monitor` based SLOs.
      example:
        res_type: ""
        resp_version: 0
        times: []
        query: ""
        interval: 0
        message: ""
        denominator:
          metadata: {}
          values: []
          count: 0
          sum: 0.0
        numerator:
          metadata: {}
          values: []
          count: 0
          sum: 0.0
      properties:
        denominator:
          $ref: '#/components/schemas/SLOHistoryMetricsSeries'
        interval:
          description: The aggregated query interval for the series data. It's implicit
            based on the query time window.
          example: 0
          format: int64
          type: integer
        message:
          description: Optional message if there are specific query issues/warnings.
          example: ""
          type: string
        numerator:
          $ref: '#/components/schemas/SLOHistoryMetricsSeries'
        query:
          description: The combined numerator and denominator query CSV.
          example: ""
          type: string
        res_type:
          description: The series result type. This mimics `batch_query` response
            type.
          example: ""
          type: string
        resp_version:
          description: The series response version type. This mimics `batch_query`
            response type.
          example: 0
          format: int64
          type: integer
        times:
          description: An array of query timestamps in EPOCH milliseconds
          example: []
          items:
            description: A timestamp in EPOCH milliseconds.
            format: double
            type: number
          type: array
      required:
        - denominator
        - interval
        - numerator
        - query
        - res_type
        - resp_version
        - times
      type: object
    SLOHistoryMetricsSeries:
      description: |-
        A representation of `metric` based SLO time series for the provided queries.
        This is the same response type from `batch_query` endpoint.
      example:
        metadata: {}
        values: []
        count: 0
        sum: 0.0
      properties:
        count:
          description: Count of submitted metrics.
          example: 0
          format: int64
          type: integer
        metadata:
          $ref: '#/components/schemas/SLOHistoryMetricsSeries_metadata'
        sum:
          description: Total sum of the query.
          example: 0.0
          format: double
          type: number
        values:
          description: The query values for each metric.
          example: []
          items:
            description: A metric name and its value.
            format: double
            type: number
          type: array
      required:
        - count
        - metadata
        - sum
        - values
      type: object
    SLOHistoryMetricsSeriesMetadataUnit:
      description: An Object of metric units.
      properties:
        family:
          description: The family of metric unit, for example `bytes` is the family
            for `kibibyte`, `byte`, and `bit` units.
          type: string
        id:
          description: The ID of the metric unit.
          format: int64
          type: integer
        name:
          description: The unit of the metric, for instance `byte`.
          type: string
        plural:
          description: The plural Unit of metric, for instance `bytes`.
          nullable: true
          type: string
        scale_factor:
          description: The scale factor of metric unit, for instance `1.0`.
          format: double
          type: number
        short_name:
          description: A shorter and abbreviated version of the metric unit, for instance
            `B`.
          nullable: true
          type: string
      type: object
    SLOHistoryResponse:
      description: A service level objective history response.
      example:
        data:
          thresholds: {}
          to_ts: 1615928790
          series:
            res_type: ""
            resp_version: 0
            times: []
            query: ""
            interval: 0
            message: ""
            denominator:
              metadata: {}
              values: []
              count: 0
              sum: 0.0
            numerator:
              metadata: {}
              values: []
              count: 0
              sum: 0.0
          type_id: 0
          from_ts: 1615323990
          group_by: []
          groups: []
          overall:
            preview: true
            monitor_modified: 1615867200
            sli_value: 99.99
            precision:
              "30d": 1
              "7d": 2
            error_budget_remaining:
              "7d": 100.0
            name: string
            span_precision: 2
            history:
              - - - 1579212382
                  - 0
              - - - 1579212382
                  - 0
            monitor_type: string
            errors: []
            group: name
            uptime: 99.99
          type: metric
          monitors: []
        errors:
          - error: error
          - error: error
      properties:
        data:
          $ref: '#/components/schemas/SLOHistoryResponse_data'
        errors:
          description: A list of errors while querying the history data for the service
            level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseError'
          type: array
      type: object
    SLOHistoryResponseError:
      description: A service level objective response containing the requested history.
      example:
        error: error
      properties:
        error:
          description: Human readable error.
          type: string
      type: object
    SLOHistorySLIData:
      description: |-
        An object that holds an SLI value and its associated data. It can represent an SLO's overall SLI value.
        This can also represent the SLI value for a specific monitor in multi-monitor SLOs, or a group in grouped SLOs.
      example:
        preview: true
        monitor_modified: 1615867200
        sli_value: 99.99
        precision:
          "30d": 1
          "7d": 2
        error_budget_remaining:
          "7d": 100.0
        name: string
        span_precision: 2
        history:
          - - - 1579212382
              - 0
          - - - 1579212382
              - 0
        monitor_type: string
        errors: []
        group: name
        uptime: 99.99
      properties:
        error_budget_remaining:
          additionalProperties:
            description: Remaining error budget.
            format: double
            type: number
          description: A mapping of threshold `timeframe` to the remaining error budget.
          example:
            "7d": 100.0
          type: object
        errors:
          description: A list of errors while querying the history data for the service
            level objective.
          example: []
          items:
            $ref: '#/components/schemas/SLOHistoryResponseError'
          type: array
        group:
          description: For groups in a grouped SLO, this is the group name.
          example: name
          type: string
        history:
          description: For `monitor` based SLOs, this includes the aggregated history
            uptime time series.
          items:
            description: Represents an array time series data.
            example:
              - - 1579212382
                - 0
            items:
              description: A time series data point which is a tuple of (timestamp,
                value).
              format: double
              type: number
            maxItems: 2
            minItems: 2
            type: array
          type: array
        monitor_modified:
          description: For `monitor` based SLOs, this is the last modified timestamp
            in epoch seconds of the monitor.
          example: 1615867200
          format: int64
          type: integer
        monitor_type:
          description: For `monitor` based SLOs, this describes the type of monitor.
          example: string
          type: string
        name:
          description: For groups in a grouped SLO, this is the group name. For monitors
            in a multi-monitor SLO, this is the monitor name.
          example: string
          type: string
        precision:
          additionalProperties:
            description: The number of accurate decimals.
            format: double
            type: number
          description: A mapping of threshold `timeframe` to number of accurate decimals,
            regardless of the from && to timestamp.
          example:
            "30d": 1
            "7d": 2
          type: object
        preview:
          description: |-
            For `monitor` based SLOs, when `true` this indicates that a replay is in progress to give an accurate uptime
            calculation.
          example: true
          type: boolean
        sli_value:
          description: The current SLI value of the SLO over the history window.
          example: 99.99
          format: double
          type: number
        span_precision:
          description: The amount of decimal places the SLI value is accurate to for
            the given from `&&` to timestamp.
          example: 2
          format: double
          type: number
        uptime:
          deprecated: true
          description: Use `sli_value` instead.
          example: 99.99
          format: double
          type: number
      type: object
    SLOListResponse:
      description: A response with one or more service level objective.
      example:
        metadata:
          page:
            total_count: 5
            total_filtered_count: 5
        data:
          - creator:
              name: name
              handle: handle
              email: email
            query:
              denominator: sum:my.custom.metric{*}.as_count()
              numerator: sum:my.custom.metric{type:good}.as_count()
            created_at: 0
            description: description
            groups:
              - env:prod
              - role:mysql
            type: metric
            tags:
              - env:prod
              - app:core
            thresholds:
              - target: 95
                timeframe: 7d
              - target: 95
                timeframe: 30d
                warning: 97
            monitor_ids:
              - 1
              - 1
            name: Custom Metric SLO
            id: id
            modified_at: 6
            monitor_tags:
              - monitor_tags
              - monitor_tags
          - creator:
              name: name
              handle: handle
              email: email
            query:
              denominator: sum:my.custom.metric{*}.as_count()
              numerator: sum:my.custom.metric{type:good}.as_count()
            created_at: 0
            description: description
            groups:
              - env:prod
              - role:mysql
            type: metric
            tags:
              - env:prod
              - app:core
            thresholds:
              - target: 95
                timeframe: 7d
              - target: 95
                timeframe: 30d
                warning: 97
            monitor_ids:
              - 1
              - 1
            name: Custom Metric SLO
            id: id
            modified_at: 6
            monitor_tags:
              - monitor_tags
              - monitor_tags
        errors:
          - errors
          - errors
      properties:
        data:
          description: An array of service level objective objects.
          items:
            $ref: '#/components/schemas/ServiceLevelObjective'
          type: array
        errors:
          description: |-
            An array of error messages. Each endpoint documents how/whether this field is
            used.
          items:
            description: The error message.
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/SLOListResponse_metadata'
      type: object
    SLOResponse:
      description: A service level objective response containing a single service
        level objective.
      example:
        data:
          creator:
            name: name
            handle: handle
            email: email
          query:
            denominator: sum:my.custom.metric{*}.as_count()
            numerator: sum:my.custom.metric{type:good}.as_count()
          created_at: 0
          description: description
          groups:
            - env:prod
            - role:mysql
          type: metric
          tags:
            - env:prod
            - app:core
          thresholds:
            - target: 95
              timeframe: 7d
            - target: 95
              timeframe: 30d
              warning: 97
          monitor_ids:
            - 1
            - 1
          name: Custom Metric SLO
          configured_alert_ids:
            - 123
            - 456
            - 789
          id: id
          modified_at: 6
          monitor_tags:
            - monitor_tags
            - monitor_tags
        errors:
          - errors
          - errors
      properties:
        data:
          $ref: '#/components/schemas/SLOResponse_data'
        errors:
          description: |-
            An array of error messages. Each endpoint documents how/whether this field is
            used.
          items:
            description: The error message.
            type: string
          type: array
      type: object
    SLOThreshold:
      description: SLO thresholds (target and optionally warning) for a single time
        window.
      properties:
        target:
          description: |-
            The target value for the service level indicator within the corresponding
            timeframe.
          example: 99.9
          format: double
          type: number
        target_display:
          description: |-
            A string representation of the target that indicates its precision.
            It uses trailing zeros to show significant decimal places (e.g. `98.00`).

            Always included in service level objective responses. Ignored in
            create/update requests.
          example: "99.9"
          type: string
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        warning:
          description: The warning value for the service level objective.
          example: 90.0
          format: double
          type: number
        warning_display:
          description: |-
            A string representation of the warning target (see the description of
            the `target_display` field for details).

            Included in service level objective responses if a warning target exists.
            Ignored in create/update requests.
          example: "90.0"
          type: string
      required:
        - target
        - timeframe
      type: object
    SLOTimeframe:
      description: The SLO time window options.
      enum:
        - 7d
        - 30d
        - 90d
        - custom
      type: string
      x-enum-varnames:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - NINETY_DAYS
        - CUSTOM
    SLOType:
      description: The type of the service level objective.
      enum:
        - metric
        - monitor
      example: metric
      type: string
      x-enum-varnames:
        - METRIC
        - MONITOR
    SLOTypeNumeric:
      description: |-
        A numeric representation of the type of the service level objective (`0` for
        monitor, `1` for metric). Always included in service level objective responses.
        Ignored in create/update requests.
      enum:
        - 0
        - 1
      example: 0
      format: int32
      type: integer
      x-enum-varnames:
        - MONITOR
        - METRIC
    SLOWidgetDefinition:
      description: Use the SLO and uptime widget to track your SLOs (Service Level
        Objectives) and uptime on screenboards and timeboards.
      properties:
        global_time_target:
          description: Defined global time target.
          type: string
        show_error_budget:
          description: Defined error budget.
          type: boolean
        slo_id:
          description: ID of the SLO displayed.
          type: string
        time_windows:
          description: Times being monitored.
          items:
            $ref: '#/components/schemas/WidgetTimeWindows'
          type: array
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/SLOWidgetDefinitionType'
        view_mode:
          $ref: '#/components/schemas/WidgetViewMode'
        view_type:
          default: detail
          description: Type of view displayed by the widget.
          example: detail
          type: string
      required:
        - type
        - view_type
      type: object
    SLOWidgetDefinitionType:
      default: slo
      description: Type of the SLO widget.
      enum:
        - slo
      example: slo
      type: string
      x-enum-varnames:
        - SLO
    ScatterPlotRequest:
      description: Updated scatter plot.
      properties:
        aggregator:
          $ref: '#/components/schemas/WidgetAggregator'
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    ScatterPlotWidgetDefinition:
      description: The scatter plot visualization allows you to graph a chosen scope
        over two different metrics with their respective aggregation.
      properties:
        color_by_groups:
          description: List of groups used for colors.
          items:
            description: Group name.
            type: string
          type: array
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          $ref: '#/components/schemas/ScatterPlotWidgetDefinition_requests'
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ScatterPlotWidgetDefinitionType'
        xaxis:
          $ref: '#/components/schemas/WidgetAxis'
        yaxis:
          $ref: '#/components/schemas/WidgetAxis'
      required:
        - requests
        - type
      type: object
    ScatterPlotWidgetDefinitionType:
      default: scatterplot
      description: Type of the scatter plot widget.
      enum:
        - scatterplot
      example: scatterplot
      type: string
      x-enum-varnames:
        - SCATTERPLOT
    Series:
      description: |-
        A metric to submit to Datadog.
        See [Datadog metrics](https://docs.datadoghq.com/developers/metrics/#custom-metrics-properties).
      properties:
        host:
          description: The name of the host that produced the metric.
          example: test.example.com
          type: string
        interval:
          description: If the type of the metric is rate or count, define the corresponding
            interval.
          example: 20
          format: int64
          nullable: true
          type: integer
        metric:
          description: The name of the timeseries.
          example: system.load.1
          type: string
        points:
          description: Points relating to a metric. All points must be tuples with
            timestamp and a scalar value (cannot be a string). Timestamps should be
            in POSIX time in seconds, and cannot be more than ten minutes in the future
            or more than one hour in the past.
          example:
            - - 1575317847
              - 0.5
          items:
            $ref: '#/components/schemas/Point'
          type: array
        tags:
          description: A list of tags associated with the metric.
          example:
            - environment:test
          items:
            description: Individual tags.
            type: string
          type: array
        type:
          default: gauge
          description: The type of the metric either `count`, `gauge`, or `rate`.
          example: rate
          type: string
      required:
        - metric
        - points
      type: object
    ServiceCheck:
      description: An object containing service check and status.
      example:
        check: app.ok
        message: app is running
        host_name: app.host1
        status: 0
        tags:
          - environment:test
        timestamp: 0
      properties:
        check:
          description: The check.
          example: app.ok
          type: string
        host_name:
          description: The host name correlated with the check.
          example: app.host1
          type: string
        message:
          description: Message containing check status.
          example: app is running
          type: string
        status:
          $ref: '#/components/schemas/ServiceCheckStatus'
        tags:
          description: Tags related to a check.
          example:
            - environment:test
          items:
            description: Items related to a check.
            type: string
          type: array
        timestamp:
          description: Time of check.
          format: int64
          type: integer
      required:
        - check
        - host_name
        - status
        - tags
      type: object
    ServiceCheckStatus:
      description: The status of a service check.
      enum:
        - 0
        - 1
        - 2
        - 3
      example: 0
      format: int32
      type: integer
      x-enum-varnames:
        - OK
        - WARNING
        - CRITICAL
        - UNKNOWN
    ServiceChecks:
      description: The service checks.
      items:
        $ref: '#/components/schemas/ServiceCheck'
      type: array
    ServiceLevelObjective:
      description: |-
        A service level objective object includes a service level indicator, thresholds
        for one or more timeframes, and metadata (`name`, `description`, `tags`, etc.).
      example:
        creator:
          name: name
          handle: handle
          email: email
        query:
          denominator: sum:my.custom.metric{*}.as_count()
          numerator: sum:my.custom.metric{type:good}.as_count()
        created_at: 0
        description: description
        groups:
          - env:prod
          - role:mysql
        type: metric
        tags:
          - env:prod
          - app:core
        thresholds:
          - target: 95
            timeframe: 7d
          - target: 95
            timeframe: 30d
            warning: 97
        monitor_ids:
          - 1
          - 1
        name: Custom Metric SLO
        id: id
        modified_at: 6
        monitor_tags:
          - monitor_tags
          - monitor_tags
      properties:
        created_at:
          description: |-
            Creation timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creator'
        description:
          description: |-
            A user-defined description of the service level objective.

            Always included in service level objective responses (but may be `null`).
            Optional in create/update requests.
          nullable: true
          type: string
        groups:
          description: |-
            A list of (up to 20) monitor groups that narrow the scope of a monitor service level objective.

            Included in service level objective responses if it is not empty. Optional in
            create/update requests for monitor service level objectives, but may only be
            used when then length of the `monitor_ids` field is one.
          example:
            - env:prod
            - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        id:
          description: |-
            A unique identifier for the service level objective object.

            Always included in service level objective responses.
          readOnly: true
          type: string
        modified_at:
          description: |-
            Modification timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: |-
            A list of monitor ids that defines the scope of a monitor service level
            objective. **Required if type is `monitor`**.
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        monitor_tags:
          description: |-
            The union of monitor tags for all monitors referenced by the `monitor_ids`
            field.
            Always included in service level objective responses for monitor service level
            objectives (but may be empty). Ignored in create/update requests. Does not
            affect which monitors are included in the service level objective (that is
            determined entirely by the `monitor_ids` field).
          items:
            description: A monitor tag.
            type: string
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        tags:
          description: |-
            A list of tags associated with this service level objective.
            Always included in service level objective responses (but may be empty).
            Optional in create/update requests.
          example:
            - env:prod
            - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        thresholds:
          description: |-
            The thresholds (timeframes and associated targets) for this service level
            objective object.
          example:
            - target: 95
              timeframe: 7d
            - target: 95
              timeframe: 30d
              warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        type:
          $ref: '#/components/schemas/SLOType'
      required:
        - name
        - thresholds
        - type
    ServiceLevelObjectiveQuery:
      description: |-
        A metric SLI query. **Required if type is `metric`**. Note that Datadog only allows the sum by aggregator
        to be used because this will sum up all request counts instead of averaging them, or taking the max or
        min of all of those requests.
      example:
        denominator: sum:my.custom.metric{*}.as_count()
        numerator: sum:my.custom.metric{type:good}.as_count()
      properties:
        denominator:
          description: A Datadog metric query for total (valid) events.
          example: sum:my.custom.metric{*}.as_count()
          type: string
        numerator:
          description: A Datadog metric query for good events.
          example: sum:my.custom.metric{type:good}.as_count()
          type: string
      required:
        - denominator
        - numerator
      type: object
    ServiceLevelObjectiveRequest:
      description: |-
        A service level objective object includes a service level indicator, thresholds
        for one or more timeframes, and metadata (`name`, `description`, `tags`, etc.).
      example:
        thresholds:
          - target: 95
            timeframe: 7d
          - target: 95
            timeframe: 30d
            warning: 97
        query:
          denominator: sum:my.custom.metric{*}.as_count()
          numerator: sum:my.custom.metric{type:good}.as_count()
        monitor_ids:
          - 0
          - 0
        name: Custom Metric SLO
        description: description
        groups:
          - env:prod
          - role:mysql
        type: metric
        tags:
          - env:prod
          - app:core
      properties:
        description:
          description: |-
            A user-defined description of the service level objective.

            Always included in service level objective responses (but may be `null`).
            Optional in create/update requests.
          nullable: true
          type: string
        groups:
          description: |-
            A list of (up to 20) monitor groups that narrow the scope of a monitor service level objective.

            Included in service level objective responses if it is not empty. Optional in
            create/update requests for monitor service level objectives, but may only be
            used when then length of the `monitor_ids` field is one.
          example:
            - env:prod
            - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        monitor_ids:
          description: |-
            A list of monitor ids that defines the scope of a monitor service level
            objective. **Required if type is `monitor`**.
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        tags:
          description: |-
            A list of tags associated with this service level objective.
            Always included in service level objective responses (but may be empty).
            Optional in create/update requests.
          example:
            - env:prod
            - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        thresholds:
          description: |-
            The thresholds (timeframes and associated targets) for this service level
            objective object.
          example:
            - target: 95
              timeframe: 7d
            - target: 95
              timeframe: 30d
              warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        type:
          $ref: '#/components/schemas/SLOType'
      required:
        - name
        - thresholds
        - type
    ServiceMapWidgetDefinition:
      description: This widget displays a map of a service to all of the services
        that call it, and all of the services that it calls.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        filters:
          description: Your environment and primary tag (or * if enabled for your
            account).
          example:
            - '*'
          items:
            description: Filter name.
            type: string
          minItems: 1
          type: array
        service:
          description: The ID of the service you want to map.
          example: ""
          type: string
        title:
          description: The title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ServiceMapWidgetDefinitionType'
      required:
        - filters
        - service
        - type
      type: object
    ServiceMapWidgetDefinitionType:
      default: servicemap
      description: Type of the service map widget.
      enum:
        - servicemap
      example: servicemap
      type: string
      x-enum-varnames:
        - SERVICEMAP
    ServiceSummaryWidgetDefinition:
      description: The service summary displays the graphs of a chosen service in
        your screenboard. Only available on FREE layout dashboards.
      properties:
        display_format:
          $ref: '#/components/schemas/WidgetServiceSummaryDisplayFormat'
        env:
          description: APM environment.
          example: ""
          type: string
        service:
          description: APM service.
          example: ""
          type: string
        show_breakdown:
          description: Whether to show the latency breakdown or not.
          type: boolean
        show_distribution:
          description: Whether to show the latency distribution or not.
          type: boolean
        show_errors:
          description: Whether to show the error metrics or not.
          type: boolean
        show_hits:
          description: Whether to show the hits metrics or not.
          type: boolean
        show_latency:
          description: Whether to show the latency metrics or not.
          type: boolean
        show_resource_list:
          description: Whether to show the resource list or not.
          type: boolean
        size_format:
          $ref: '#/components/schemas/WidgetSizeFormat'
        span_name:
          description: APM span name.
          example: ""
          type: string
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of the widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ServiceSummaryWidgetDefinitionType'
      required:
        - env
        - service
        - span_name
        - type
      type: object
    ServiceSummaryWidgetDefinitionType:
      default: trace_service
      description: Type of the service summary widget.
      enum:
        - trace_service
      example: trace_service
      type: string
      x-enum-varnames:
        - TRACE_SERVICE
    SlackIntegrationChannel:
      description: The Slack channel configuration.
      example:
        display:
          notified: true
          message: true
          snapshot: true
          tags: true
        name: '#general'
      properties:
        display:
          $ref: '#/components/schemas/SlackIntegrationChannel_display'
        name:
          description: Your channel name.
          example: '#general'
          type: string
      type: object
    SlackIntegrationChannels:
      description: A list of configured Slack channels.
      example:
        - display:
            message: true
            notified: true
            snapshot: true
            tags: true
          name: '#channel_name_main_account'
        - display:
            message: true
            notified: true
            snapshot: false
            tags: true
          name: '#channel_name_doghouse'
      items:
        $ref: '#/components/schemas/SlackIntegrationChannel'
      type: array
    SyntheticsAPIStep:
      description: The steps used in a Synthetics multistep API test.
      example:
        extractedValues:
          - field: content-type
            parser:
              type: regex
              value: .*
            name: name
          - field: content-type
            parser:
              type: regex
              value: .*
            name: name
        request:
          headers:
            key: headers
          noSavingResponseBody: true
          shouldTrackHops: true
          basicAuth:
            password: ""
            username: ""
          query: '{}'
          certificate:
            cert:
              filename: filename
              content: content
              updatedAt: updatedAt
            key:
              filename: filename
              content: content
              updatedAt: updatedAt
          allow_insecure: true
          body: body
          timeout: 5.962133916683182
          url: url
          port: 1
          dnsServerPort: 5249
          host: host
          numberOfPackets: 6
          dnsServer: dnsServer
        allowFailure: true
        name: name
        isCritical: true
        assertions: []
      properties:
        allowFailure:
          description: Determines whether or not to continue with test if this step
            fails.
          type: boolean
        assertions:
          default: []
          description: Array of assertions used for the test.
          example: []
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        extractedValues:
          description: Array of values to parse and save as variables from the response.
          items:
            $ref: '#/components/schemas/SyntheticsParsingOptions'
          type: array
        isCritical:
          description: |-
            Determines whether or not to consider the entire test as failed if this step fails.
            Can be used only if `allowFailure` is `true`.
          type: boolean
        name:
          description: The name of the step.
          type: string
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        subtype:
          $ref: '#/components/schemas/SyntheticsAPIStepSubtype'
      type: object
    SyntheticsAPIStepSubtype:
      description: The subtype of the Synthetic multistep API test step, currently
        only supporting `http`.
      enum:
        - http
      type: string
      x-enum-varnames:
        - HTTP
    SyntheticsAPITest:
      description: Object containing details about a Synthetic API test.
      example:
        monitor_id: 0
        name: name
        options:
          allow_insecure: true
          accept_self_signed: true
          monitor_name: monitor_name
          min_location_failed: 7
          monitor_options:
            renotify_interval: 1339
          tick_every: 446730
          disableCors: true
          min_failure_duration: 2
          monitor_priority: 2
          noScreenshot: true
          device_ids:
            - null
            - null
          follow_redirects: true
          retry:
            count: 2
            interval: 4.145608029883936
        locations:
          - locations
          - locations
        message: message
        type: api
        config:
          request:
            headers:
              key: headers
            noSavingResponseBody: true
            shouldTrackHops: true
            basicAuth:
              password: ""
              username: ""
            query: '{}'
            certificate:
              cert:
                filename: filename
                content: content
                updatedAt: updatedAt
              key:
                filename: filename
                content: content
                updatedAt: updatedAt
            allow_insecure: true
            body: body
            timeout: 5.962133916683182
            url: url
            port: 1
            dnsServerPort: 5249
            host: host
            numberOfPackets: 6
            dnsServer: dnsServer
          assertions: []
          steps:
            - extractedValues:
                - field: content-type
                  parser:
                    type: regex
                    value: .*
                  name: name
                - field: content-type
                  parser:
                    type: regex
                    value: .*
                  name: name
              request:
                headers:
                  key: headers
                noSavingResponseBody: true
                shouldTrackHops: true
                basicAuth:
                  password: ""
                  username: ""
                query: '{}'
                certificate:
                  cert:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                  key:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                allow_insecure: true
                body: body
                timeout: 5.962133916683182
                url: url
                port: 1
                dnsServerPort: 5249
                host: host
                numberOfPackets: 6
                dnsServer: dnsServer
              allowFailure: true
              name: name
              isCritical: true
              assertions: []
            - extractedValues:
                - field: content-type
                  parser:
                    type: regex
                    value: .*
                  name: name
                - field: content-type
                  parser:
                    type: regex
                    value: .*
                  name: name
              request:
                headers:
                  key: headers
                noSavingResponseBody: true
                shouldTrackHops: true
                basicAuth:
                  password: ""
                  username: ""
                query: '{}'
                certificate:
                  cert:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                  key:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                allow_insecure: true
                body: body
                timeout: 5.962133916683182
                url: url
                port: 1
                dnsServerPort: 5249
                host: host
                numberOfPackets: 6
                dnsServer: dnsServer
              allowFailure: true
              name: name
              isCritical: true
              assertions: []
          configVariables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
        public_id: public_id
        tags:
          - tags
          - tags
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsAPITestConfig'
        locations:
          description: Array of locations used to run the test.
          items:
            description: A location from which the test was run.
            type: string
          type: array
        message:
          description: Notification message associated with the test.
          type: string
        monitor_id:
          description: The associated monitor ID.
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the test.
          type: string
        options:
          $ref: '#/components/schemas/SyntheticsTestOptions'
        public_id:
          description: The public ID for the test.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
        subtype:
          $ref: '#/components/schemas/SyntheticsTestDetailsSubType'
        tags:
          description: Array of tags attached to the test.
          items:
            description: A tag attached to the test.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SyntheticsAPITestType'
      type: object
    SyntheticsAPITestConfig:
      description: Configuration object for a Synthetic API test.
      example:
        request:
          headers:
            key: headers
          noSavingResponseBody: true
          shouldTrackHops: true
          basicAuth:
            password: ""
            username: ""
          query: '{}'
          certificate:
            cert:
              filename: filename
              content: content
              updatedAt: updatedAt
            key:
              filename: filename
              content: content
              updatedAt: updatedAt
          allow_insecure: true
          body: body
          timeout: 5.962133916683182
          url: url
          port: 1
          dnsServerPort: 5249
          host: host
          numberOfPackets: 6
          dnsServer: dnsServer
        assertions: []
        steps:
          - extractedValues:
              - field: content-type
                parser:
                  type: regex
                  value: .*
                name: name
              - field: content-type
                parser:
                  type: regex
                  value: .*
                name: name
            request:
              headers:
                key: headers
              noSavingResponseBody: true
              shouldTrackHops: true
              basicAuth:
                password: ""
                username: ""
              query: '{}'
              certificate:
                cert:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
                key:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
              allow_insecure: true
              body: body
              timeout: 5.962133916683182
              url: url
              port: 1
              dnsServerPort: 5249
              host: host
              numberOfPackets: 6
              dnsServer: dnsServer
            allowFailure: true
            name: name
            isCritical: true
            assertions: []
          - extractedValues:
              - field: content-type
                parser:
                  type: regex
                  value: .*
                name: name
              - field: content-type
                parser:
                  type: regex
                  value: .*
                name: name
            request:
              headers:
                key: headers
              noSavingResponseBody: true
              shouldTrackHops: true
              basicAuth:
                password: ""
                username: ""
              query: '{}'
              certificate:
                cert:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
                key:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
              allow_insecure: true
              body: body
              timeout: 5.962133916683182
              url: url
              port: 1
              dnsServerPort: 5249
              host: host
              numberOfPackets: 6
              dnsServer: dnsServer
            allowFailure: true
            name: name
            isCritical: true
            assertions: []
        configVariables:
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
      properties:
        assertions:
          default: []
          description: Array of assertions used for the test.
          example: []
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        configVariables:
          description: Array of variables used for the test.
          items:
            $ref: '#/components/schemas/SyntheticsConfigVariable'
          type: array
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        steps:
          description: When the test subtype is `multi`, the steps of the test.
          items:
            $ref: '#/components/schemas/SyntheticsAPIStep'
          type: array
      type: object
    SyntheticsAPITestResultData:
      description: Object containing results for your Synthetic API test.
      example:
        requestHeaders:
          key: '{}'
        responseBody: responseBody
        responseHeaders:
          key: '{}'
        errorMessage: errorMessage
        timings:
          redirect: 7.061401241503109
          tcp: 3.616076749251911
          handshake: 2.3021358869347655
          download: 5.962133916683182
          total: 2.027123023002322
          wait: 4.145608029883936
          dns: 1.4658129805029452
          firstByte: 5.637376656633329
          ssl: 9.301444243932576
        cert:
          cipher: cipher
          protocol: protocol
          serialNumber: serialNumber
          extKeyUsage:
            - extKeyUsage
            - extKeyUsage
          subject:
            ST: ST
            C: C
            OU: OU
            CN: CN
            altName: altName
            L: L
            O: O
          fingerprint: fingerprint
          validFrom: 2000-01-23T04:56:07.000+00:00
          fingerprint256: fingerprint256
          issuer:
            ST: ST
            C: C
            OU: OU
            CN: CN
            L: L
            O: O
          modulus: modulus
          exponent: 1.4658129805029452
          validTo: 2000-01-23T04:56:07.000+00:00
        responseSize: 5
        httpStatusCode: 5
      properties:
        cert:
          $ref: '#/components/schemas/SyntheticsSSLCertificate'
        errorCode:
          $ref: '#/components/schemas/SyntheticsErrorCode'
        errorMessage:
          description: The API test error message.
          type: string
        eventType:
          $ref: '#/components/schemas/SyntheticsTestProcessStatus'
        httpStatusCode:
          description: The API test HTTP status code.
          format: int64
          type: integer
        requestHeaders:
          additionalProperties:
            description: Requested request header.
            type: object
          description: Request header object used for the API test.
          type: object
        responseBody:
          description: Response body returned for the API test.
          type: string
        responseHeaders:
          additionalProperties:
            description: Returned request header.
            type: object
          description: Response headers returned for the API test.
          type: object
        responseSize:
          description: Global size in byte of the API test response.
          format: int64
          type: integer
        timings:
          $ref: '#/components/schemas/SyntheticsTiming'
      type: object
    SyntheticsAPITestResultFull:
      description: Object returned describing a API test result.
      example:
        result:
          requestHeaders:
            key: '{}'
          responseBody: responseBody
          responseHeaders:
            key: '{}'
          errorMessage: errorMessage
          timings:
            redirect: 7.061401241503109
            tcp: 3.616076749251911
            handshake: 2.3021358869347655
            download: 5.962133916683182
            total: 2.027123023002322
            wait: 4.145608029883936
            dns: 1.4658129805029452
            firstByte: 5.637376656633329
            ssl: 9.301444243932576
          cert:
            cipher: cipher
            protocol: protocol
            serialNumber: serialNumber
            extKeyUsage:
              - extKeyUsage
              - extKeyUsage
            subject:
              ST: ST
              C: C
              OU: OU
              CN: CN
              altName: altName
              L: L
              O: O
            fingerprint: fingerprint
            validFrom: 2000-01-23T04:56:07.000+00:00
            fingerprint256: fingerprint256
            issuer:
              ST: ST
              C: C
              OU: OU
              CN: CN
              L: L
              O: O
            modulus: modulus
            exponent: 1.4658129805029452
            validTo: 2000-01-23T04:56:07.000+00:00
          responseSize: 5
          httpStatusCode: 5
        check_version: 6
        probe_dc: probe_dc
        result_id: result_id
        check:
          config:
            request:
              headers:
                key: headers
              noSavingResponseBody: true
              shouldTrackHops: true
              basicAuth:
                password: ""
                username: ""
              query: '{}'
              certificate:
                cert:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
                key:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
              allow_insecure: true
              body: body
              timeout: 5.962133916683182
              url: url
              port: 1
              dnsServerPort: 5249
              host: host
              numberOfPackets: 6
              dnsServer: dnsServer
            variables:
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
            assertions: []
            configVariables:
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
        check_time: 0.8008281904610115
      properties:
        check:
          $ref: '#/components/schemas/SyntheticsAPITestResultFull_check'
        check_time:
          description: When the API test was conducted.
          format: double
          type: number
        check_version:
          description: Version of the API test used.
          format: int64
          type: integer
        probe_dc:
          description: Locations for which to query the API test results.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsAPITestResultData'
        result_id:
          description: ID of the API test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      type: object
    SyntheticsAPITestResultShort:
      description: Object with the results of a single Synthetic API test.
      example:
        result:
          timings:
            redirect: 7.061401241503109
            tcp: 3.616076749251911
            handshake: 2.3021358869347655
            download: 5.962133916683182
            total: 2.027123023002322
            wait: 4.145608029883936
            dns: 1.4658129805029452
            firstByte: 5.637376656633329
            ssl: 9.301444243932576
          passed: true
        probe_dc: probe_dc
        result_id: result_id
        check_time: 6.027456183070403
      properties:
        check_time:
          description: Last time the API test was performed.
          format: double
          type: number
        probe_dc:
          description: Location from which the API test was performed.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsAPITestResultShort_result'
        result_id:
          description: ID of the API test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      type: object
    SyntheticsAPITestType:
      default: api
      description: Type of the Synthetic test, `api`.
      enum:
        - api
      example: api
      type: string
      x-enum-varnames:
        - API
    SyntheticsAssertion:
      description: |-
        Object describing the assertions type, their associated operator,
        which property they apply, and upon which target.
      oneOf:
        - $ref: '#/components/schemas/SyntheticsAssertionTarget'
        - $ref: '#/components/schemas/SyntheticsAssertionJSONPathTarget'
      type: object
    SyntheticsAssertionJSONPathOperator:
      description: Assertion operator to apply.
      enum:
        - validatesJSONPath
      type: string
      x-enum-varnames:
        - VALIDATES_JSON_PATH
    SyntheticsAssertionJSONPathTarget:
      description: An assertion for the `validatesJSONPath` operator.
      properties:
        operator:
          $ref: '#/components/schemas/SyntheticsAssertionJSONPathOperator'
        property:
          description: The associated assertion property.
          type: string
        target:
          $ref: '#/components/schemas/SyntheticsAssertionJSONPathTarget_target'
        type:
          $ref: '#/components/schemas/SyntheticsAssertionType'
      required:
        - operator
        - type
      type: object
    SyntheticsAssertionOperator:
      description: Assertion operator to apply.
      enum:
        - contains
        - doesNotContain
        - is
        - isNot
        - lessThan
        - lessThanOrEqual
        - moreThan
        - moreThanOrEqual
        - matches
        - doesNotMatch
        - validates
        - isInMoreThan
        - isInLessThan
      type: string
      x-enum-varnames:
        - CONTAINS
        - DOES_NOT_CONTAIN
        - IS
        - IS_NOT
        - LESS_THAN
        - LESS_THAN_OR_EQUAL
        - MORE_THAN
        - MORE_THAN_OR_EQUAL
        - MATCHES
        - DOES_NOT_MATCH
        - VALIDATES
        - IS_IN_MORE_DAYS_THAN
        - IS_IN_LESS_DAYS_THAN
    SyntheticsAssertionTarget:
      description: An assertion which uses a simple target.
      properties:
        operator:
          $ref: '#/components/schemas/SyntheticsAssertionOperator'
        property:
          description: The associated assertion property.
          type: string
        target:
          description: Value used by the operator.
          nullable: false
        type:
          $ref: '#/components/schemas/SyntheticsAssertionType'
      required:
        - operator
        - type
      type: object
    SyntheticsAssertionType:
      description: Type of the assertion.
      enum:
        - body
        - header
        - statusCode
        - certificate
        - responseTime
        - property
        - recordEvery
        - recordSome
        - tlsVersion
        - minTlsVersion
        - latency
        - packetLossPercentage
        - packetsReceived
        - networkHop
      type: string
      x-enum-varnames:
        - BODY
        - HEADER
        - STATUS_CODE
        - CERTIFICATE
        - RESPONSE_TIME
        - PROPERTY
        - RECORD_EVERY
        - RECORD_SOME
        - TLS_VERSION
        - MIN_TLS_VERSION
        - LATENCY
        - PACKET_LOSS_PERCENTAGE
        - PACKETS_RECEIVED
        - NETWORK_HOP
    SyntheticsBasicAuth:
      description: Object to handle basic authentication when performing the test.
      example:
        password: ""
        username: ""
      properties:
        password:
          description: Password to use for the basic authentication.
          example: ""
          type: string
        username:
          description: Username to use for the basic authentication.
          example: ""
          type: string
      required:
        - password
        - username
      type: object
    SyntheticsBrowserError:
      description: Error response object for a browser test.
      example:
        name: ""
        description: ""
        status: 5
      properties:
        description:
          description: Description of the error.
          example: ""
          type: string
        name:
          description: Name of the error.
          example: ""
          type: string
        status:
          description: Status Code of the error.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SyntheticsBrowserErrorType'
      required:
        - description
        - name
        - type
      type: object
    SyntheticsBrowserErrorType:
      description: Error type returned by a browser test.
      enum:
        - network
        - js
      type: string
      x-enum-varnames:
        - NETWORK
        - JS
    SyntheticsBrowserTest:
      description: Object containing details about a Synthetic browser test.
      example:
        monitor_id: 0
        name: name
        options:
          allow_insecure: true
          accept_self_signed: true
          monitor_name: monitor_name
          min_location_failed: 7
          monitor_options:
            renotify_interval: 1339
          tick_every: 446730
          disableCors: true
          min_failure_duration: 2
          monitor_priority: 2
          noScreenshot: true
          device_ids:
            - null
            - null
          follow_redirects: true
          retry:
            count: 2
            interval: 4.145608029883936
        locations:
          - locations
          - locations
        message: ""
        type: browser
        config:
          request:
            headers:
              key: headers
            noSavingResponseBody: true
            shouldTrackHops: true
            basicAuth:
              password: ""
              username: ""
            query: '{}'
            certificate:
              cert:
                filename: filename
                content: content
                updatedAt: updatedAt
              key:
                filename: filename
                content: content
                updatedAt: updatedAt
            allow_insecure: true
            body: body
            timeout: 5.962133916683182
            url: url
            port: 1
            dnsServerPort: 5249
            host: host
            numberOfPackets: 6
            dnsServer: dnsServer
          variables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
          setCookie: setCookie
          assertions: []
        steps:
          - allowFailure: true
            name: name
            params: '{}'
            timeout: 1
          - allowFailure: true
            name: name
            params: '{}'
            timeout: 1
        public_id: public_id
        tags:
          - tags
          - tags
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsBrowserTestConfig'
        locations:
          description: Array of locations used to run the test.
          items:
            description: A location from which the test was run.
            type: string
          type: array
        message:
          description: Notification message associated with the test. Message can
            either be text or an empty string.
          example: ""
          type: string
        monitor_id:
          description: The associated monitor ID.
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the test.
          type: string
        options:
          $ref: '#/components/schemas/SyntheticsTestOptions'
        public_id:
          description: The public ID of the test.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
        steps:
          description: The steps of the test.
          items:
            $ref: '#/components/schemas/SyntheticsStep'
          type: array
        tags:
          description: Array of tags attached to the test.
          items:
            description: A tag attached to the test.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SyntheticsBrowserTestType'
      required:
        - message
      type: object
    SyntheticsBrowserTestConfig:
      description: Configuration object for a Synthetic browser test.
      example:
        request:
          headers:
            key: headers
          noSavingResponseBody: true
          shouldTrackHops: true
          basicAuth:
            password: ""
            username: ""
          query: '{}'
          certificate:
            cert:
              filename: filename
              content: content
              updatedAt: updatedAt
            key:
              filename: filename
              content: content
              updatedAt: updatedAt
          allow_insecure: true
          body: body
          timeout: 5.962133916683182
          url: url
          port: 1
          dnsServerPort: 5249
          host: host
          numberOfPackets: 6
          dnsServer: dnsServer
        variables:
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
        setCookie: setCookie
        assertions: []
      properties:
        assertions:
          default: []
          description: Array of assertions used for the test.
          example: []
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        setCookie:
          description: Cookies to be used for the request, using the [Set-Cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)
            syntax.
          type: string
        variables:
          description: Array of variables used for the test steps.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserVariable'
          type: array
      required:
        - assertions
        - request
      type: object
    SyntheticsBrowserTestResultData:
      description: Object containing results for your Synthetic browser test.
      example:
        duration: 1.4658129805029452
        startUrl: startUrl
        thumbnailsBucketKey: true
        browserVersion: browserVersion
        receivedEmailCount: 5
        timeToInteractive: 4.145608029883936
        passed: true
        error: error
        device:
          name: ""
          width: 0
          isMobile: true
          height: 0
        stepDetails:
          - screenshotBucketKey: true
            snapshotBucketKey: true
            warnings:
              - message: ""
              - message: ""
            stepId: 7
            timeToInteractive: 9.301444243932576
            description: description
            error: error
            url: url
            skipped: true
            duration: 2.3021358869347655
            vitalsMetrics:
              - lcp: 2
                cls: 3
                url: url
              - lcp: 2
                cls: 3
                url: url
            browserErrors:
              - name: ""
                description: ""
                status: 5
              - name: ""
                description: ""
                status: 5
            subTestStepDetails:
              - null
              - null
            value: '{}'
          - screenshotBucketKey: true
            snapshotBucketKey: true
            warnings:
              - message: ""
              - message: ""
            stepId: 7
            timeToInteractive: 9.301444243932576
            description: description
            error: error
            url: url
            skipped: true
            duration: 2.3021358869347655
            vitalsMetrics:
              - lcp: 2
                cls: 3
                url: url
              - lcp: 2
                cls: 3
                url: url
            browserErrors:
              - name: ""
                description: ""
                status: 5
              - name: ""
                description: ""
                status: 5
            subTestStepDetails:
              - null
              - null
            value: '{}'
        browserType: browserType
      properties:
        browserType:
          description: Type of browser device used for the browser test.
          type: string
        browserVersion:
          description: Browser version used for the browser test.
          type: string
        device:
          $ref: '#/components/schemas/SyntheticsDevice'
        duration:
          description: Global duration in second of the browser test.
          format: double
          type: number
        error:
          description: Error returned for the browser test.
          type: string
        passed:
          description: Whether or not the browser test was conducted.
          type: boolean
        receivedEmailCount:
          description: The amount of email received during the browser test.
          format: int64
          type: integer
        startUrl:
          description: Starting URL for the browser test.
          type: string
        stepDetails:
          description: Array containing the different browser test steps.
          items:
            $ref: '#/components/schemas/SyntheticsStepDetail'
          type: array
        thumbnailsBucketKey:
          description: Whether or not a thumbnail is associated with the browser test.
          type: boolean
        timeToInteractive:
          description: |-
            Time in second to wait before the browser test starts after
            reaching the start URL.
          format: double
          type: number
      type: object
    SyntheticsBrowserTestResultFull:
      description: Object returned describing a browser test result.
      example:
        result:
          duration: 1.4658129805029452
          startUrl: startUrl
          thumbnailsBucketKey: true
          browserVersion: browserVersion
          receivedEmailCount: 5
          timeToInteractive: 4.145608029883936
          passed: true
          error: error
          device:
            name: ""
            width: 0
            isMobile: true
            height: 0
          stepDetails:
            - screenshotBucketKey: true
              snapshotBucketKey: true
              warnings:
                - message: ""
                - message: ""
              stepId: 7
              timeToInteractive: 9.301444243932576
              description: description
              error: error
              url: url
              skipped: true
              duration: 2.3021358869347655
              vitalsMetrics:
                - lcp: 2
                  cls: 3
                  url: url
                - lcp: 2
                  cls: 3
                  url: url
              browserErrors:
                - name: ""
                  description: ""
                  status: 5
                - name: ""
                  description: ""
                  status: 5
              subTestStepDetails:
                - null
                - null
              value: '{}'
            - screenshotBucketKey: true
              snapshotBucketKey: true
              warnings:
                - message: ""
                - message: ""
              stepId: 7
              timeToInteractive: 9.301444243932576
              description: description
              error: error
              url: url
              skipped: true
              duration: 2.3021358869347655
              vitalsMetrics:
                - lcp: 2
                  cls: 3
                  url: url
                - lcp: 2
                  cls: 3
                  url: url
              browserErrors:
                - name: ""
                  description: ""
                  status: 5
                - name: ""
                  description: ""
                  status: 5
              subTestStepDetails:
                - null
                - null
              value: '{}'
          browserType: browserType
        check_version: 6
        probe_dc: probe_dc
        result_id: result_id
        check:
          config:
            request:
              headers:
                key: headers
              noSavingResponseBody: true
              shouldTrackHops: true
              basicAuth:
                password: ""
                username: ""
              query: '{}'
              certificate:
                cert:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
                key:
                  filename: filename
                  content: content
                  updatedAt: updatedAt
              allow_insecure: true
              body: body
              timeout: 5.962133916683182
              url: url
              port: 1
              dnsServerPort: 5249
              host: host
              numberOfPackets: 6
              dnsServer: dnsServer
            variables:
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
            assertions: []
            configVariables:
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
              - name: VARIABLE_NAME
                pattern: pattern
                id: id
                example: example
        check_time: 0.8008281904610115
      properties:
        check:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultFull_check'
        check_time:
          description: When the browser test was conducted.
          format: double
          type: number
        check_version:
          description: Version of the browser test used.
          format: int64
          type: integer
        probe_dc:
          description: Location from which the browser test was performed.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultData'
        result_id:
          description: ID of the browser test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      type: object
    SyntheticsBrowserTestResultShort:
      description: Object with the results of a single Synthetic browser test.
      example:
        result:
          duration: 1.4658129805029452
          stepCountTotal: 2
          device:
            name: ""
            width: 0
            isMobile: true
            height: 0
          errorCount: 5
          stepCountCompleted: 5
        probe_dc: probe_dc
        result_id: result_id
        check_time: 6.027456183070403
      properties:
        check_time:
          description: Last time the browser test was performed.
          format: double
          type: number
        probe_dc:
          description: Location from which the Browser test was performed.
          type: string
        result:
          $ref: '#/components/schemas/SyntheticsBrowserTestResultShort_result'
        result_id:
          description: ID of the browser test result.
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestMonitorStatus'
      required:
        - from_ts
        - to_ts
      type: object
    SyntheticsBrowserTestType:
      default: browser
      description: Type of the Synthetic test, `browser`.
      enum:
        - browser
      example: browser
      type: string
      x-enum-varnames:
        - BROWSER
    SyntheticsBrowserVariable:
      description: |-
        Object defining a variable that can be used in your browser test.
        Learn more in the [Browser test Actions documentation](https://docs.datadoghq.com/synthetics/browser_tests/actions#variable).
      example:
        name: VARIABLE_NAME
        pattern: pattern
        id: id
        example: example
      properties:
        example:
          description: Example for the variable.
          type: string
        id:
          description: ID for the variable.
          type: string
        name:
          description: Name of the variable.
          example: VARIABLE_NAME
          type: string
        pattern:
          description: Pattern of the variable.
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsBrowserVariableType'
      required:
        - name
        - type
      type: object
    SyntheticsBrowserVariableType:
      description: Type of browser test variable.
      enum:
        - element
        - email
        - global
        - javascript
        - text
      type: string
      x-enum-varnames:
        - ELEMENT
        - EMAIL
        - GLOBAL
        - JAVASCRIPT
        - TEXT
    SyntheticsCITest:
      description: Test configuration for Synthetics CI
      example:
        bodyType: bodyType
        headers:
          key: headers
        deviceIds:
          - null
          - null
        metadata:
          git:
            commit_sha: commit_sha
            branch: branch
          ci:
            pipeline: pipeline
            provider: provider
        variables:
          key: variables
        basicAuth:
          password: ""
          username: ""
        body: body
        cookies: cookies
        public_id: aaa-aaa-aaa
        startUrl: startUrl
        followRedirects: true
        allowInsecureCertificates: true
        locations:
          - locations
          - locations
        retry:
          count: 2
          interval: 4.145608029883936
      properties:
        allowInsecureCertificates:
          description: Disable certificate checks in API tests.
          type: boolean
        basicAuth:
          $ref: '#/components/schemas/SyntheticsBasicAuth'
        body:
          description: Body to include in the test.
          type: string
        bodyType:
          description: Type of the data sent in a synthetics API test.
          type: string
        cookies:
          description: Cookies for the request.
          type: string
        deviceIds:
          description: For browser test, array with the different device IDs used
            to run the test.
          items:
            $ref: '#/components/schemas/SyntheticsDeviceID'
          type: array
        followRedirects:
          description: For API HTTP test, whether or not the test should follow redirects.
          type: boolean
        headers:
          additionalProperties:
            description: A single Header.
            type: string
          description: Headers to include when performing the test.
          type: object
        locations:
          description: Array of locations used to run the test.
          items:
            description: A location from which the test was run.
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/SyntheticsCITest_metadata'
        public_id:
          description: The public ID of the Synthetics test to trigger.
          example: aaa-aaa-aaa
          type: string
        retry:
          $ref: '#/components/schemas/SyntheticsTestOptionsRetry'
        startUrl:
          description: Starting URL for the browser test.
          type: string
        variables:
          additionalProperties:
            description: A single variable.
            type: string
          description: Variables to replace in the test.
          type: object
      required:
        - public_id
      type: object
    SyntheticsCITestBody:
      description: Object describing the synthetics tests to trigger.
      example:
        tests:
          - bodyType: bodyType
            headers:
              key: headers
            deviceIds:
              - null
              - null
            metadata:
              git:
                commit_sha: commit_sha
                branch: branch
              ci:
                pipeline: pipeline
                provider: provider
            variables:
              key: variables
            basicAuth:
              password: ""
              username: ""
            body: body
            cookies: cookies
            public_id: aaa-aaa-aaa
            startUrl: startUrl
            followRedirects: true
            allowInsecureCertificates: true
            locations:
              - locations
              - locations
            retry:
              count: 2
              interval: 4.145608029883936
          - bodyType: bodyType
            headers:
              key: headers
            deviceIds:
              - null
              - null
            metadata:
              git:
                commit_sha: commit_sha
                branch: branch
              ci:
                pipeline: pipeline
                provider: provider
            variables:
              key: variables
            basicAuth:
              password: ""
              username: ""
            body: body
            cookies: cookies
            public_id: aaa-aaa-aaa
            startUrl: startUrl
            followRedirects: true
            allowInsecureCertificates: true
            locations:
              - locations
              - locations
            retry:
              count: 2
              interval: 4.145608029883936
      properties:
        tests:
          description: Individual synthetics test.
          items:
            $ref: '#/components/schemas/SyntheticsCITest'
          type: array
      type: object
    SyntheticsCheckType:
      description: Type of assertion to apply in an API test.
      enum:
        - equals
        - notEquals
        - contains
        - notContains
        - startsWith
        - notStartsWith
        - greater
        - lower
        - greaterEquals
        - lowerEquals
        - matchRegex
        - between
        - isEmpty
        - notIsEmpty
      type: string
      x-enum-varnames:
        - EQUALS
        - NOT_EQUALS
        - CONTAINS
        - NOT_CONTAINS
        - STARTS_WITH
        - NOT_STARTS_WITH
        - GREATER
        - LOWER
        - GREATER_EQUALS
        - LOWER_EQUALS
        - MATCH_REGEX
        - BETWEEN
        - IS_EMPTY
        - NOT_IS_EMPTY
    SyntheticsConfigVariable:
      description: Object defining a variable that can be used in your test configuration.
      example:
        name: VARIABLE_NAME
        pattern: pattern
        id: id
        example: example
      properties:
        example:
          description: Example for the variable.
          type: string
        id:
          description: ID of the variable for global variables.
          type: string
        name:
          description: Name of the variable.
          example: VARIABLE_NAME
          type: string
        pattern:
          description: Pattern of the variable.
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsConfigVariableType'
      required:
        - name
        - type
      type: object
    SyntheticsConfigVariableType:
      description: Type of the configuration variable.
      enum:
        - global
        - text
      type: string
      x-enum-varnames:
        - GLOBAL
        - TEXT
    SyntheticsCoreWebVitals:
      description: Core Web Vitals attached to a browser test step.
      example:
        lcp: 2
        cls: 3
        url: url
      properties:
        cls:
          description: Cumulative Layout Shift.
          format: int64
          type: integer
        lcp:
          description: Largest Contentful Paint in milliseconds.
          format: int64
          type: integer
        url:
          description: URL attached to the metrics.
          type: string
      type: object
    SyntheticsDeleteTestsPayload:
      description: |-
        A JSON list of the ID or IDs of the Synthetic tests that you want
        to delete.
      example:
        public_ids: []
      properties:
        public_ids:
          description: An array of Synthetic test IDs you want to delete.
          example: []
          items:
            description: A Synthetic test ID to delete.
            example: abc-def-123
            type: string
          type: array
      type: object
    SyntheticsDeleteTestsResponse:
      description: Response object for deleting Synthetic tests.
      example:
        deleted_tests:
          - deleted_at: 2000-01-23T04:56:07.000+00:00
            public_id: public_id
          - deleted_at: 2000-01-23T04:56:07.000+00:00
            public_id: public_id
      properties:
        deleted_tests:
          description: |-
            Array of objects containing a deleted Synthetic test ID with
            the associated deletion timestamp.
          items:
            $ref: '#/components/schemas/SyntheticsDeletedTest'
          type: array
      type: object
    SyntheticsDeletedTest:
      description: |-
        Object containing a deleted Synthetic test ID with the associated
        deletion timestamp.
      example:
        deleted_at: 2000-01-23T04:56:07.000+00:00
        public_id: public_id
      properties:
        deleted_at:
          description: Deletion timestamp of the Synthetic test ID.
          format: date-time
          type: string
        public_id:
          description: The Synthetic test ID deleted.
          type: string
      type: object
    SyntheticsDevice:
      description: Object describing the device used to perform the Synthetic test.
      example:
        name: ""
        width: 0
        isMobile: true
        height: 0
      properties:
        height:
          description: Screen height of the device.
          example: 0
          format: int64
          type: integer
        id:
          $ref: '#/components/schemas/SyntheticsDeviceID'
        isMobile:
          description: Whether or not the device is a mobile.
          type: boolean
        name:
          description: The device name.
          example: ""
          type: string
        width:
          description: Screen width of the device.
          example: 0
          format: int64
          type: integer
      required:
        - height
        - id
        - name
        - width
      type: object
    SyntheticsDeviceID:
      description: The device ID.
      enum:
        - laptop_large
        - tablet
        - mobile_small
        - chrome.laptop_large
        - chrome.tablet
        - chrome.mobile_small
        - firefox.laptop_large
        - firefox.tablet
        - firefox.mobile_small
      type: string
      x-enum-varnames:
        - LAPTOP_LARGE
        - TABLET
        - MOBILE_SMALL
        - CHROME_LAPTOP_LARGE
        - CHROME_TABLET
        - CHROME_MOBILE_SMALL
        - FIREFOX_LAPTOP_LARGE
        - FIREFOX_TABLET
        - FIREFOX_MOBILE_SMALL
    SyntheticsErrorCode:
      description: Error code that can be returned by a Synthetic test.
      enum:
        - NO_ERROR
        - UNKNOWN
        - DNS
        - SSL
        - TIMEOUT
        - DENIED
        - INCORRECT_ASSERTION
      type: string
      x-enum-varnames:
        - NO_ERROR
        - UNKNOWN
        - DNS
        - SSL
        - TIMEOUT
        - DENIED
        - INCORRECT_ASSERTION
    SyntheticsGetAPITestLatestResultsResponse:
      description: Object with the latest Synthetic API test run.
      example:
        last_timestamp_fetched: 0
        results:
          - result:
              timings:
                redirect: 7.061401241503109
                tcp: 3.616076749251911
                handshake: 2.3021358869347655
                download: 5.962133916683182
                total: 2.027123023002322
                wait: 4.145608029883936
                dns: 1.4658129805029452
                firstByte: 5.637376656633329
                ssl: 9.301444243932576
              passed: true
            probe_dc: probe_dc
            result_id: result_id
            check_time: 6.027456183070403
          - result:
              timings:
                redirect: 7.061401241503109
                tcp: 3.616076749251911
                handshake: 2.3021358869347655
                download: 5.962133916683182
                total: 2.027123023002322
                wait: 4.145608029883936
                dns: 1.4658129805029452
                firstByte: 5.637376656633329
                ssl: 9.301444243932576
              passed: true
            probe_dc: probe_dc
            result_id: result_id
            check_time: 6.027456183070403
      properties:
        last_timestamp_fetched:
          description: Timestamp of the latest API test run.
          format: int64
          type: integer
        results:
          description: Result of the latest API test run.
          items:
            $ref: '#/components/schemas/SyntheticsAPITestResultShort'
          type: array
      type: object
    SyntheticsGetBrowserTestLatestResultsResponse:
      description: Object with the latest Synthetic browser test run.
      example:
        last_timestamp_fetched: 0
        results:
          - result:
              duration: 1.4658129805029452
              stepCountTotal: 2
              device:
                name: ""
                width: 0
                isMobile: true
                height: 0
              errorCount: 5
              stepCountCompleted: 5
            probe_dc: probe_dc
            result_id: result_id
            check_time: 6.027456183070403
          - result:
              duration: 1.4658129805029452
              stepCountTotal: 2
              device:
                name: ""
                width: 0
                isMobile: true
                height: 0
              errorCount: 5
              stepCountCompleted: 5
            probe_dc: probe_dc
            result_id: result_id
            check_time: 6.027456183070403
      properties:
        last_timestamp_fetched:
          description: Timestamp of the latest browser test run.
          format: int64
          type: integer
        results:
          description: Result of the latest browser test run.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserTestResultShort'
          type: array
      type: object
    SyntheticsGlobalVariable:
      description: Synthetics global variable.
      example:
        name: MY_VARIABLE
        parse_test_options:
          field: content-type
          parser:
            type: regex
            value: .*
        description: Example description
        parse_test_public_id: abc-def-123
        id: id
        value:
          secure: true
          value: value
        tags:
          - team:front
          - test:workflow-1
      properties:
        description:
          description: Description of the global variable.
          example: Example description
          type: string
        id:
          description: Unique identifier of the global variable.
          readOnly: true
          type: string
        name:
          description: Name of the global variable.
          example: MY_VARIABLE
          type: string
        parse_test_options:
          $ref: '#/components/schemas/SyntheticsGlobalVariable_parse_test_options'
        parse_test_public_id:
          description: A Synthetic test ID to use as a test to generate the variable
            value.
          example: abc-def-123
          type: string
        tags:
          description: Tags of the global variable.
          example:
            - team:front
            - test:workflow-1
          items:
            description: Tag name.
            type: string
          type: array
        value:
          $ref: '#/components/schemas/SyntheticsGlobalVariableValue'
      required:
        - description
        - name
        - tags
        - value
      type: object
    SyntheticsGlobalVariableParseTestOptionsType:
      description: Property of the Synthetics Test Response to use for a Synthetics
        global variable.
      enum:
        - http_body
        - http_header
      type: string
      x-enum-varnames:
        - HTTP_BODY
        - HTTP_HEADER
    SyntheticsGlobalVariableParserType:
      description: Type of parser for a Synthetics global variable from a synthetics
        test.
      enum:
        - raw
        - json_path
        - regex
      type: string
      x-enum-varnames:
        - RAW
        - JSON_PATH
        - REGEX
    SyntheticsGlobalVariableValue:
      description: Value of the global variable.
      example:
        secure: true
        value: value
      properties:
        secure:
          description: Determines if the variable is secure.
          type: boolean
        value:
          description: |-
            Value of the global variable. When reading a global variable,
            the value will not be present if the variable is secure.
          example: example-value
          type: string
      type: object
    SyntheticsListGlobalVariablesResponse:
      description: Object containing an array of Synthetic global variables.
      example:
        variables:
          - name: MY_VARIABLE
            parse_test_options:
              field: content-type
              parser:
                type: regex
                value: .*
            description: Example description
            parse_test_public_id: abc-def-123
            id: id
            value:
              secure: true
              value: value
            tags:
              - team:front
              - test:workflow-1
          - name: MY_VARIABLE
            parse_test_options:
              field: content-type
              parser:
                type: regex
                value: .*
            description: Example description
            parse_test_public_id: abc-def-123
            id: id
            value:
              secure: true
              value: value
            tags:
              - team:front
              - test:workflow-1
      properties:
        variables:
          description: Array of Synthetic global variables.
          items:
            $ref: '#/components/schemas/SyntheticsGlobalVariable'
          type: array
      type: object
    SyntheticsListTestsResponse:
      description: Object containing an array of Synthetic tests configuration.
      example:
        tests:
          - monitor_id: 5
            name: name
            options:
              allow_insecure: true
              accept_self_signed: true
              monitor_name: monitor_name
              min_location_failed: 7
              monitor_options:
                renotify_interval: 1339
              tick_every: 446730
              disableCors: true
              min_failure_duration: 2
              monitor_priority: 2
              noScreenshot: true
              device_ids:
                - null
                - null
              follow_redirects: true
              retry:
                count: 2
                interval: 4.145608029883936
            locations:
              - locations
              - locations
            message: message
            config:
              request:
                headers:
                  key: headers
                noSavingResponseBody: true
                shouldTrackHops: true
                basicAuth:
                  password: ""
                  username: ""
                query: '{}'
                certificate:
                  cert:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                  key:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                allow_insecure: true
                body: body
                timeout: 5.962133916683182
                url: url
                port: 1
                dnsServerPort: 5249
                host: host
                numberOfPackets: 6
                dnsServer: dnsServer
              variables:
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
              assertions: []
              configVariables:
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
            steps:
              - allowFailure: true
                name: name
                params: '{}'
                timeout: 1
              - allowFailure: true
                name: name
                params: '{}'
                timeout: 1
            public_id: public_id
            tags:
              - tags
              - tags
          - monitor_id: 5
            name: name
            options:
              allow_insecure: true
              accept_self_signed: true
              monitor_name: monitor_name
              min_location_failed: 7
              monitor_options:
                renotify_interval: 1339
              tick_every: 446730
              disableCors: true
              min_failure_duration: 2
              monitor_priority: 2
              noScreenshot: true
              device_ids:
                - null
                - null
              follow_redirects: true
              retry:
                count: 2
                interval: 4.145608029883936
            locations:
              - locations
              - locations
            message: message
            config:
              request:
                headers:
                  key: headers
                noSavingResponseBody: true
                shouldTrackHops: true
                basicAuth:
                  password: ""
                  username: ""
                query: '{}'
                certificate:
                  cert:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                  key:
                    filename: filename
                    content: content
                    updatedAt: updatedAt
                allow_insecure: true
                body: body
                timeout: 5.962133916683182
                url: url
                port: 1
                dnsServerPort: 5249
                host: host
                numberOfPackets: 6
                dnsServer: dnsServer
              variables:
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
              assertions: []
              configVariables:
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
                - name: VARIABLE_NAME
                  pattern: pattern
                  id: id
                  example: example
            steps:
              - allowFailure: true
                name: name
                params: '{}'
                timeout: 1
              - allowFailure: true
                name: name
                params: '{}'
                timeout: 1
            public_id: public_id
            tags:
              - tags
              - tags
      properties:
        tests:
          description: Array of Synthetic tests configuration.
          items:
            $ref: '#/components/schemas/SyntheticsTestDetails'
          type: array
      type: object
    SyntheticsLocation:
      description: |-
        Synthetic location that can be used when creating or editing a
        test.
      example:
        name: name
        id: id
      properties:
        id:
          description: Unique identifier of the location.
          type: string
        name:
          description: Name of the location.
          type: string
      type: object
    SyntheticsLocations:
      description: List of Synthetics locations.
      example:
        locations:
          - name: name
            id: id
          - name: name
            id: id
      properties:
        locations:
          description: List of Synthetics locations.
          items:
            $ref: '#/components/schemas/SyntheticsLocation'
          type: array
      type: object
    SyntheticsParsingOptions:
      description: Parsing options for variables to extract.
      example:
        field: content-type
        parser:
          type: regex
          value: .*
        name: name
      properties:
        field:
          description: When type is `http_header`, name of the header to use to extract
            the value.
          example: content-type
          type: string
        name:
          description: Name of the variable to extract.
          type: string
        parser:
          $ref: '#/components/schemas/SyntheticsVariableParser'
        type:
          $ref: '#/components/schemas/SyntheticsGlobalVariableParseTestOptionsType'
      type: object
    SyntheticsPlayingTab:
      description: Navigate between different tabs for your browser test.
      enum:
        - -1
        - 0
        - 1
        - 2
        - 3
      format: int64
      type: integer
      x-enum-varnames:
        - MAIN_TAB
        - NEW_TAB
        - TAB_1
        - TAB_2
        - TAB_3
    SyntheticsPrivateLocation:
      description: Object containing information about the private location to create.
      example:
        name: New private location
        description: Description of private location
        id: id
        secrets:
          config_decryption:
            key: key
          authentication:
            id: id
            key: key
        tags:
          - team:front
      properties:
        description:
          description: Description of the private location.
          example: Description of private location
          type: string
        id:
          description: Unique identifier of the private location.
          readOnly: true
          type: string
        name:
          description: Name of the private location.
          example: New private location
          type: string
        secrets:
          $ref: '#/components/schemas/SyntheticsPrivateLocation_secrets'
        tags:
          description: Array of tags attached to the private location.
          example:
            - team:front
          items:
            description: A tag attached to the private location.
            example: team:front
            type: string
          type: array
      required:
        - description
        - name
        - tags
      type: object
    SyntheticsPrivateLocationCreationResponse:
      description: Object that contains the new private location, the public key for
        result encryption, and the configuration skeleton.
      example:
        private_location:
          name: New private location
          description: Description of private location
          id: id
          secrets:
            config_decryption:
              key: key
            authentication:
              id: id
              key: key
          tags:
            - team:front
        config: '{}'
        result_encryption:
          id: id
          key: key
      properties:
        config:
          description: Configuration skeleton for the private location. See installation
            instructions of the private location on how to use this configuration.
          type: object
        private_location:
          $ref: '#/components/schemas/SyntheticsPrivateLocation'
        result_encryption:
          $ref: '#/components/schemas/SyntheticsPrivateLocationCreationResponse_result_encryption'
      type: object
    SyntheticsSSLCertificate:
      description: Object describing the SSL certificate used for a Synthetic test.
      example:
        cipher: cipher
        protocol: protocol
        serialNumber: serialNumber
        extKeyUsage:
          - extKeyUsage
          - extKeyUsage
        subject:
          ST: ST
          C: C
          OU: OU
          CN: CN
          altName: altName
          L: L
          O: O
        fingerprint: fingerprint
        validFrom: 2000-01-23T04:56:07.000+00:00
        fingerprint256: fingerprint256
        issuer:
          ST: ST
          C: C
          OU: OU
          CN: CN
          L: L
          O: O
        modulus: modulus
        exponent: 1.4658129805029452
        validTo: 2000-01-23T04:56:07.000+00:00
      properties:
        cipher:
          description: Cipher used for the connection.
          type: string
        exponent:
          description: Exponent associated to the certificate.
          format: double
          type: number
        extKeyUsage:
          description: Array of extensions and details used for the certificate.
          items:
            description: An extension or detail used for the certificate.
            type: string
          type: array
        fingerprint:
          description: MD5 digest of the DER-encoded Certificate information.
          type: string
        fingerprint256:
          description: SHA-1 digest of the DER-encoded Certificate information.
          type: string
        issuer:
          $ref: '#/components/schemas/SyntheticsSSLCertificate_issuer'
        modulus:
          description: Modulus associated to the SSL certificate private key.
          type: string
        protocol:
          description: TLS protocol used for the test.
          type: string
        serialNumber:
          description: Serial Number assigned by Symantec to the SSL certificate.
          type: string
        subject:
          $ref: '#/components/schemas/SyntheticsSSLCertificate_subject'
        validFrom:
          description: Date from which the SSL certificate is valid.
          format: date-time
          type: string
        validTo:
          description: Date until which the SSL certificate is valid.
          format: date-time
          type: string
      type: object
    SyntheticsStep:
      description: The steps used in a Synthetics browser test.
      example:
        allowFailure: true
        name: name
        params: '{}'
        timeout: 1
      properties:
        allowFailure:
          description: A boolean set to allow this step to fail.
          type: boolean
        name:
          description: The name of the step.
          type: string
        params:
          description: The parameters of the step.
          type: object
        timeout:
          description: The time before declaring a step failed.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SyntheticsStepType'
      type: object
    SyntheticsStepDetail:
      description: Object describing a step for a Synthetic test.
      example:
        screenshotBucketKey: true
        snapshotBucketKey: true
        warnings:
          - message: ""
          - message: ""
        stepId: 7
        timeToInteractive: 9.301444243932576
        description: description
        error: error
        url: url
        skipped: true
        duration: 2.3021358869347655
        vitalsMetrics:
          - lcp: 2
            cls: 3
            url: url
          - lcp: 2
            cls: 3
            url: url
        browserErrors:
          - name: ""
            description: ""
            status: 5
          - name: ""
            description: ""
            status: 5
        subTestStepDetails:
          - null
          - null
        value: '{}'
      properties:
        browserErrors:
          description: Array of errors collected for a browser test.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserError'
          type: array
        checkType:
          $ref: '#/components/schemas/SyntheticsCheckType'
        description:
          description: Description of the test.
          type: string
        duration:
          description: Total duration in millisecond of the test.
          format: double
          type: number
        error:
          description: Error returned by the test.
          type: string
        playingTab:
          $ref: '#/components/schemas/SyntheticsPlayingTab'
        screenshotBucketKey:
          description: Whether or not screenshots where collected by the test.
          type: boolean
        skipped:
          description: Whether or not to skip this step.
          type: boolean
        snapshotBucketKey:
          description: Whether or not snapshots where collected by the test.
          type: boolean
        stepId:
          description: The step ID.
          format: int64
          type: integer
        subTestStepDetails:
          description: |-
            If this steps include a sub-test.
            [Subtests documentation](https://docs.datadoghq.com/synthetics/browser_tests/advanced_options/#subtests).
          items:
            $ref: '#/components/schemas/SyntheticsStepDetail'
          type: array
        timeToInteractive:
          description: Time before starting the step.
          format: double
          type: number
        type:
          $ref: '#/components/schemas/SyntheticsStepType'
        url:
          description: URL to perform the step against.
          type: string
        value:
          description: Value for the step.
          type: object
        vitalsMetrics:
          description: Array of Core Web Vitals metrics for the step.
          items:
            $ref: '#/components/schemas/SyntheticsCoreWebVitals'
          type: array
        warnings:
          description: Warning collected that didn't failed the step.
          items:
            $ref: '#/components/schemas/SyntheticsStepDetailWarning'
          type: array
      type: object
    SyntheticsStepDetailWarning:
      description: Object collecting warnings for a given step.
      example:
        message: ""
      properties:
        message:
          description: Message for the warning.
          example: ""
          type: string
        type:
          $ref: '#/components/schemas/SyntheticsWarningType'
      required:
        - message
        - type
      type: object
    SyntheticsStepType:
      description: Step type used in your Synthetic test.
      enum:
        - assertCurrentUrl
        - assertElementAttribute
        - assertElementContent
        - assertElementPresent
        - assertEmail
        - assertFileDownload
        - assertFromJavascript
        - assertPageContains
        - assertPageLacks
        - click
        - extractFromJavascript
        - extractVariable
        - goToEmailLink
        - goToUrl
        - goToUrlAndMeasureTti
        - hover
        - playSubTest
        - pressKey
        - refresh
        - runApiTest
        - scroll
        - selectOption
        - typeText
        - uploadFiles
        - wait
      type: string
      x-enum-varnames:
        - ASSERT_CURRENT_URL
        - ASSERT_ELEMENT_ATTRIBUTE
        - ASSERT_ELEMENT_CONTENT
        - ASSERT_ELEMENT_PRESENT
        - ASSERT_EMAIL
        - ASSERT_FILE_DOWNLOAD
        - ASSERT_FROM_JAVASCRIPT
        - ASSERT_PAGE_CONTAINS
        - ASSERT_PAGE_LACKS
        - CLICK
        - EXTRACT_FROM_JAVASCRIPT
        - EXTRACT_VARIABLE
        - GO_TO_EMAIL_LINK
        - GO_TO_URL
        - GO_TO_URL_AND_MEASURE_TTI
        - HOVER
        - PLAY_SUB_TEST
        - PRESS_KEY
        - REFRESH
        - RUN_API_TEST
        - SCROLL
        - SELECT_OPTION
        - TYPE_TEXT
        - UPLOAD_FILES
        - WAIT
    SyntheticsTestConfig:
      description: Configuration object for a Synthetic test.
      example:
        request:
          headers:
            key: headers
          noSavingResponseBody: true
          shouldTrackHops: true
          basicAuth:
            password: ""
            username: ""
          query: '{}'
          certificate:
            cert:
              filename: filename
              content: content
              updatedAt: updatedAt
            key:
              filename: filename
              content: content
              updatedAt: updatedAt
          allow_insecure: true
          body: body
          timeout: 5.962133916683182
          url: url
          port: 1
          dnsServerPort: 5249
          host: host
          numberOfPackets: 6
          dnsServer: dnsServer
        variables:
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
        assertions: []
        configVariables:
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
          - name: VARIABLE_NAME
            pattern: pattern
            id: id
            example: example
      properties:
        assertions:
          default: []
          description: Array of assertions used for the test.
          example: []
          items:
            $ref: '#/components/schemas/SyntheticsAssertion'
          type: array
        configVariables:
          description: API tests only - array of variables used for the test.
          items:
            $ref: '#/components/schemas/SyntheticsConfigVariable'
          type: array
        request:
          $ref: '#/components/schemas/SyntheticsTestRequest'
        variables:
          description: Browser tests only - array of variables used for the test steps.
          items:
            $ref: '#/components/schemas/SyntheticsBrowserVariable'
          type: array
      type: object
    SyntheticsTestDetails:
      description: Object containing details about your Synthetic test.
      example:
        monitor_id: 5
        name: name
        options:
          allow_insecure: true
          accept_self_signed: true
          monitor_name: monitor_name
          min_location_failed: 7
          monitor_options:
            renotify_interval: 1339
          tick_every: 446730
          disableCors: true
          min_failure_duration: 2
          monitor_priority: 2
          noScreenshot: true
          device_ids:
            - null
            - null
          follow_redirects: true
          retry:
            count: 2
            interval: 4.145608029883936
        locations:
          - locations
          - locations
        message: message
        config:
          request:
            headers:
              key: headers
            noSavingResponseBody: true
            shouldTrackHops: true
            basicAuth:
              password: ""
              username: ""
            query: '{}'
            certificate:
              cert:
                filename: filename
                content: content
                updatedAt: updatedAt
              key:
                filename: filename
                content: content
                updatedAt: updatedAt
            allow_insecure: true
            body: body
            timeout: 5.962133916683182
            url: url
            port: 1
            dnsServerPort: 5249
            host: host
            numberOfPackets: 6
            dnsServer: dnsServer
          variables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
          assertions: []
          configVariables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
        steps:
          - allowFailure: true
            name: name
            params: '{}'
            timeout: 1
          - allowFailure: true
            name: name
            params: '{}'
            timeout: 1
        public_id: public_id
        tags:
          - tags
          - tags
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsTestConfig'
        locations:
          description: Array of locations used to run the test.
          items:
            description: A location from which the test was run.
            type: string
          type: array
        message:
          description: Notification message associated with the test.
          type: string
        monitor_id:
          description: The associated monitor ID.
          format: int64
          readOnly: true
          type: integer
        name:
          description: Name of the test.
          type: string
        options:
          $ref: '#/components/schemas/SyntheticsTestOptions'
        public_id:
          description: The test public ID.
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
        steps:
          description: For browser test, the steps of the test.
          items:
            $ref: '#/components/schemas/SyntheticsStep'
          type: array
        subtype:
          $ref: '#/components/schemas/SyntheticsTestDetailsSubType'
        tags:
          description: Array of tags attached to the test.
          items:
            description: A tag attached to the test.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/SyntheticsTestDetailsType'
      type: object
    SyntheticsTestDetailsSubType:
      description: |-
        The subtype of the Synthetic API test, `http`, `ssl`, `tcp`,
        `dns`, `icmp` or `multi`.
      enum:
        - http
        - ssl
        - tcp
        - dns
        - multi
        - icmp
      type: string
      x-enum-varnames:
        - HTTP
        - SSL
        - TCP
        - DNS
        - MULTI
        - ICMP
    SyntheticsTestDetailsType:
      description: Type of the Synthetic test, either `api` or `browser`.
      enum:
        - api
        - browser
      type: string
      x-enum-varnames:
        - API
        - BROWSER
    SyntheticsTestHeaders:
      additionalProperties:
        description: A single Header.
        type: string
      description: Headers to include when performing the test.
      type: object
    SyntheticsTestMonitorStatus:
      description: |-
        The status of your Synthetic monitor.
        * `O` for not triggered
        * `1` for triggered
        * `2` for no data
      enum:
        - 0
        - 1
        - 2
      format: int64
      type: integer
      x-enum-varnames:
        - UNTRIGGERED
        - TRIGGERED
        - NO_DATA
    SyntheticsTestOptions:
      description: Object describing the extra options for a Synthetic test.
      example:
        allow_insecure: true
        accept_self_signed: true
        monitor_name: monitor_name
        min_location_failed: 7
        monitor_options:
          renotify_interval: 1339
        tick_every: 446730
        disableCors: true
        min_failure_duration: 2
        monitor_priority: 2
        noScreenshot: true
        device_ids:
          - null
          - null
        follow_redirects: true
        retry:
          count: 2
          interval: 4.145608029883936
      properties:
        accept_self_signed:
          description: |-
            For SSL test, whether or not the test should allow self signed
            certificates.
          type: boolean
        allow_insecure:
          description: Allows loading insecure content for an HTTP request.
          type: boolean
        device_ids:
          description: For browser test, array with the different device IDs used
            to run the test.
          items:
            $ref: '#/components/schemas/SyntheticsDeviceID'
          type: array
        disableCors:
          description: Whether or not to disable CORS mechanism.
          type: boolean
        follow_redirects:
          description: For API HTTP test, whether or not the test should follow redirects.
          type: boolean
        min_failure_duration:
          description: Minimum amount of time in failure required to trigger an alert.
          format: int64
          type: integer
        min_location_failed:
          description: |-
            Minimum number of locations in failure required to trigger
            an alert.
          format: int64
          type: integer
        monitor_name:
          description: The monitor name is used for the alert title as well as for
            all monitor dashboard widgets and SLOs.
          type: string
        monitor_options:
          $ref: '#/components/schemas/SyntheticsTestOptions_monitor_options'
        monitor_priority:
          description: Integer from 1 (high) to 5 (low) indicating alert severity.
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        noScreenshot:
          description: Prevents saving screenshots of the steps.
          type: boolean
        retry:
          $ref: '#/components/schemas/SyntheticsTestOptionsRetry'
        tick_every:
          description: The frequency at which to run the Synthetic test (in seconds).
          format: int64
          maximum: 604800
          minimum: 30
          type: integer
      type: object
    SyntheticsTestOptionsRetry:
      description: Object describing the retry strategy to apply to a Synthetic test.
      example:
        count: 2
        interval: 4.145608029883936
      properties:
        count:
          description: |-
            Number of times a test needs to be retried before marking a
            location as failed. Defaults to 0.
          format: int64
          type: integer
        interval:
          description: |-
            Time interval between retries (in milliseconds). Defaults to
            300ms.
          format: double
          type: number
      type: object
    SyntheticsTestPauseStatus:
      description: |-
        Define whether you want to start (`live`) or pause (`paused`) a
        Synthetic test.
      enum:
        - live
        - paused
      type: string
      x-enum-varnames:
        - LIVE
        - PAUSED
    SyntheticsTestProcessStatus:
      description: Status of a Synthetic test.
      enum:
        - not_scheduled
        - scheduled
        - started
        - finished
        - finished_with_error
      type: string
      x-enum-varnames:
        - NOT_SCHEDULED
        - SCHEDULED
        - STARTED
        - FINISHED
        - FINISHED_WITH_ERROR
    SyntheticsTestRequest:
      description: Object describing the Synthetic test request.
      example:
        headers:
          key: headers
        noSavingResponseBody: true
        shouldTrackHops: true
        basicAuth:
          password: ""
          username: ""
        query: '{}'
        certificate:
          cert:
            filename: filename
            content: content
            updatedAt: updatedAt
          key:
            filename: filename
            content: content
            updatedAt: updatedAt
        allow_insecure: true
        body: body
        timeout: 5.962133916683182
        url: url
        port: 1
        dnsServerPort: 5249
        host: host
        numberOfPackets: 6
        dnsServer: dnsServer
      properties:
        allow_insecure:
          description: Allows loading insecure content for an HTTP request in a multistep
            test step.
          type: boolean
        basicAuth:
          $ref: '#/components/schemas/SyntheticsBasicAuth'
        body:
          description: Body to include in the test.
          type: string
        certificate:
          $ref: '#/components/schemas/SyntheticsTestRequestCertificate'
        dnsServer:
          description: DNS server to use for DNS tests.
          type: string
        dnsServerPort:
          description: DNS server port to use for DNS tests.
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        headers:
          additionalProperties:
            description: A single Header.
            type: string
          description: Headers to include when performing the test.
          type: object
        host:
          description: Host name to perform the test with.
          type: string
        method:
          $ref: '#/components/schemas/HTTPMethod'
        noSavingResponseBody:
          description: Determines whether or not to save the response body.
          type: boolean
        numberOfPackets:
          description: Number of pings to use per test.
          format: int32
          maximum: 10
          minimum: 0
          type: integer
        port:
          description: Port to use when performing the test.
          format: int64
          type: integer
        query:
          description: Query to use for the test.
          type: object
        shouldTrackHops:
          description: Turns on a traceroute probe to discover all gateways along
            the path to the host destination.
          type: boolean
        timeout:
          description: Timeout in seconds for the test.
          format: double
          type: number
        url:
          description: URL to perform the test with.
          type: string
      type: object
    SyntheticsTestRequestCertificate:
      description: Client certificate to use when performing the test request.
      example:
        cert:
          filename: filename
          content: content
          updatedAt: updatedAt
        key:
          filename: filename
          content: content
          updatedAt: updatedAt
      properties:
        cert:
          $ref: '#/components/schemas/SyntheticsTestRequestCertificateItem'
        key:
          $ref: '#/components/schemas/SyntheticsTestRequestCertificateItem'
      type: object
    SyntheticsTestRequestCertificateItem:
      description: Define a request certificate.
      example:
        filename: filename
        content: content
        updatedAt: updatedAt
      properties:
        content:
          description: Content of the certificate or key.
          type: string
        filename:
          description: File name for the certificate or key.
          type: string
        updatedAt:
          description: Date of update of the certificate or key, ISO format.
          type: string
      type: object
    SyntheticsTiming:
      description: |-
        Object containing all metrics and their values collected for a Synthetic API test.
        Learn more about those metrics in [Synthetics documentation](https://docs.datadoghq.com/synthetics/#metrics).
      example:
        redirect: 7.061401241503109
        tcp: 3.616076749251911
        handshake: 2.3021358869347655
        download: 5.962133916683182
        total: 2.027123023002322
        wait: 4.145608029883936
        dns: 1.4658129805029452
        firstByte: 5.637376656633329
        ssl: 9.301444243932576
      properties:
        dns:
          description: The duration in millisecond of the DNS lookup.
          format: double
          type: number
        download:
          description: The time in millisecond to download the response.
          format: double
          type: number
        firstByte:
          description: The time in millisecond to first byte.
          format: double
          type: number
        handshake:
          description: The duration in millisecond of the TLS handshake.
          format: double
          type: number
        redirect:
          description: The time in millisecond spent during redirections.
          format: double
          type: number
        ssl:
          description: The duration in millisecond of the TLS handshake.
          format: double
          type: number
        tcp:
          description: Time in millisecond to establish the TCP connection.
          format: double
          type: number
        total:
          description: The overall time in millisecond the request took to be processed.
          format: double
          type: number
        wait:
          description: Time spent in millisecond waiting for a response.
          format: double
          type: number
      type: object
    SyntheticsTriggerCITestLocation:
      description: Synthetics location.
      example:
        name: name
        id: 0
      properties:
        id:
          description: Unique identifier of the location.
          format: int64
          type: integer
        name:
          description: Name of the location.
          type: string
      type: object
    SyntheticsTriggerCITestRunResult:
      description: Information about a single test run.
      example:
        result_id: result_id
        location: 6
        public_id: public_id
      properties:
        device:
          $ref: '#/components/schemas/SyntheticsDeviceID'
        location:
          description: The location ID of the test run.
          format: int64
          type: integer
        public_id:
          description: The public ID of the Synthetics test.
          type: string
        result_id:
          description: ID of the result.
          type: string
      type: object
    SyntheticsTriggerCITestsResponse:
      description: Object containing information about the tests triggered.
      example:
        triggered_check_ids:
          - triggered_check_ids
          - triggered_check_ids
        locations:
          - name: name
            id: 0
          - name: name
            id: 0
        results:
          - result_id: result_id
            location: 6
            public_id: public_id
          - result_id: result_id
            location: 6
            public_id: public_id
      properties:
        locations:
          description: List of Synthetics locations.
          items:
            $ref: '#/components/schemas/SyntheticsTriggerCITestLocation'
          type: array
        results:
          description: Information about the tests runs.
          items:
            $ref: '#/components/schemas/SyntheticsTriggerCITestRunResult'
          type: array
        triggered_check_ids:
          description: The public IDs of the Synthetics test triggered.
          items:
            description: The public ID of the Synthetics test.
            type: string
          type: array
      type: object
    SyntheticsUpdateTestPauseStatusPayload:
      description: Object to start or pause an existing Synthetic test.
      example: {}
      properties:
        new_status:
          $ref: '#/components/schemas/SyntheticsTestPauseStatus'
      type: object
    SyntheticsVariableParser:
      description: Details of the parser to use for the global variable.
      example:
        type: regex
        value: .*
      properties:
        type:
          $ref: '#/components/schemas/SyntheticsGlobalVariableParserType'
        value:
          description: Regex or JSON path used for the parser. Not used with type
            `raw`.
          type: string
      required:
        - type
      type: object
    SyntheticsWarningType:
      description: User locator used.
      enum:
        - user_locator
      type: string
      x-enum-varnames:
        - USER_LOCATOR
    TableWidgetCellDisplayMode:
      description: Define a display mode for the table cell.
      enum:
        - number
        - bar
      example: number
      type: string
      x-enum-varnames:
        - NUMBER
        - BAR
    TableWidgetDefinition:
      description: The table visualization is available on timeboards and screenboards.
        It displays columns of metrics grouped by tag key.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        has_search_bar:
          $ref: '#/components/schemas/TableWidgetHasSearchBar'
        requests:
          description: Widget definition.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/TableWidgetRequest'
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/TableWidgetDefinitionType'
      required:
        - requests
        - type
      type: object
    TableWidgetDefinitionType:
      default: query_table
      description: Type of the table widget.
      enum:
        - query_table
      example: query_table
      type: string
      x-enum-varnames:
        - QUERY_TABLE
    TableWidgetHasSearchBar:
      description: Controls the display of the search bar.
      enum:
        - always
        - never
        - auto
      example: auto
      type: string
      x-enum-varnames:
        - ALWAYS
        - NEVER
        - AUTO
    TableWidgetRequest:
      description: Updated table widget.
      properties:
        aggregator:
          $ref: '#/components/schemas/WidgetAggregator'
        alias:
          description: The column name (defaults to the metric name).
          type: string
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        apm_stats_query:
          $ref: '#/components/schemas/ApmStatsQueryDefinition'
        cell_display_mode:
          description: A list of display modes for each table cell.
          items:
            $ref: '#/components/schemas/TableWidgetCellDisplayMode'
          type: array
        conditional_formats:
          description: List of conditional formats.
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          type: array
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries. **This feature is
            currently in beta.**
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        limit:
          description: For metric queries, the number of lines to show in the table.
            Only one request should have this property.
          format: int64
          type: integer
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        order:
          $ref: '#/components/schemas/WidgetSort'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Query definition.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
            **This feature is currently in beta.**
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
      type: object
    TagToHosts:
      description: In this object, the key is the tag, the value is a list of host
        names that are reporting that tag.
      example:
        tags:
          key:
            - test.metric.host
            - test.metric.host
      properties:
        tags:
          additionalProperties:
            description: A list of additional properties for tags.
            items:
              description: A given tag in a list.
              example: test.metric.host
              type: string
            type: array
          description: A list of tags to apply to the host.
          type: object
      type: object
    TargetFormatType:
      description: |-
        If the `target_type` of the remapper is `attribute`, try to cast the value to a new specific type.
        If the cast is not possible, the original type is kept. `string`, `integer`, or `double` are the possible types.
        If the `target_type` is `tag`, this parameter may not be specified.
      enum:
        - auto
        - string
        - integer
        - double
      type: string
      x-enum-varnames:
        - AUTO
        - STRING
        - INTEGER
        - DOUBLE
    TimeseriesWidgetDefinition:
      description: The timeseries visualization allows you to display the evolution
        of one or more metrics, log events, or Indexed Spans over time.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        events:
          description: List of widget events.
          items:
            $ref: '#/components/schemas/WidgetEvent'
          type: array
        legend_columns:
          description: Columns displayed in the legend.
          items:
            $ref: '#/components/schemas/TimeseriesWidgetLegendColumn'
          type: array
        legend_layout:
          $ref: '#/components/schemas/TimeseriesWidgetLegendLayout'
        legend_size:
          description: Available legend sizes for a widget. Should be one of "0",
            "2", "4", "8", "16", or "auto".
          type: string
        markers:
          description: List of markers.
          items:
            $ref: '#/components/schemas/WidgetMarker'
          type: array
        requests:
          description: List of timeseries widget requests.
          example:
            - q/apm_query/log_query: <METRIC_1>{<SCOPE_1>}
          items:
            $ref: '#/components/schemas/TimeseriesWidgetRequest'
          minItems: 1
          type: array
        right_yaxis:
          $ref: '#/components/schemas/WidgetAxis'
        show_legend:
          description: (screenboard only) Show the legend for this widget.
          type: boolean
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/TimeseriesWidgetDefinitionType'
        yaxis:
          $ref: '#/components/schemas/WidgetAxis'
      required:
        - requests
        - type
      type: object
    TimeseriesWidgetDefinitionType:
      default: timeseries
      description: Type of the timeseries widget.
      enum:
        - timeseries
      example: timeseries
      type: string
      x-enum-varnames:
        - TIMESERIES
    TimeseriesWidgetExpressionAlias:
      description: Define an expression alias.
      properties:
        alias_name:
          description: Expression alias.
          type: string
        expression:
          description: Expression name.
          example: ""
          type: string
      required:
        - expression
      type: object
    TimeseriesWidgetLegendColumn:
      description: Legend column.
      enum:
        - value
        - avg
        - sum
        - min
        - max
      type: string
      x-enum-varnames:
        - VALUE
        - AVG
        - SUM
        - MIN
        - MAX
    TimeseriesWidgetLegendLayout:
      description: Layout of the legend.
      enum:
        - auto
        - horizontal
        - vertical
      type: string
      x-enum-varnames:
        - AUTO
        - HORIZONTAL
        - VERTICAL
    TimeseriesWidgetRequest:
      description: Updated timeseries widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        audit_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        display_type:
          $ref: '#/components/schemas/WidgetDisplayType'
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries. **This feature is
            currently in beta.**
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        metadata:
          description: Used to define expression aliases.
          items:
            $ref: '#/components/schemas/TimeseriesWidgetExpressionAlias'
          type: array
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        on_right_yaxis:
          description: Whether or not to display a second y-axis on the right.
          type: boolean
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
            **This feature is currently in beta.**
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetRequestStyle'
      type: object
    ToplistWidgetDefinition:
      description: The top list visualization enables you to display a list of Tag
        value like hostname or service with the most or least of any metric value,
        such as highest consumers of CPU, hosts with the least disk space, etc.
      properties:
        custom_links:
          description: List of custom links.
          items:
            $ref: '#/components/schemas/WidgetCustomLink'
          type: array
        requests:
          description: List of top list widget requests.
          example:
            - q: system.load.1
          items:
            $ref: '#/components/schemas/ToplistWidgetRequest'
          type: array
        time:
          $ref: '#/components/schemas/WidgetTime'
        title:
          description: Title of your widget.
          type: string
        title_align:
          $ref: '#/components/schemas/WidgetTextAlign'
        title_size:
          description: Size of the title.
          type: string
        type:
          $ref: '#/components/schemas/ToplistWidgetDefinitionType'
      required:
        - requests
        - type
      type: object
    ToplistWidgetDefinitionType:
      default: toplist
      description: Type of the top list widget.
      enum:
        - toplist
      example: toplist
      type: string
      x-enum-varnames:
        - TOPLIST
    ToplistWidgetRequest:
      description: Updated top list widget.
      properties:
        apm_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        audit_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        conditional_formats:
          description: List of conditional formats.
          example:
            - comparator: '>='
              palette: blue
              value: 1.0
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          minItems: 1
          type: array
        event_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        formulas:
          description: List of formulas that operate on queries. **This feature is
            currently in beta.**
          items:
            $ref: '#/components/schemas/WidgetFormula'
          type: array
        log_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        network_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        process_query:
          $ref: '#/components/schemas/ProcessQueryDefinition'
        profile_metrics_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        q:
          description: Widget query.
          type: string
        queries:
          description: List of queries that can be returned directly or used in formulas.
            **This feature is currently in beta.**
          items:
            $ref: '#/components/schemas/FormulaAndFunctionQueryDefinition'
          type: array
        response_format:
          $ref: '#/components/schemas/FormulaAndFunctionResponseFormat'
        rum_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        security_query:
          $ref: '#/components/schemas/LogQueryDefinition'
        style:
          $ref: '#/components/schemas/WidgetRequestStyle'
      type: object
    TreeMapColorBy:
      default: user
      description: The attribute used to determine color in the widget.
      enum:
        - user
      example: user
      type: string
      x-enum-varnames:
        - USER
    TreeMapGroupBy:
      description: The attribute used to group elements in the widget.
      enum:
        - user
        - family
        - process
      example: user
      type: string
      x-enum-varnames:
        - USER
        - FAMILY
        - PROCESS
    TreeMapSizeBy:
      description: The attribute used to determine size in the widget.
      enum:
        - pct_cpu
        - pct_mem
      example: pct_cpu
      type: string
      x-enum-varnames:
        - PCT_CPU
        - PCT_MEM
    TreeMapWidgetDefinition:
      description: The treemap visualization found on the Host Dashboards comes from
        the output of `ps auxww`. This is not continuously run on your hosts. Instead,
        it’s run once on Agent start/restart. The treemap is only supported for process
        data on a single host dashboard — this may not be reused in other dashboards
        or for other metrics.
      properties:
        color_by:
          $ref: '#/components/schemas/TreeMapColorBy'
        group_by:
          $ref: '#/components/schemas/TreeMapGroupBy'
        requests:
          description: List of top list widget requests.
          example:
            - q: system.load.1
          items:
            $ref: '#/components/schemas/TreeMapWidgetRequest'
          maxItems: 1
          minItems: 1
          type: array
        size_by:
          $ref: '#/components/schemas/TreeMapSizeBy'
        title:
          description: Title of your widget.
          type: string
        type:
          $ref: '#/components/schemas/TreeMapWidgetDefinitionType'
      required:
        - color_by
        - group_by
        - requests
        - size_by
        - type
      type: object
    TreeMapWidgetDefinitionType:
      default: treemap
      description: Type of the treemap widget.
      enum:
        - treemap
      example: treemap
      type: string
      x-enum-varnames:
        - TREEMAP
    TreeMapWidgetRequest:
      description: An updated treemap widget.
      properties:
        q:
          description: The widget metrics query.
          type: string
      type: object
    UsageAnalyzedLogsHour:
      description: The number of analyzed logs for each hour for a given organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        analyzed_logs: 0
      properties:
        analyzed_logs:
          description: Contains the number of analyzed logs.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageAnalyzedLogsResponse:
      description: A response containing the number of analyzed logs for each hour
        for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            analyzed_logs: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            analyzed_logs: 0
      properties:
        usage:
          description: Get hourly usage for analyzed logs.
          items:
            $ref: '#/components/schemas/UsageAnalyzedLogsHour'
          type: array
      type: object
    UsageAttributionAggregates:
      description: An array of available aggregates.
      items:
        $ref: '#/components/schemas/UsageAttributionAggregatesBody'
      type: array
    UsageAttributionAggregatesBody:
      description: The object containing the aggregates.
      example:
        agg_type: sum
        field: custom_timeseries_usage
        value: 0.8008281904610115
      properties:
        agg_type:
          description: The aggregate type.
          example: sum
          type: string
        field:
          description: The field.
          example: custom_timeseries_usage
          type: string
        value:
          description: The value for a given field.
          format: double
          type: number
      type: object
    UsageAttributionBody:
      description: Usage Summary by tag for a given organization.
      example:
        month: 2000-01-23T04:56:07.000+00:00
        updated_at: updated_at
        values:
          cspm_host_percentage: 1.0246457001441578
          cspm_container_percentage: 7.386281948385884
          browser_percentage: 9.301444243932576
          profiled_hosts_percentage: 6.704019297950036
          infra_host_percentage: 9.369310271410669
          cspm_host_usage: 1.4894159098541704
          apm_host_usage: 7.061401241503109
          cspm_container_usage: 1.2315135367772556
          lambda_invocations_usage: 3.5571952270680973
          profiled_hosts_usage: 3.353193347011243
          apm_host_percentage: 2.3021358869347655
          cws_host_usage: 9.965781217890562
          api_usage: 5.637376656633329
          custom_timeseries_usage: 7.457744773683766
          profiled_containers_percentage: 6.878052220127876
          cws_container_usage: 4.965218492984954
          snmp_usage: 7.143538047012306
          browser_usage: 3.616076749251911
          infra_host_usage: 6.683562403749608
          lambda_functions_usage: 9.018348186070783
          custom_timeseries_percentage: 6.84685269835264
          cws_host_percentage: 5.025004791520295
          profiled_containers_usage: 5.944895607614016
          lambda_usage: 1.284659006116532
          npm_host_percentage: 2.8841621266687802
          snmp_percentage: 3.0937452626664474
          lambda_functions_percentage: 8.762042012749001
          lambda_invocations_percentage: 6.438423552598547
          api_percentage: 5.962133916683182
          container_usage: 4.145608029883936
          cws_container_percentage: 1.1730742509559433
          lambda_percentage: 6.965117697638846
          npm_host_usage: 6.778324963048013
          container_percentage: 2.027123023002322
        tag_config_source: tag_config_source
        org_name: org_name
        public_id: public_id
        tags:
          key:
            - datadog-integrations-lab
            - datadog-integrations-lab
      properties:
        month:
          description: 'Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM].'
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        tag_config_source:
          description: The source of the usage attribution tag configuration and the
            selected tags in the format `<source_org_name>:<selected tag 1>-<selected
            tag 2>-<selected tag 3>`.
          type: string
        tags:
          additionalProperties:
            description: A list of tag values.
            items:
              description: A given tag in a list.
              example: datadog-integrations-lab
              type: string
            type: array
          description: Usage Summary by tag name.
          type: object
        updated_at:
          description: Shows the the most recent hour in the current months for all
            organizations for which all usages were calculated.
          type: string
        values:
          $ref: '#/components/schemas/UsageAttributionValues'
      type: object
    UsageAttributionMetadata:
      description: The object containing document metadata.
      example:
        pagination:
          total_number_of_records: 1
          next_record_id: next_record_id
          limit: 6
        aggregates:
          - agg_type: sum
            field: custom_timeseries_usage
            value: 0.8008281904610115
          - agg_type: sum
            field: custom_timeseries_usage
            value: 0.8008281904610115
      properties:
        aggregates:
          description: An array of available aggregates.
          items:
            $ref: '#/components/schemas/UsageAttributionAggregatesBody'
          type: array
        pagination:
          $ref: '#/components/schemas/UsageAttributionPagination'
      type: object
    UsageAttributionPagination:
      description: The metadata for the current pagination.
      example:
        total_number_of_records: 1
        next_record_id: next_record_id
        limit: 6
      properties:
        limit:
          description: Maximum amount of records to be returned.
          format: int64
          type: integer
        next_record_id:
          description: The cursor to use to get the next results, if any. To make
            the next request, use the same parameters with the addition of this next_record_id.
          type: string
        total_number_of_records:
          description: Total number of records. (deprecated after May 1st, 2021)
          format: int64
          type: integer
      type: object
    UsageAttributionResponse:
      description: Response containing the Usage Summary by tag(s).
      example:
        metadata:
          pagination:
            total_number_of_records: 1
            next_record_id: next_record_id
            limit: 6
          aggregates:
            - agg_type: sum
              field: custom_timeseries_usage
              value: 0.8008281904610115
            - agg_type: sum
              field: custom_timeseries_usage
              value: 0.8008281904610115
        usage:
          - month: 2000-01-23T04:56:07.000+00:00
            updated_at: updated_at
            values:
              cspm_host_percentage: 1.0246457001441578
              cspm_container_percentage: 7.386281948385884
              browser_percentage: 9.301444243932576
              profiled_hosts_percentage: 6.704019297950036
              infra_host_percentage: 9.369310271410669
              cspm_host_usage: 1.4894159098541704
              apm_host_usage: 7.061401241503109
              cspm_container_usage: 1.2315135367772556
              lambda_invocations_usage: 3.5571952270680973
              profiled_hosts_usage: 3.353193347011243
              apm_host_percentage: 2.3021358869347655
              cws_host_usage: 9.965781217890562
              api_usage: 5.637376656633329
              custom_timeseries_usage: 7.457744773683766
              profiled_containers_percentage: 6.878052220127876
              cws_container_usage: 4.965218492984954
              snmp_usage: 7.143538047012306
              browser_usage: 3.616076749251911
              infra_host_usage: 6.683562403749608
              lambda_functions_usage: 9.018348186070783
              custom_timeseries_percentage: 6.84685269835264
              cws_host_percentage: 5.025004791520295
              profiled_containers_usage: 5.944895607614016
              lambda_usage: 1.284659006116532
              npm_host_percentage: 2.8841621266687802
              snmp_percentage: 3.0937452626664474
              lambda_functions_percentage: 8.762042012749001
              lambda_invocations_percentage: 6.438423552598547
              api_percentage: 5.962133916683182
              container_usage: 4.145608029883936
              cws_container_percentage: 1.1730742509559433
              lambda_percentage: 6.965117697638846
              npm_host_usage: 6.778324963048013
              container_percentage: 2.027123023002322
            tag_config_source: tag_config_source
            org_name: org_name
            public_id: public_id
            tags:
              key:
                - datadog-integrations-lab
                - datadog-integrations-lab
          - month: 2000-01-23T04:56:07.000+00:00
            updated_at: updated_at
            values:
              cspm_host_percentage: 1.0246457001441578
              cspm_container_percentage: 7.386281948385884
              browser_percentage: 9.301444243932576
              profiled_hosts_percentage: 6.704019297950036
              infra_host_percentage: 9.369310271410669
              cspm_host_usage: 1.4894159098541704
              apm_host_usage: 7.061401241503109
              cspm_container_usage: 1.2315135367772556
              lambda_invocations_usage: 3.5571952270680973
              profiled_hosts_usage: 3.353193347011243
              apm_host_percentage: 2.3021358869347655
              cws_host_usage: 9.965781217890562
              api_usage: 5.637376656633329
              custom_timeseries_usage: 7.457744773683766
              profiled_containers_percentage: 6.878052220127876
              cws_container_usage: 4.965218492984954
              snmp_usage: 7.143538047012306
              browser_usage: 3.616076749251911
              infra_host_usage: 6.683562403749608
              lambda_functions_usage: 9.018348186070783
              custom_timeseries_percentage: 6.84685269835264
              cws_host_percentage: 5.025004791520295
              profiled_containers_usage: 5.944895607614016
              lambda_usage: 1.284659006116532
              npm_host_percentage: 2.8841621266687802
              snmp_percentage: 3.0937452626664474
              lambda_functions_percentage: 8.762042012749001
              lambda_invocations_percentage: 6.438423552598547
              api_percentage: 5.962133916683182
              container_usage: 4.145608029883936
              cws_container_percentage: 1.1730742509559433
              lambda_percentage: 6.965117697638846
              npm_host_usage: 6.778324963048013
              container_percentage: 2.027123023002322
            tag_config_source: tag_config_source
            org_name: org_name
            public_id: public_id
            tags:
              key:
                - datadog-integrations-lab
                - datadog-integrations-lab
      properties:
        metadata:
          $ref: '#/components/schemas/UsageAttributionMetadata'
        usage:
          description: Get Usage Summary by tag(s).
          items:
            $ref: '#/components/schemas/UsageAttributionBody'
          type: array
      type: object
    UsageAttributionSort:
      default: custom_timeseries_usage
      description: The field to sort by.
      enum:
        - api_percentage
        - snmp_usage
        - apm_host_usage
        - api_usage
        - container_usage
        - custom_timeseries_percentage
        - container_percentage
        - apm_host_percentage
        - npm_host_percentage
        - browser_percentage
        - browser_usage
        - infra_host_percentage
        - snmp_percentage
        - npm_host_usage
        - infra_host_usage
        - custom_timeseries_usage
        - lambda_functions_usage
        - lambda_functions_percentage
        - lambda_invocations_usage
        - lambda_invocations_percentage
        - lambda_usage
        - lambda_percentage
      type: string
      x-enum-varnames:
        - API_PERCENTAGE
        - SNMP_USAGE
        - APM_HOST_USAGE
        - API_USAGE
        - CONTAINER_USAGE
        - CUSTOM_TIMESERIES_PERCENTAGE
        - CONTAINER_PERCENTAGE
        - APM_HOST_PERCENTAGE
        - NPM_HOST_PERCENTAGE
        - BROWSER_PERCENTAGE
        - BROWSER_USAGE
        - INFRA_HOST_PERCENTAGE
        - SNMP_PERCENTAGE
        - NPM_HOST_USAGE
        - INFRA_HOST_USAGE
        - CUSTOM_TIMESERIES_USAGE
        - LAMBDA_FUNCTIONS_USAGE
        - LAMBDA_FUNCTIONS_PERCENTAGE
        - LAMBDA_INVOCATIONS_USAGE
        - LAMBDA_INVOCATIONS_PERCENTAGE
        - LAMBDA_USAGE
        - LAMBDA_PERCENTAGE
    UsageAttributionSupportedMetrics:
      description: Supported fields for usage attribution requests (valid requests
        contain one or more metrics, or `*` for all).
      enum:
        - custom_timeseries_usage
        - container_usage
        - snmp_percentage
        - apm_host_usage
        - browser_usage
        - npm_host_percentage
        - infra_host_usage
        - custom_timeseries_percentage
        - container_percentage
        - lambda_usage
        - api_usage
        - apm_host_percentage
        - infra_host_percentage
        - snmp_usage
        - browser_percentage
        - api_percentage
        - lambda_percentage
        - npm_host_usage
        - lambda_functions_usage
        - lambda_functions_percentage
        - lambda_invocations_usage
        - lambda_invocations_percentage
        - fargate_usage
        - fargate_percentage
        - profiled_host_usage
        - profiled_host_percentage
        - profiled_container_usage
        - profiled_container_percentage
        - '*'
      type: string
      x-enum-varnames:
        - CUSTOM_TIMESERIES_USAGE
        - CONTAINER_USAGE
        - SNMP_PERCENTAGE
        - APM_HOST_USAGE
        - BROWSER_USAGE
        - NPM_HOST_PERCENTAGE
        - INFRA_HOST_USAGE
        - CUSTOM_TIMESERIES_PERCENTAGE
        - CONTAINER_PERCENTAGE
        - LAMBDA_USAGE
        - API_USAGE
        - APM_HOST_PERCENTAGE
        - INFRA_HOST_PERCENTAGE
        - SNMP_USAGE
        - BROWSER_PERCENTAGE
        - API_PERCENTAGE
        - LAMBDA_PERCENTAGE
        - NPM_HOST_USAGE
        - LAMBDA_FUNCTIONS_USAGE
        - LAMBDA_FUNCTIONS_PERCENTAGE
        - LAMBDA_INVOCATIONS_USAGE
        - LAMBDA_INVOCATIONS_PERCENTAGE
        - FARGATE_USAGE
        - FARGATE_PERCENTAGE
        - PROFILED_HOST_USAGE
        - PROFILED_HOST_PERCENTAGE
        - PROFILED_CONTAINER_USAGE
        - PROFILED_CONTAINER_PERCENTAGE
        - ALL
    UsageAttributionTagNames:
      additionalProperties:
        description: A list of tag values.
        items:
          description: A given tag in a list.
          example: datadog-integrations-lab
          type: string
        type: array
      description: Usage Summary by tag name.
      type: object
    UsageAttributionValues:
      description: Fields in Usage Summary by tag(s).
      example:
        cspm_host_percentage: 1.0246457001441578
        cspm_container_percentage: 7.386281948385884
        browser_percentage: 9.301444243932576
        profiled_hosts_percentage: 6.704019297950036
        infra_host_percentage: 9.369310271410669
        cspm_host_usage: 1.4894159098541704
        apm_host_usage: 7.061401241503109
        cspm_container_usage: 1.2315135367772556
        lambda_invocations_usage: 3.5571952270680973
        profiled_hosts_usage: 3.353193347011243
        apm_host_percentage: 2.3021358869347655
        cws_host_usage: 9.965781217890562
        api_usage: 5.637376656633329
        custom_timeseries_usage: 7.457744773683766
        profiled_containers_percentage: 6.878052220127876
        cws_container_usage: 4.965218492984954
        snmp_usage: 7.143538047012306
        browser_usage: 3.616076749251911
        infra_host_usage: 6.683562403749608
        lambda_functions_usage: 9.018348186070783
        custom_timeseries_percentage: 6.84685269835264
        cws_host_percentage: 5.025004791520295
        profiled_containers_usage: 5.944895607614016
        lambda_usage: 1.284659006116532
        npm_host_percentage: 2.8841621266687802
        snmp_percentage: 3.0937452626664474
        lambda_functions_percentage: 8.762042012749001
        lambda_invocations_percentage: 6.438423552598547
        api_percentage: 5.962133916683182
        container_usage: 4.145608029883936
        cws_container_percentage: 1.1730742509559433
        lambda_percentage: 6.965117697638846
        npm_host_usage: 6.778324963048013
        container_percentage: 2.027123023002322
      properties:
        api_percentage:
          description: The percentage of synthetic API test usage by tag(s).
          format: double
          type: number
        api_usage:
          description: The synthetic API test usage by tag(s).
          format: double
          type: number
        apm_host_percentage:
          description: The percentage of APM host usage by tag(s).
          format: double
          type: number
        apm_host_usage:
          description: The APM host usage by tag(s).
          format: double
          type: number
        browser_percentage:
          description: The percentage of synthetic browser test usage by tag(s).
          format: double
          type: number
        browser_usage:
          description: The synthetic browser test usage by tag(s).
          format: double
          type: number
        container_percentage:
          description: The percentage of container usage by tag(s).
          format: double
          type: number
        container_usage:
          description: The container usage by tag(s).
          format: double
          type: number
        cspm_container_percentage:
          description: The percentage of Cloud Security Posture Management container
            usage by tag(s)
          format: double
          type: number
        cspm_container_usage:
          description: The Cloud Security Posture Management container usage by tag(s)
          format: double
          type: number
        cspm_host_percentage:
          description: The percentage of Cloud Security Posture Management host usage
            by tag(s)
          format: double
          type: number
        cspm_host_usage:
          description: The Cloud Security Posture Management host usage by tag(s)
          format: double
          type: number
        custom_timeseries_percentage:
          description: The percentage of custom metrics usage by tag(s).
          format: double
          type: number
        custom_timeseries_usage:
          description: The custom metrics usage by tag(s).
          format: double
          type: number
        cws_container_percentage:
          description: The percentage of Cloud Workload Security container usage by
            tag(s)
          format: double
          type: number
        cws_container_usage:
          description: The Cloud Workload Security container usage by tag(s)
          format: double
          type: number
        cws_host_percentage:
          description: The percentage of Cloud Workload Security host usage by tag(s)
          format: double
          type: number
        cws_host_usage:
          description: The Cloud Workload Security host usage by tag(s)
          format: double
          type: number
        infra_host_percentage:
          description: The percentage of infrastructure host usage by tag(s).
          format: double
          type: number
        infra_host_usage:
          description: The infrastructure host usage by tag(s).
          format: double
          type: number
        lambda_functions_percentage:
          description: The percentage of Lambda function usage by tag(s).
          format: double
          type: number
        lambda_functions_usage:
          description: The Lambda function usage by tag(s).
          format: double
          type: number
        lambda_invocations_percentage:
          description: The percentage of Lambda invocation usage by tag(s).
          format: double
          type: number
        lambda_invocations_usage:
          description: The Lambda invocation usage by tag(s).
          format: double
          type: number
        lambda_percentage:
          description: |-
            The percentage of Lambda function usage by tag(s).

            **Note** this field is deprecated. Use lambda_functions_percentage instead.
          format: double
          type: number
        lambda_usage:
          description: |-
            The Lambda function usage by tag(s).

            **Note** this field is deprecated. Use lambda_functions_usage instead.
          format: double
          type: number
        npm_host_percentage:
          description: The percentage of network host usage by tag(s).
          format: double
          type: number
        npm_host_usage:
          description: The network host usage by tag(s).
          format: double
          type: number
        profiled_containers_percentage:
          description: The percentage of profiled containers usage by tag(s).
          format: double
          type: number
        profiled_containers_usage:
          description: The profiled container usage by tag(s).
          format: double
          type: number
        profiled_hosts_percentage:
          description: The percentage of profiled hosts usage by tag(s).
          format: double
          type: number
        profiled_hosts_usage:
          description: The profiled host usage by tag(s).
          format: double
          type: number
        snmp_percentage:
          description: The percentage of network device usage by tag(s).
          format: double
          type: number
        snmp_usage:
          description: The network device usage by tag(s).
          format: double
          type: number
      type: object
    UsageAuditLogsHour:
      description: Audit logs usage for a given organization for a given hour.
      example:
        lines_indexed: 0
        hour: 2000-01-23T04:56:07.000+00:00
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        lines_indexed:
          description: The total number of audit logs lines indexed during a given
            hour.
          format: int64
          type: integer
      type: object
    UsageAuditLogsResponse:
      description: Response containing the audit logs usage for each hour for a given
        organization.
      example:
        usage:
          - lines_indexed: 0
            hour: 2000-01-23T04:56:07.000+00:00
          - lines_indexed: 0
            hour: 2000-01-23T04:56:07.000+00:00
      properties:
        usage:
          description: Get hourly usage for audit logs.
          items:
            $ref: '#/components/schemas/UsageAuditLogsHour'
          type: array
      type: object
    UsageBillableSummaryBody:
      description: Response with properties for each aggregated usage type.
      example:
        account_billable_usage: 1
        last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
        percentage_in_account: 2.3021358869347655
        elapsed_usage_hours: 5
        first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
        org_billable_usage: 5
        usage_unit: usage_unit
      properties:
        account_billable_usage:
          description: The total account usage.
          format: int64
          type: integer
        elapsed_usage_hours:
          description: Elapsed usage hours for some billable product.
          format: int64
          type: integer
        first_billable_usage_hour:
          description: The first billable hour for the org.
          format: date-time
          type: string
        last_billable_usage_hour:
          description: The last billable hour for the org.
          format: date-time
          type: string
        org_billable_usage:
          description: The number of units used within the billable timeframe.
          format: int64
          type: integer
        percentage_in_account:
          description: The percentage of account usage the org represents.
          format: double
          type: number
        usage_unit:
          description: Units pertaining to the usage.
          type: string
      type: object
    UsageBillableSummaryHour:
      description: Response with monthly summary of data billed by Datadog.
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        num_orgs: 0
        ratio_in_month: 6
        usage:
          npm_host_top99p:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          synthetics_api_tests_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          npm_flow_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          apm_trace_search_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_180day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_3day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          rum_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          lambda_function_average:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          siem_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          prof_container_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          apm_host_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          network_device_top99p:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_15day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_45day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_30day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          npm_host_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_custom_retention_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          prof_host_top99p:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          iot_top99p:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          synthetics_browser_checks_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          apm_host_top99p:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_7day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_60day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          timeseries_average:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          infra_host_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          infra_host_top99p:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          infra_container_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          serverless_invocation_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_90day_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_ingested_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          fargate_container_average:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
          logs_indexed_sum:
            account_billable_usage: 1
            last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            percentage_in_account: 2.3021358869347655
            elapsed_usage_hours: 5
            first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
            org_billable_usage: 5
            usage_unit: usage_unit
        billing_plan: billing_plan
        org_name: org_name
        public_id: public_id
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        billing_plan:
          description: The billing plan.
          type: string
        end_date:
          description: Shows the last date of usage.
          format: date-time
          type: string
        num_orgs:
          description: The number of organizations.
          format: int64
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        ratio_in_month:
          description: Shows usage aggregation for a billing period.
          format: int64
          type: integer
        start_date:
          description: Shows the first date of usage.
          format: date-time
          type: string
        usage:
          $ref: '#/components/schemas/UsageBillableSummaryKeys'
      type: object
    UsageBillableSummaryKeys:
      description: Response with aggregated usage types.
      example:
        npm_host_top99p:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        synthetics_api_tests_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        npm_flow_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        apm_trace_search_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_180day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_3day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        rum_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        lambda_function_average:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        siem_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        prof_container_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        apm_host_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        network_device_top99p:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_15day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_45day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_30day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        npm_host_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_custom_retention_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        prof_host_top99p:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        iot_top99p:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        synthetics_browser_checks_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        apm_host_top99p:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_7day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_60day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        timeseries_average:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        infra_host_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        infra_host_top99p:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        infra_container_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        serverless_invocation_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_90day_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_ingested_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        fargate_container_average:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
        logs_indexed_sum:
          account_billable_usage: 1
          last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          percentage_in_account: 2.3021358869347655
          elapsed_usage_hours: 5
          first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
          org_billable_usage: 5
          usage_unit: usage_unit
      properties:
        apm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_trace_search_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        iot_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        lambda_function_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_15day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_180day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_30day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_3day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_45day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_60day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_7day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_90day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_custom_retention_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_ingested_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        network_device_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_flow_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_invocation_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        siem_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_api_tests_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_browser_checks_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        timeseries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
      type: object
    UsageBillableSummaryResponse:
      description: Response with monthly summary of data billed by Datadog.
      example:
        usage:
          - end_date: 2000-01-23T04:56:07.000+00:00
            num_orgs: 0
            ratio_in_month: 6
            usage:
              npm_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              synthetics_api_tests_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              npm_flow_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              apm_trace_search_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_180day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_3day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              rum_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              lambda_function_average:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              siem_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              prof_container_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              apm_host_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              network_device_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_15day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_45day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_30day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              npm_host_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_custom_retention_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              prof_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              iot_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              synthetics_browser_checks_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              apm_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_7day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_60day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              timeseries_average:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              infra_host_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              infra_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              infra_container_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              serverless_invocation_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_90day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_ingested_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              fargate_container_average:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
            billing_plan: billing_plan
            org_name: org_name
            public_id: public_id
            start_date: 2000-01-23T04:56:07.000+00:00
          - end_date: 2000-01-23T04:56:07.000+00:00
            num_orgs: 0
            ratio_in_month: 6
            usage:
              npm_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              synthetics_api_tests_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              npm_flow_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              apm_trace_search_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_180day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_3day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              rum_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              lambda_function_average:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              siem_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              prof_container_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              apm_host_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              network_device_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_15day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_45day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_30day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              npm_host_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_custom_retention_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              prof_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              iot_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              synthetics_browser_checks_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              apm_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_7day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_60day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              timeseries_average:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              infra_host_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              infra_host_top99p:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              infra_container_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              serverless_invocation_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_90day_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_ingested_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              fargate_container_average:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
              logs_indexed_sum:
                account_billable_usage: 1
                last_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                percentage_in_account: 2.3021358869347655
                elapsed_usage_hours: 5
                first_billable_usage_hour: 2000-01-23T04:56:07.000+00:00
                org_billable_usage: 5
                usage_unit: usage_unit
            billing_plan: billing_plan
            org_name: org_name
            public_id: public_id
            start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        usage:
          description: An array of objects regarding usage of billable summary.
          items:
            $ref: '#/components/schemas/UsageBillableSummaryHour'
          type: array
      type: object
    UsageCWSHour:
      description: Cloud Workload Security usage for a given organization for a given
        hour.
      example:
        cws_host_count: 6
        cws_container_count: 0
        hour: 2000-01-23T04:56:07.000+00:00
      properties:
        cws_container_count:
          description: The total number of Cloud Workload Security container hours
            from the start of the given hour’s month until the given hour.
          format: int64
          type: integer
        cws_host_count:
          description: The total number of Cloud Workload Security host hours from
            the start of the given hour’s month until the given hour.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageCWSResponse:
      description: Response containing the Cloud Workload Security usage for each
        hour for a given organization.
      example:
        usage:
          - cws_host_count: 6
            cws_container_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
          - cws_host_count: 6
            cws_container_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
      properties:
        usage:
          description: Get hourly usage for Cloud Workload Security.
          items:
            $ref: '#/components/schemas/UsageCWSHour'
          type: array
      type: object
    UsageCloudSecurityPostureManagementHour:
      description: Cloud Security Posture Management usage for a given organization
        for a given hour.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        host_count: 6
        container_count: 0
      properties:
        container_count:
          description: The total number of Cloud Security Posture Management containers
            during a given hour.
          format: int64
          type: integer
        host_count:
          description: The total number of Cloud Security Posture Management hosts
            during a given hour.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageCloudSecurityPostureManagementResponse:
      description: The response containing the Cloud Security Posture Management usage
        for each hour for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            host_count: 6
            container_count: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            host_count: 6
            container_count: 0
      properties:
        usage:
          description: Get hourly usage for Cloud Security Posture Management.
          items:
            $ref: '#/components/schemas/UsageCloudSecurityPostureManagementHour'
          type: array
      type: object
    UsageCustomReportsAttributes:
      description: The response containing attributes for custom reports.
      example:
        end_date: end_date
        size: 0
        computed_on: computed_on
        start_date: start_date
        tags:
          - env
          - env
      properties:
        computed_on:
          description: The date the specified custom report was computed.
          type: string
        end_date:
          description: The ending date of custom report.
          type: string
        size:
          description: size
          format: int64
          type: integer
        start_date:
          description: The starting date of custom report.
          type: string
        tags:
          description: A list of tags to apply to custom reports.
          items:
            description: A given tag in a list.
            example: env
            type: string
          type: array
      type: object
    UsageCustomReportsData:
      description: The response containing the date and type for custom reports.
      example:
        attributes:
          end_date: end_date
          size: 0
          computed_on: computed_on
          start_date: start_date
          tags:
            - env
            - env
        id: id
        type: reports
      properties:
        attributes:
          $ref: '#/components/schemas/UsageCustomReportsAttributes'
        id:
          description: The date for specified custom reports.
          type: string
        type:
          $ref: '#/components/schemas/UsageReportsType'
      type: object
    UsageCustomReportsMeta:
      description: The object containing document metadata.
      example:
        page:
          total_count: 6
      properties:
        page:
          $ref: '#/components/schemas/UsageCustomReportsPage'
      type: object
    UsageCustomReportsPage:
      description: The object containing page total count.
      example:
        total_count: 6
      properties:
        total_count:
          description: Total page count.
          format: int64
          type: integer
      type: object
    UsageCustomReportsResponse:
      description: Response containing available custom reports.
      example:
        data:
          - attributes:
              end_date: end_date
              size: 0
              computed_on: computed_on
              start_date: start_date
              tags:
                - env
                - env
            id: id
            type: reports
          - attributes:
              end_date: end_date
              size: 0
              computed_on: computed_on
              start_date: start_date
              tags:
                - env
                - env
            id: id
            type: reports
        meta:
          page:
            total_count: 6
      properties:
        data:
          description: An array of available custom reports.
          items:
            $ref: '#/components/schemas/UsageCustomReportsData'
          type: array
        meta:
          $ref: '#/components/schemas/UsageCustomReportsMeta'
      type: object
    UsageFargateHour:
      description: Number of Fargate tasks run and hourly usage.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        tasks_count: 0
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        tasks_count:
          description: The number of Fargate tasks run.
          format: int64
          type: integer
      type: object
    UsageFargateResponse:
      description: Response containing the number of Fargate tasks run and hourly
        usage.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            tasks_count: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            tasks_count: 0
      properties:
        usage:
          description: Array with the number of hourly Fargate tasks recorded for
            a given organization.
          items:
            $ref: '#/components/schemas/UsageFargateHour'
          type: array
      type: object
    UsageHostHour:
      description: Number of hosts/containers recorded for each hour for a given organization.
      example:
        infra_azure_app_service: 4
        apm_host_count: 5
        agent_host_count: 0
        aws_host_count: 5
        apm_azure_app_service_host_count: 1
        host_count: 2
        azure_host_count: 2
        container_count: 7
        heroku_host_count: 3
        hour: 2000-01-23T04:56:07.000+00:00
        alibaba_host_count: 6
        opentelemetry_host_count: 7
        vsphere_host_count: 1
        gcp_host_count: 9
      properties:
        agent_host_count:
          description: |-
            Contains the total number of infrastructure hosts reporting
            during a given hour that were running the Datadog Agent.
          format: int64
          type: integer
        alibaba_host_count:
          description: |-
            Contains the total number of hosts that reported via Alibaba integration
            (and were NOT running the Datadog Agent).
          format: int64
          type: integer
        apm_azure_app_service_host_count:
          description: Contains the total number of Azure App Services hosts using
            APM.
          format: int64
          type: integer
        apm_host_count:
          description: |-
            Shows the total number of hosts using APM during the hour,
            these are counted as billable (except during trial periods).
          format: int64
          type: integer
        aws_host_count:
          description: |-
            Contains the total number of hosts that reported via the AWS integration
            (and were NOT running the Datadog Agent).
          format: int64
          type: integer
        azure_host_count:
          description: |-
            Contains the total number of hosts that reported via Azure integration
            (and were NOT running the Datadog Agent).
          format: int64
          type: integer
        container_count:
          description: Shows the total number of containers reported by the Docker
            integration during the hour.
          format: int64
          type: integer
        gcp_host_count:
          description: |-
            Contains the total number of hosts that reported via the Google Cloud integration
            (and were NOT running the Datadog Agent).
          format: int64
          type: integer
        heroku_host_count:
          description: Contains the total number of Heroku dynos reported by the Datadog
            Agent.
          format: int64
          type: integer
        host_count:
          description: |-
            Contains the total number of billable infrastructure hosts reporting during a given hour.
            This is the sum of `agent_host_count`, `aws_host_count`, and `gcp_host_count`.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        infra_azure_app_service:
          description: |-
            Contains the total number of hosts that reported via the Azure App Services integration
            (and were NOT running the Datadog Agent).
          format: int64
          type: integer
        opentelemetry_host_count:
          description: Contains the total number of hosts reported by Datadog exporter
            for the OpenTelemetry Collector.
          format: int64
          type: integer
        vsphere_host_count:
          description: |-
            Contains the total number of hosts that reported via vSphere integration
            (and were NOT running the Datadog Agent).
          format: int64
          type: integer
      type: object
    UsageHostsResponse:
      description: Host usage response.
      example:
        usage:
          - infra_azure_app_service: 4
            apm_host_count: 5
            agent_host_count: 0
            aws_host_count: 5
            apm_azure_app_service_host_count: 1
            host_count: 2
            azure_host_count: 2
            container_count: 7
            heroku_host_count: 3
            hour: 2000-01-23T04:56:07.000+00:00
            alibaba_host_count: 6
            opentelemetry_host_count: 7
            vsphere_host_count: 1
            gcp_host_count: 9
          - infra_azure_app_service: 4
            apm_host_count: 5
            agent_host_count: 0
            aws_host_count: 5
            apm_azure_app_service_host_count: 1
            host_count: 2
            azure_host_count: 2
            container_count: 7
            heroku_host_count: 3
            hour: 2000-01-23T04:56:07.000+00:00
            alibaba_host_count: 6
            opentelemetry_host_count: 7
            vsphere_host_count: 1
            gcp_host_count: 9
      properties:
        usage:
          description: An array of objects related to host usage.
          items:
            $ref: '#/components/schemas/UsageHostHour'
          type: array
      type: object
    UsageIncidentManagementHour:
      description: Incident management usage for a given organization for a given
        hour.
      example:
        monthly_active_users: 0
        hour: 2000-01-23T04:56:07.000+00:00
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        monthly_active_users:
          description: Contains the total number monthly active users from the start
            of the given hour's month until the given hour.
          format: int64
          type: integer
      type: object
    UsageIncidentManagementResponse:
      description: Response containing the incident management usage for each hour
        for a given organization.
      example:
        usage:
          - monthly_active_users: 0
            hour: 2000-01-23T04:56:07.000+00:00
          - monthly_active_users: 0
            hour: 2000-01-23T04:56:07.000+00:00
      properties:
        usage:
          description: Get hourly usage for incident management.
          items:
            $ref: '#/components/schemas/UsageIncidentManagementHour'
          type: array
      type: object
    UsageIndexedSpansHour:
      description: The hours of indexed spans usage.
      example:
        indexed_events_count: 0
        hour: 2000-01-23T04:56:07.000+00:00
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of spans indexed.
          format: int64
          type: integer
      type: object
    UsageIndexedSpansResponse:
      description: A response containing indexed spans usage.
      example:
        usage:
          - indexed_events_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
          - indexed_events_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
      properties:
        usage:
          description: Array with the number of hourly traces indexed for a given
            organization.
          items:
            $ref: '#/components/schemas/UsageIndexedSpansHour'
          type: array
      type: object
    UsageIngestedSpansHour:
      description: Ingested spans usage for a given organization for a given hour.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        ingested_events_bytes: 0
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        ingested_events_bytes:
          description: Contains the total number of bytes ingested during a given
            hour.
          format: int64
          type: integer
      type: object
    UsageIngestedSpansResponse:
      description: Response containing the ingested spans usage for each hour for
        a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            ingested_events_bytes: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            ingested_events_bytes: 0
      properties:
        usage:
          description: Get hourly usage for ingested spans.
          items:
            $ref: '#/components/schemas/UsageIngestedSpansHour'
          type: array
      type: object
    UsageIoTHour:
      description: IoT usage for a given organization for a given hour.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        iot_device_count: 0
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        iot_device_count:
          description: The total number of IoT devices during a given hour.
          format: int64
          type: integer
      type: object
    UsageIoTResponse:
      description: Response containing the IoT usage for each hour for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            iot_device_count: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            iot_device_count: 0
      properties:
        usage:
          description: Get hourly usage for IoT.
          items:
            $ref: '#/components/schemas/UsageIoTHour'
          type: array
      type: object
    UsageLambdaHour:
      description: |-
        Number of lambda functions and sum of the invocations of all lambda functions
        for each hour for a given organization.
      example:
        func_count: 0
        hour: 2000-01-23T04:56:07.000+00:00
        invocations_sum: 6
      properties:
        func_count:
          description: Contains the number of different functions for each region
            and AWS account.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        invocations_sum:
          description: Contains the sum of invocations of all functions.
          format: int64
          type: integer
      type: object
    UsageLambdaResponse:
      description: |-
        Response containing the number of lambda functions and sum of the invocations of all lambda functions
        for each hour for a given organization.
      example:
        usage:
          - func_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
            invocations_sum: 6
          - func_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
            invocations_sum: 6
      properties:
        usage:
          description: Get hourly usage for Lambda.
          items:
            $ref: '#/components/schemas/UsageLambdaHour'
          type: array
      type: object
    UsageLogsByIndexHour:
      description: Number of indexed logs for each hour and index for a given organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        event_count: 0
        index_id: index_id
        index_name: index_name
        retention: 6
      properties:
        event_count:
          description: The total number of indexed logs for the queried hour.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        index_id:
          description: The index ID for this usage.
          type: string
        index_name:
          description: The user specified name for this index ID.
          type: string
        retention:
          description: The retention period (in days) for this index ID.
          format: int64
          type: integer
      type: object
    UsageLogsByIndexResponse:
      description: Response containing the number of indexed logs for each hour and
        index for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            event_count: 0
            index_id: index_id
            index_name: index_name
            retention: 6
          - hour: 2000-01-23T04:56:07.000+00:00
            event_count: 0
            index_id: index_id
            index_name: index_name
            retention: 6
      properties:
        usage:
          description: An array of objects regarding hourly usage of logs by index
            response.
          items:
            $ref: '#/components/schemas/UsageLogsByIndexHour'
          type: array
      type: object
    UsageLogsByRetentionHour:
      description: The number of indexed logs for each hour for a given organization
        broken down by retention period.
      example:
        indexed_events_count: 0
        live_indexed_events_count: 6
        rehydrated_indexed_events_count: 1
        retention: retention
      properties:
        indexed_events_count:
          description: Total logs indexed with this retention period during a given
            hour.
          format: int64
          type: integer
        live_indexed_events_count:
          description: Live logs indexed with this retention period during a given
            hour.
          format: int64
          type: integer
        rehydrated_indexed_events_count:
          description: Rehydrated logs indexed with this retention period during a
            given hour.
          format: int64
          type: integer
        retention:
          description: The retention period in days or "custom" for all custom retention
            usage.
          type: string
      type: object
    UsageLogsByRetentionResponse:
      description: Response containing the indexed logs usage broken down by retention
        period for an organization during a given hour.
      example:
        usage:
          - indexed_events_count: 0
            live_indexed_events_count: 6
            rehydrated_indexed_events_count: 1
            retention: retention
          - indexed_events_count: 0
            live_indexed_events_count: 6
            rehydrated_indexed_events_count: 1
            retention: retention
      properties:
        usage:
          description: Get hourly usage for indexed logs by retention period.
          items:
            $ref: '#/components/schemas/UsageLogsByRetentionHour'
          type: array
      type: object
    UsageLogsHour:
      description: Hour usage for logs.
      example:
        indexed_events_count: 6
        logs_live_ingested_bytes: 5
        hour: 2000-01-23T04:56:07.000+00:00
        billable_ingested_bytes: 0
        logs_rehydrated_ingested_bytes: 7
        ingested_events_bytes: 1
        logs_rehydrated_indexed_count: 2
        logs_live_indexed_count: 5
      properties:
        billable_ingested_bytes:
          description: Contains the number of billable log bytes ingested.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of log events indexed.
          format: int64
          type: integer
        ingested_events_bytes:
          description: Contains the number of log bytes ingested.
          format: int64
          type: integer
        logs_live_indexed_count:
          description: Contains the number of live log events indexed (data available
            as of December 1, 2020).
          format: int64
          type: integer
        logs_live_ingested_bytes:
          description: Contains the number of live log bytes ingested (data available
            as of December 1, 2020).
          format: int64
          type: integer
        logs_rehydrated_indexed_count:
          description: Contains the number of rehydrated log events indexed (data
            available as of December 1, 2020).
          format: int64
          type: integer
        logs_rehydrated_ingested_bytes:
          description: Contains the number of rehydrated log bytes ingested (data
            available as of December 1, 2020).
          format: int64
          type: integer
      type: object
    UsageLogsResponse:
      description: Response containing the number of logs for each hour.
      example:
        usage:
          - indexed_events_count: 6
            logs_live_ingested_bytes: 5
            hour: 2000-01-23T04:56:07.000+00:00
            billable_ingested_bytes: 0
            logs_rehydrated_ingested_bytes: 7
            ingested_events_bytes: 1
            logs_rehydrated_indexed_count: 2
            logs_live_indexed_count: 5
          - indexed_events_count: 6
            logs_live_ingested_bytes: 5
            hour: 2000-01-23T04:56:07.000+00:00
            billable_ingested_bytes: 0
            logs_rehydrated_ingested_bytes: 7
            ingested_events_bytes: 1
            logs_rehydrated_indexed_count: 2
            logs_live_indexed_count: 5
      properties:
        usage:
          description: An array of objects regarding hourly usage of logs.
          items:
            $ref: '#/components/schemas/UsageLogsHour'
          type: array
      type: object
    UsageMetricCategory:
      description: Contains the metric category.
      enum:
        - standard
        - custom
      type: string
      x-enum-varnames:
        - STANDARD
        - CUSTOM
    UsageNetworkFlowsHour:
      description: Number of netflow events indexed for each hour for a given organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        indexed_event_count: 0
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_event_count:
          description: Contains the number of netflow events indexed.
          format: int64
          type: integer
      type: object
    UsageNetworkFlowsResponse:
      description: Response containing the number of netflow events indexed for each
        hour for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            indexed_event_count: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            indexed_event_count: 0
      properties:
        usage:
          description: Get hourly usage for Network Flows.
          items:
            $ref: '#/components/schemas/UsageNetworkFlowsHour'
          type: array
      type: object
    UsageNetworkHostsHour:
      description: Number of active NPM hosts for each hour for a given organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        host_count: 0
      properties:
        host_count:
          description: Contains the number of active NPM hosts.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageNetworkHostsResponse:
      description: Response containing the number of active NPM hosts for each hour
        for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            host_count: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            host_count: 0
      properties:
        usage:
          description: Get hourly usage for NPM hosts.
          items:
            $ref: '#/components/schemas/UsageNetworkHostsHour'
          type: array
      type: object
    UsageProfilingHour:
      description: The number of profiled hosts for each hour for a given organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        host_count: 6
        avg_container_agent_count: 0
      properties:
        avg_container_agent_count:
          description: Get average number of container agents for that hour.
          format: int64
          type: integer
        host_count:
          description: Contains the total number of profiled hosts reporting during
            a given hour.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageProfilingResponse:
      description: Response containing the number of profiled hosts for each hour
        for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            host_count: 6
            avg_container_agent_count: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            host_count: 6
            avg_container_agent_count: 0
      properties:
        usage:
          description: Get hourly usage for profiled hosts.
          items:
            $ref: '#/components/schemas/UsageProfilingHour'
          type: array
      type: object
    UsageReportsType:
      default: reports
      description: The type of reports.
      enum:
        - reports
      example: reports
      type: string
      x-enum-varnames:
        - REPORTS
    UsageRumSessionsHour:
      description: Number of RUM Sessions recorded for each hour for a given organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        session_count_android: 6
        session_count: 0
        session_count_ios: 1
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        session_count:
          description: Contains the number of RUM Sessions.
          format: int64
          type: integer
        session_count_android:
          description: Contains the number of mobile RUM Sessions on Android (data
            available beginning December 1, 2020).
          format: int64
          type: integer
        session_count_ios:
          description: Contains the number of mobile RUM Sessions on iOS (data available
            beginning December 1, 2020).
          format: int64
          type: integer
      type: object
    UsageRumSessionsResponse:
      description: Response containing the number of RUM Sessions for each hour for
        a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            session_count_android: 6
            session_count: 0
            session_count_ios: 1
          - hour: 2000-01-23T04:56:07.000+00:00
            session_count_android: 6
            session_count: 0
            session_count_ios: 1
      properties:
        usage:
          description: Get hourly usage for RUM Sessions.
          items:
            $ref: '#/components/schemas/UsageRumSessionsHour'
          type: array
      type: object
    UsageSNMPHour:
      description: The number of SNMP devices for each hour for a given organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        snmp_devices: 0
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        snmp_devices:
          description: Contains the number of SNMP devices.
          format: int64
          type: integer
      type: object
    UsageSNMPResponse:
      description: Response containing the number of SNMP devices for each hour for
        a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            snmp_devices: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            snmp_devices: 0
      properties:
        usage:
          description: Get hourly usage for SNMP devices.
          items:
            $ref: '#/components/schemas/UsageSNMPHour'
          type: array
      type: object
    UsageSort:
      default: start_date
      description: The field to sort by.
      enum:
        - computed_on
        - size
        - start_date
        - end_date
      type: string
      x-enum-varnames:
        - COMPUTED_ON
        - SIZE
        - START_DATE
        - END_DATE
    UsageSortDirection:
      default: desc
      description: The direction to sort by.
      enum:
        - desc
        - asc
      type: string
      x-enum-varnames:
        - DESC
        - ASC
    UsageSpecifiedCustomReportsAttributes:
      description: The response containing attributes for specified custom reports.
      example:
        end_date: end_date
        size: 0
        computed_on: computed_on
        location: https://an-s3-or-gs-bucket.s3.amazonaws.com
        start_date: start_date
        tags:
          - env
          - env
      properties:
        computed_on:
          description: The date the specified custom report was computed.
          type: string
        end_date:
          description: The ending date of specified custom report.
          type: string
        location:
          description: A downloadable file for the specified custom reporting file.
          example: https://an-s3-or-gs-bucket.s3.amazonaws.com
          type: string
        size:
          description: size
          format: int64
          type: integer
        start_date:
          description: The starting date of specified custom report.
          type: string
        tags:
          description: A list of tags to apply to specified custom reports.
          items:
            description: A given tag in a list.
            example: env
            type: string
          type: array
      type: object
    UsageSpecifiedCustomReportsData:
      description: Response containing date and type for specified custom reports.
      example:
        attributes:
          end_date: end_date
          size: 0
          computed_on: computed_on
          location: https://an-s3-or-gs-bucket.s3.amazonaws.com
          start_date: start_date
          tags:
            - env
            - env
        id: id
        type: reports
      properties:
        attributes:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsAttributes'
        id:
          description: The date for specified custom reports.
          type: string
        type:
          $ref: '#/components/schemas/UsageReportsType'
      type: object
    UsageSpecifiedCustomReportsMeta:
      description: The object containing document metadata.
      example:
        page:
          total_count: 6
      properties:
        page:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsPage'
      type: object
    UsageSpecifiedCustomReportsPage:
      description: The object containing page total count for specified ID.
      example:
        total_count: 6
      properties:
        total_count:
          description: Total page count.
          format: int64
          type: integer
      type: object
    UsageSpecifiedCustomReportsResponse:
      description: Returns available specified custom reports.
      example:
        data:
          attributes:
            end_date: end_date
            size: 0
            computed_on: computed_on
            location: https://an-s3-or-gs-bucket.s3.amazonaws.com
            start_date: start_date
            tags:
              - env
              - env
          id: id
          type: reports
        meta:
          page:
            total_count: 6
      properties:
        data:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsData'
        meta:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsMeta'
      type: object
    UsageSummaryDate:
      description: Response with hourly report of all data billed by Datadog all organizations.
      example:
        date: 2000-01-23T04:56:07.000+00:00
        iot_device_top99p: 8
        npm_host_top99p: 7
        container_hwm: 4
        cspm_container_avg: 6
        billable_ingested_bytes_sum: 7
        vsphere_host_top99p: 8
        fargate_tasks_count_avg: 1
        iot_device_sum: 9
        rum_session_count_sum: 2
        ingested_events_bytes_sum: 3
        mobile_rum_session_count_sum: 5
        container_avg: 5
        audit_logs_lines_indexed_sum: 7
        netflow_indexed_events_count_sum: 8
        aws_lambda_func_count: 0
        rum_total_session_count_sum: 9
        mobile_rum_session_count_ios_sum: 5
        fargate_tasks_count_hwm: 8
        cws_container_count_avg: 0
        opentelemetry_host_top99p: 3
        profiling_host_top99p: 8
        gcp_host_top99p: 6
        azure_app_service_top99p: 0
        cws_host_top99p: 2
        apm_azure_app_service_host_top99p: 1
        cspm_container_hwm: 8
        mobile_rum_session_count_android_sum: 0
        apm_host_top99p: 4
        synthetics_check_calls_count_sum: 8
        aws_host_top99p: 9
        heroku_host_top99p: 4
        incident_management_monthly_active_users_hwm: 8
        custom_ts_avg: 3
        cspm_host_top99p: 4
        trace_search_indexed_events_count_sum: 6
        twol_ingested_events_bytes_sum: 4
        agent_host_top99p: 4
        indexed_events_count_sum: 9
        infra_host_top99p: 1
        orgs:
          - npm_host_top99p: 1
            container_hwm: 0
            cspm_container_avg: 0
            billable_ingested_bytes_sum: 8
            vsphere_host_top99p: 3
            iot_device_top99p_sum: 1
            fargate_tasks_count_avg: 2
            rum_session_count_sum: 7
            ingested_events_bytes_sum: 3
            public_id: public_id
            mobile_rum_session_count_sum: 5
            container_avg: 4
            audit_logs_lines_indexed_sum: 7
            netflow_indexed_events_count_sum: 3
            aws_lambda_func_count: 3
            rum_total_session_count_sum: 7
            id: id
            mobile_rum_session_count_ios_sum: 5
            fargate_tasks_count_hwm: 6
            cws_container_count_avg: 9
            iot_device_agg_sum: 5
            opentelemetry_host_top99p: 3
            profiling_host_top99p: 9
            gcp_host_top99p: 4
            azure_app_service_top99p: 3
            cws_host_top99p: 0
            apm_azure_app_service_host_top99p: 9
            cspm_container_hwm: 7
            mobile_rum_session_count_android_sum: 4
            apm_host_top99p: 5
            synthetics_check_calls_count_sum: 9
            aws_host_top99p: 0
            heroku_host_top99p: 6
            incident_management_monthly_active_users_hwm: 9
            custom_ts_avg: 2
            cspm_host_top99p: 4
            trace_search_indexed_events_count_sum: 1
            twol_ingested_events_bytes_sum: 4
            agent_host_top99p: 3
            indexed_events_count_sum: 1
            infra_host_top99p: 1
            name: name
            aws_lambda_invocations_sum: 2
            synthetics_browser_check_calls_count_sum: 7
          - npm_host_top99p: 1
            container_hwm: 0
            cspm_container_avg: 0
            billable_ingested_bytes_sum: 8
            vsphere_host_top99p: 3
            iot_device_top99p_sum: 1
            fargate_tasks_count_avg: 2
            rum_session_count_sum: 7
            ingested_events_bytes_sum: 3
            public_id: public_id
            mobile_rum_session_count_sum: 5
            container_avg: 4
            audit_logs_lines_indexed_sum: 7
            netflow_indexed_events_count_sum: 3
            aws_lambda_func_count: 3
            rum_total_session_count_sum: 7
            id: id
            mobile_rum_session_count_ios_sum: 5
            fargate_tasks_count_hwm: 6
            cws_container_count_avg: 9
            iot_device_agg_sum: 5
            opentelemetry_host_top99p: 3
            profiling_host_top99p: 9
            gcp_host_top99p: 4
            azure_app_service_top99p: 3
            cws_host_top99p: 0
            apm_azure_app_service_host_top99p: 9
            cspm_container_hwm: 7
            mobile_rum_session_count_android_sum: 4
            apm_host_top99p: 5
            synthetics_check_calls_count_sum: 9
            aws_host_top99p: 0
            heroku_host_top99p: 6
            incident_management_monthly_active_users_hwm: 9
            custom_ts_avg: 2
            cspm_host_top99p: 4
            trace_search_indexed_events_count_sum: 1
            twol_ingested_events_bytes_sum: 4
            agent_host_top99p: 3
            indexed_events_count_sum: 1
            infra_host_top99p: 1
            name: name
            aws_lambda_invocations_sum: 2
            synthetics_browser_check_calls_count_sum: 7
        aws_lambda_invocations_sum: 9
        synthetics_browser_check_calls_count_sum: 4
      properties:
        agent_host_top99p:
          description: Shows the 99th percentile of all agent hosts over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p:
          description: Shows the 99th percentile of all Azure app services using APM
            over all hours in the current date all organizations.
          format: int64
          type: integer
        apm_host_top99p:
          description: Shows the 99th percentile of all distinct APM hosts over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        audit_logs_lines_indexed_sum:
          description: Shows the sum of audit logs lines indexed over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        aws_host_top99p:
          description: Shows the 99th percentile of all AWS hosts over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: Shows the average of the number of functions that executed
            1 or more times each hour in the current date for all organizations.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        azure_app_service_top99p:
          description: Shows the 99th percentile of all Azure app services over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        billable_ingested_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        container_avg:
          description: Shows the average of all distinct containers over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        container_hwm:
          description: Shows the high-water mark of all distinct containers over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_container_avg:
          description: Shows the average number of Cloud Security Posture Management
            containers over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_container_hwm:
          description: Shows the high-water mark of Cloud Security Posture Management
            containers over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Posture Management
            hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        custom_ts_avg:
          description: Shows the average number of distinct custom metrics over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        cws_container_count_avg:
          description: Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        cws_host_top99p:
          description: Shows the 99th percentile of all Cloud Workload Security hosts
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        date:
          description: The date for the usage.
          format: date-time
          type: string
        fargate_tasks_count_avg:
          description: Shows the high-watermark of all Fargate tasks over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_hwm:
          description: Shows the average of all Fargate tasks over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        gcp_host_top99p:
          description: Shows the 99th percentile of all GCP hosts over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        heroku_host_top99p:
          description: Shows the 99th percentile of all Heroku dynos over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        incident_management_monthly_active_users_hwm:
          description: Shows the high-water mark of incident management monthly active
            users over all hours in the current date for all organizations.
          format: int64
          type: integer
        indexed_events_count_sum:
          description: Shows the sum of all log events indexed over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        infra_host_top99p:
          description: Shows the 99th percentile of all distinct infrastructure hosts
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        ingested_events_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        iot_device_sum:
          description: Shows the sum of all IoT devices over all hours in the current
            date for all organizations.
          format: int64
          type: integer
        iot_device_top99p:
          description: Shows the 99th percentile of all IoT devices over all hours
            in the current date all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_android_sum:
          description: Shows the sum of all mobile RUM Sessions on Android over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_ios_sum:
          description: Shows the sum of all mobile RUM Sessions on iOS over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_sum:
          description: Shows the sum of all mobile RUM Sessions over all hours in
            the current date for all organizations
          format: int64
          type: integer
        netflow_indexed_events_count_sum:
          description: Shows the sum of all Network flows indexed over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        npm_host_top99p:
          description: Shows the 99th percentile of all distinct Networks hosts over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        opentelemetry_host_top99p:
          description: Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            date for all organizations.
          format: int64
          type: integer
        orgs:
          description: Organizations associated with a user.
          items:
            $ref: '#/components/schemas/UsageSummaryDateOrg'
          type: array
        profiling_host_top99p:
          description: Shows the 99th percentile of all profiled hosts over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        rum_session_count_sum:
          description: Shows the sum of all browser RUM Sessions over all hours in
            the current date for all organizations
          format: int64
          type: integer
        rum_total_session_count_sum:
          description: Shows the sum of RUM Sessions (browser and mobile) over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        synthetics_browser_check_calls_count_sum:
          description: Shows the sum of all Synthetic browser tests over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        synthetics_check_calls_count_sum:
          description: Shows the sum of all Synthetic API tests over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        trace_search_indexed_events_count_sum:
          description: Shows the sum of all Indexed Spans indexed over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        twol_ingested_events_bytes_sum:
          description: Shows the sum of all tracing without limits bytes ingested
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        vsphere_host_top99p:
          description: Shows the 99th percentile of all vSphere hosts over all hours
            in the current date for all organizations.
          format: int64
          type: integer
      type: object
    UsageSummaryDateOrg:
      description: Global hourly report of all data billed by Datadog for a given
        organization.
      example:
        npm_host_top99p: 1
        container_hwm: 0
        cspm_container_avg: 0
        billable_ingested_bytes_sum: 8
        vsphere_host_top99p: 3
        iot_device_top99p_sum: 1
        fargate_tasks_count_avg: 2
        rum_session_count_sum: 7
        ingested_events_bytes_sum: 3
        public_id: public_id
        mobile_rum_session_count_sum: 5
        container_avg: 4
        audit_logs_lines_indexed_sum: 7
        netflow_indexed_events_count_sum: 3
        aws_lambda_func_count: 3
        rum_total_session_count_sum: 7
        id: id
        mobile_rum_session_count_ios_sum: 5
        fargate_tasks_count_hwm: 6
        cws_container_count_avg: 9
        iot_device_agg_sum: 5
        opentelemetry_host_top99p: 3
        profiling_host_top99p: 9
        gcp_host_top99p: 4
        azure_app_service_top99p: 3
        cws_host_top99p: 0
        apm_azure_app_service_host_top99p: 9
        cspm_container_hwm: 7
        mobile_rum_session_count_android_sum: 4
        apm_host_top99p: 5
        synthetics_check_calls_count_sum: 9
        aws_host_top99p: 0
        heroku_host_top99p: 6
        incident_management_monthly_active_users_hwm: 9
        custom_ts_avg: 2
        cspm_host_top99p: 4
        trace_search_indexed_events_count_sum: 1
        twol_ingested_events_bytes_sum: 4
        agent_host_top99p: 3
        indexed_events_count_sum: 1
        infra_host_top99p: 1
        name: name
        aws_lambda_invocations_sum: 2
        synthetics_browser_check_calls_count_sum: 7
      properties:
        agent_host_top99p:
          description: Shows the 99th percentile of all agent hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p:
          description: Shows the 99th percentile of all Azure app services using APM
            over all hours in the current date for the given org.
          format: int64
          type: integer
        apm_host_top99p:
          description: Shows the 99th percentile of all distinct APM hosts over all
            hours in the current date for the given org.
          format: int64
          type: integer
        audit_logs_lines_indexed_sum:
          description: Shows the sum of all audit logs lines indexed over all hours
            in the current date for the given org.
          format: int64
          type: integer
        aws_host_top99p:
          description: Shows the 99th percentile of all AWS hosts over all hours in
            the current date for the given org.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current date for the given org.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current date for the given org.
          format: int64
          type: integer
        azure_app_service_top99p:
          description: Shows the 99th percentile of all Azure app services over all
            hours in the current date for the given org.
          format: int64
          type: integer
        billable_ingested_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for the given org.
          format: int64
          type: integer
        container_avg:
          description: Shows the average of all distinct containers over all hours
            in the current date for the given org.
          format: int64
          type: integer
        container_hwm:
          description: Shows the high-water mark of all distinct containers over all
            hours in the current date for the given org.
          format: int64
          type: integer
        cspm_container_avg:
          description: Shows the average number of Cloud Security Posture Management
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_container_hwm:
          description: Shows the high-water mark of Cloud Security Posture Management
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Posture Management
            hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        custom_ts_avg:
          description: Shows the average number of distinct custom metrics over all
            hours in the current date for the given org.
          format: int64
          type: integer
        cws_container_count_avg:
          description: Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        cws_host_top99p:
          description: Shows the 99th percentile of all Cloud Workload Security hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        fargate_tasks_count_avg:
          description: The average task count for Fargate.
          format: int64
          type: integer
        fargate_tasks_count_hwm:
          description: Shows the high-water mark of all Fargate tasks over all hours
            in the current date for the given org.
          format: int64
          type: integer
        gcp_host_top99p:
          description: Shows the 99th percentile of all GCP hosts over all hours in
            the current date for the given org.
          format: int64
          type: integer
        heroku_host_top99p:
          description: Shows the 99th percentile of all Heroku dynos over all hours
            in the current date for the given org.
          format: int64
          type: integer
        id:
          description: The organization id.
          type: string
        incident_management_monthly_active_users_hwm:
          description: Shows the high-water mark of incident management monthly active
            users over all hours in the current date for the given org.
          format: int64
          type: integer
        indexed_events_count_sum:
          description: Shows the sum of all log events indexed over all hours in the
            current date for the given org.
          format: int64
          type: integer
        infra_host_top99p:
          description: Shows the 99th percentile of all distinct infrastructure hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        ingested_events_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for the given org.
          format: int64
          type: integer
        iot_device_agg_sum:
          description: Shows the sum of all IoT devices over all hours in the current
            date for the given org.
          format: int64
          type: integer
        iot_device_top99p_sum:
          description: Shows the 99th percentile of all IoT devices over all hours
            in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_android_sum:
          description: Shows the sum of all mobile RUM Sessions on Android over all
            hours in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_ios_sum:
          description: Shows the sum of all mobile RUM Sessions on iOS over all hours
            in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_sum:
          description: Shows the sum of all mobile RUM Sessions over all hours in
            the current date for the given org.
          format: int64
          type: integer
        name:
          description: The organization name.
          type: string
        netflow_indexed_events_count_sum:
          description: Shows the sum of all Network flows indexed over all hours in
            the current date for the given org.
          format: int64
          type: integer
        npm_host_top99p:
          description: Shows the 99th percentile of all distinct Networks hosts over
            all hours in the current date for the given org.
          format: int64
          type: integer
        opentelemetry_host_top99p:
          description: Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            date for the given org.
          format: int64
          type: integer
        profiling_host_top99p:
          description: Shows the 99th percentile of all profiled hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        public_id:
          description: The organization public id.
          type: string
        rum_session_count_sum:
          description: Shows the sum of all browser RUM Sessions over all hours in
            the current date for the given org.
          format: int64
          type: integer
        rum_total_session_count_sum:
          description: Shows the sum of RUM Sessions (browser and mobile) over all
            hours in the current date for the given org.
          format: int64
          type: integer
        synthetics_browser_check_calls_count_sum:
          description: Shows the sum of all Synthetic browser tests over all hours
            in the current date for the given org.
          format: int64
          type: integer
        synthetics_check_calls_count_sum:
          description: Shows the sum of all Synthetic API tests over all hours in
            the current date for the given org.
          format: int64
          type: integer
        trace_search_indexed_events_count_sum:
          description: Shows the sum of all Indexed Spans indexed over all hours in
            the current date for the given org.
          format: int64
          type: integer
        twol_ingested_events_bytes_sum:
          description: Shows the sum of all tracing without limits bytes ingested
            over all hours in the current date for the given org.
          format: int64
          type: integer
        vsphere_host_top99p:
          description: Shows the 99th percentile of all vSphere hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
      type: object
    UsageSummaryResponse:
      description: Response with hourly report of all data billed by Datadog all organizations.
      example:
        audit_logs_lines_indexed_agg_sum: 5
        usage:
          - date: 2000-01-23T04:56:07.000+00:00
            iot_device_top99p: 8
            npm_host_top99p: 7
            container_hwm: 4
            cspm_container_avg: 6
            billable_ingested_bytes_sum: 7
            vsphere_host_top99p: 8
            fargate_tasks_count_avg: 1
            iot_device_sum: 9
            rum_session_count_sum: 2
            ingested_events_bytes_sum: 3
            mobile_rum_session_count_sum: 5
            container_avg: 5
            audit_logs_lines_indexed_sum: 7
            netflow_indexed_events_count_sum: 8
            aws_lambda_func_count: 0
            rum_total_session_count_sum: 9
            mobile_rum_session_count_ios_sum: 5
            fargate_tasks_count_hwm: 8
            cws_container_count_avg: 0
            opentelemetry_host_top99p: 3
            profiling_host_top99p: 8
            gcp_host_top99p: 6
            azure_app_service_top99p: 0
            cws_host_top99p: 2
            apm_azure_app_service_host_top99p: 1
            cspm_container_hwm: 8
            mobile_rum_session_count_android_sum: 0
            apm_host_top99p: 4
            synthetics_check_calls_count_sum: 8
            aws_host_top99p: 9
            heroku_host_top99p: 4
            incident_management_monthly_active_users_hwm: 8
            custom_ts_avg: 3
            cspm_host_top99p: 4
            trace_search_indexed_events_count_sum: 6
            twol_ingested_events_bytes_sum: 4
            agent_host_top99p: 4
            indexed_events_count_sum: 9
            infra_host_top99p: 1
            orgs:
              - npm_host_top99p: 1
                container_hwm: 0
                cspm_container_avg: 0
                billable_ingested_bytes_sum: 8
                vsphere_host_top99p: 3
                iot_device_top99p_sum: 1
                fargate_tasks_count_avg: 2
                rum_session_count_sum: 7
                ingested_events_bytes_sum: 3
                public_id: public_id
                mobile_rum_session_count_sum: 5
                container_avg: 4
                audit_logs_lines_indexed_sum: 7
                netflow_indexed_events_count_sum: 3
                aws_lambda_func_count: 3
                rum_total_session_count_sum: 7
                id: id
                mobile_rum_session_count_ios_sum: 5
                fargate_tasks_count_hwm: 6
                cws_container_count_avg: 9
                iot_device_agg_sum: 5
                opentelemetry_host_top99p: 3
                profiling_host_top99p: 9
                gcp_host_top99p: 4
                azure_app_service_top99p: 3
                cws_host_top99p: 0
                apm_azure_app_service_host_top99p: 9
                cspm_container_hwm: 7
                mobile_rum_session_count_android_sum: 4
                apm_host_top99p: 5
                synthetics_check_calls_count_sum: 9
                aws_host_top99p: 0
                heroku_host_top99p: 6
                incident_management_monthly_active_users_hwm: 9
                custom_ts_avg: 2
                cspm_host_top99p: 4
                trace_search_indexed_events_count_sum: 1
                twol_ingested_events_bytes_sum: 4
                agent_host_top99p: 3
                indexed_events_count_sum: 1
                infra_host_top99p: 1
                name: name
                aws_lambda_invocations_sum: 2
                synthetics_browser_check_calls_count_sum: 7
              - npm_host_top99p: 1
                container_hwm: 0
                cspm_container_avg: 0
                billable_ingested_bytes_sum: 8
                vsphere_host_top99p: 3
                iot_device_top99p_sum: 1
                fargate_tasks_count_avg: 2
                rum_session_count_sum: 7
                ingested_events_bytes_sum: 3
                public_id: public_id
                mobile_rum_session_count_sum: 5
                container_avg: 4
                audit_logs_lines_indexed_sum: 7
                netflow_indexed_events_count_sum: 3
                aws_lambda_func_count: 3
                rum_total_session_count_sum: 7
                id: id
                mobile_rum_session_count_ios_sum: 5
                fargate_tasks_count_hwm: 6
                cws_container_count_avg: 9
                iot_device_agg_sum: 5
                opentelemetry_host_top99p: 3
                profiling_host_top99p: 9
                gcp_host_top99p: 4
                azure_app_service_top99p: 3
                cws_host_top99p: 0
                apm_azure_app_service_host_top99p: 9
                cspm_container_hwm: 7
                mobile_rum_session_count_android_sum: 4
                apm_host_top99p: 5
                synthetics_check_calls_count_sum: 9
                aws_host_top99p: 0
                heroku_host_top99p: 6
                incident_management_monthly_active_users_hwm: 9
                custom_ts_avg: 2
                cspm_host_top99p: 4
                trace_search_indexed_events_count_sum: 1
                twol_ingested_events_bytes_sum: 4
                agent_host_top99p: 3
                indexed_events_count_sum: 1
                infra_host_top99p: 1
                name: name
                aws_lambda_invocations_sum: 2
                synthetics_browser_check_calls_count_sum: 7
            aws_lambda_invocations_sum: 9
            synthetics_browser_check_calls_count_sum: 4
          - date: 2000-01-23T04:56:07.000+00:00
            iot_device_top99p: 8
            npm_host_top99p: 7
            container_hwm: 4
            cspm_container_avg: 6
            billable_ingested_bytes_sum: 7
            vsphere_host_top99p: 8
            fargate_tasks_count_avg: 1
            iot_device_sum: 9
            rum_session_count_sum: 2
            ingested_events_bytes_sum: 3
            mobile_rum_session_count_sum: 5
            container_avg: 5
            audit_logs_lines_indexed_sum: 7
            netflow_indexed_events_count_sum: 8
            aws_lambda_func_count: 0
            rum_total_session_count_sum: 9
            mobile_rum_session_count_ios_sum: 5
            fargate_tasks_count_hwm: 8
            cws_container_count_avg: 0
            opentelemetry_host_top99p: 3
            profiling_host_top99p: 8
            gcp_host_top99p: 6
            azure_app_service_top99p: 0
            cws_host_top99p: 2
            apm_azure_app_service_host_top99p: 1
            cspm_container_hwm: 8
            mobile_rum_session_count_android_sum: 0
            apm_host_top99p: 4
            synthetics_check_calls_count_sum: 8
            aws_host_top99p: 9
            heroku_host_top99p: 4
            incident_management_monthly_active_users_hwm: 8
            custom_ts_avg: 3
            cspm_host_top99p: 4
            trace_search_indexed_events_count_sum: 6
            twol_ingested_events_bytes_sum: 4
            agent_host_top99p: 4
            indexed_events_count_sum: 9
            infra_host_top99p: 1
            orgs:
              - npm_host_top99p: 1
                container_hwm: 0
                cspm_container_avg: 0
                billable_ingested_bytes_sum: 8
                vsphere_host_top99p: 3
                iot_device_top99p_sum: 1
                fargate_tasks_count_avg: 2
                rum_session_count_sum: 7
                ingested_events_bytes_sum: 3
                public_id: public_id
                mobile_rum_session_count_sum: 5
                container_avg: 4
                audit_logs_lines_indexed_sum: 7
                netflow_indexed_events_count_sum: 3
                aws_lambda_func_count: 3
                rum_total_session_count_sum: 7
                id: id
                mobile_rum_session_count_ios_sum: 5
                fargate_tasks_count_hwm: 6
                cws_container_count_avg: 9
                iot_device_agg_sum: 5
                opentelemetry_host_top99p: 3
                profiling_host_top99p: 9
                gcp_host_top99p: 4
                azure_app_service_top99p: 3
                cws_host_top99p: 0
                apm_azure_app_service_host_top99p: 9
                cspm_container_hwm: 7
                mobile_rum_session_count_android_sum: 4
                apm_host_top99p: 5
                synthetics_check_calls_count_sum: 9
                aws_host_top99p: 0
                heroku_host_top99p: 6
                incident_management_monthly_active_users_hwm: 9
                custom_ts_avg: 2
                cspm_host_top99p: 4
                trace_search_indexed_events_count_sum: 1
                twol_ingested_events_bytes_sum: 4
                agent_host_top99p: 3
                indexed_events_count_sum: 1
                infra_host_top99p: 1
                name: name
                aws_lambda_invocations_sum: 2
                synthetics_browser_check_calls_count_sum: 7
              - npm_host_top99p: 1
                container_hwm: 0
                cspm_container_avg: 0
                billable_ingested_bytes_sum: 8
                vsphere_host_top99p: 3
                iot_device_top99p_sum: 1
                fargate_tasks_count_avg: 2
                rum_session_count_sum: 7
                ingested_events_bytes_sum: 3
                public_id: public_id
                mobile_rum_session_count_sum: 5
                container_avg: 4
                audit_logs_lines_indexed_sum: 7
                netflow_indexed_events_count_sum: 3
                aws_lambda_func_count: 3
                rum_total_session_count_sum: 7
                id: id
                mobile_rum_session_count_ios_sum: 5
                fargate_tasks_count_hwm: 6
                cws_container_count_avg: 9
                iot_device_agg_sum: 5
                opentelemetry_host_top99p: 3
                profiling_host_top99p: 9
                gcp_host_top99p: 4
                azure_app_service_top99p: 3
                cws_host_top99p: 0
                apm_azure_app_service_host_top99p: 9
                cspm_container_hwm: 7
                mobile_rum_session_count_android_sum: 4
                apm_host_top99p: 5
                synthetics_check_calls_count_sum: 9
                aws_host_top99p: 0
                heroku_host_top99p: 6
                incident_management_monthly_active_users_hwm: 9
                custom_ts_avg: 2
                cspm_host_top99p: 4
                trace_search_indexed_events_count_sum: 1
                twol_ingested_events_bytes_sum: 4
                agent_host_top99p: 3
                indexed_events_count_sum: 1
                infra_host_top99p: 1
                name: name
                aws_lambda_invocations_sum: 2
                synthetics_browser_check_calls_count_sum: 7
            aws_lambda_invocations_sum: 9
            synthetics_browser_check_calls_count_sum: 4
        cspm_container_hwm_sum: 1
        apm_host_top99p_sum: 1
        mobile_rum_session_count_android_agg_sum: 0
        infra_host_top99p_sum: 9
        cspm_container_avg_sum: 1
        synthetics_check_calls_count_agg_sum: 4
        aws_lambda_func_count: 2
        netflow_indexed_events_count_agg_sum: 6
        fargate_tasks_count_avg_sum: 4
        fargate_tasks_count_hwm_sum: 5
        cws_host_top99p_sum: 1
        iot_device_agg_sum: 3
        last_updated: 2000-01-23T04:56:07.000+00:00
        indexed_events_count_agg_sum: 8
        rehydrated_indexed_events_agg_sum: 3
        vsphere_host_top99p_sum: 2
        incident_management_monthly_active_users_hwm_sum: 6
        live_indexed_events_agg_sum: 1
        rum_session_count_agg_sum: 7
        aws_host_top99p_sum: 5
        profiling_container_agent_count_avg: 8
        heroku_host_top99p_sum: 9
        aws_lambda_invocations_sum: 7
        trace_search_indexed_events_count_agg_sum: 0
        end_date: 2000-01-23T04:56:07.000+00:00
        azure_host_top99p_sum: 3
        cws_containers_avg_sum: 7
        cspm_host_top99p_sum: 1
        iot_device_top99p_sum: 6
        live_ingested_bytes_agg_sum: 2
        rehydrated_ingested_bytes_agg_sum: 3
        container_hwm_sum: 7
        synthetics_browser_check_calls_count_agg_sum: 3
        logs_by_retention:
          usage:
            - logs_indexed_logs_usage_agg_sum: 6
              logs_rehydrated_indexed_logs_usage_agg_sum: 3
              retention: retention
              logs_live_indexed_logs_usage_agg_sum: 3
            - logs_indexed_logs_usage_agg_sum: 6
              logs_rehydrated_indexed_logs_usage_agg_sum: 3
              retention: retention
              logs_live_indexed_logs_usage_agg_sum: 3
          usage_by_month:
            date: date
            usage:
              - logs_indexed_logs_usage_sum: 6
                logs_live_indexed_logs_usage_sum: 6
                logs_rehydrated_indexed_logs_usage_sum: 5
                retention: retention
              - logs_indexed_logs_usage_sum: 6
                logs_live_indexed_logs_usage_sum: 6
                logs_rehydrated_indexed_logs_usage_sum: 5
                retention: retention
          orgs:
            usage:
              - usage:
                  - logs_indexed_logs_usage_sum: 6
                    logs_live_indexed_logs_usage_sum: 6
                    logs_rehydrated_indexed_logs_usage_sum: 5
                    retention: retention
                  - logs_indexed_logs_usage_sum: 6
                    logs_live_indexed_logs_usage_sum: 6
                    logs_rehydrated_indexed_logs_usage_sum: 5
                    retention: retention
              - usage:
                  - logs_indexed_logs_usage_sum: 6
                    logs_live_indexed_logs_usage_sum: 6
                    logs_rehydrated_indexed_logs_usage_sum: 5
                    retention: retention
                  - logs_indexed_logs_usage_sum: 6
                    logs_live_indexed_logs_usage_sum: 6
                    logs_rehydrated_indexed_logs_usage_sum: 5
                    retention: retention
        npm_host_top99p_sum: 0
        container_avg_sum: 4
        mobile_rum_session_count_agg_sum: 7
        agent_host_top99p_sum: 0
        custom_ts_sum: 6
        apm_azure_app_service_host_top99p_sum: 6
        azure_app_service_top99p_sum: 9
        opentelemetry_host_top99p_sum: 4
        start_date: 2000-01-23T04:56:07.000+00:00
        billable_ingested_bytes_agg_sum: 2
        ingested_events_bytes_agg_sum: 6
        twol_ingested_events_bytes_agg_sum: 6
        mobile_rum_session_count_ios_agg_sum: 7
        gcp_host_top99p_sum: 9
        profiling_host_count_top99p_sum: 7
        rum_total_session_count_agg_sum: 5
      properties:
        agent_host_top99p_sum:
          description: Shows the 99th percentile of all agent hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p_sum:
          description: Shows the 99th percentile of all Azure app services using APM
            over all hours in the current months all organizations.
          format: int64
          type: integer
        apm_host_top99p_sum:
          description: Shows the 99th percentile of all distinct APM hosts over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        audit_logs_lines_indexed_agg_sum:
          description: Shows the sum of all audit logs lines indexed over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        aws_host_top99p_sum:
          description: Shows the 99th percentile of all AWS hosts over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: Shows the average of the number of functions that executed
            1 or more times each hour in the current months for all organizations.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        azure_app_service_top99p_sum:
          description: Shows the 99th percentile of all Azure app services over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        azure_host_top99p_sum:
          description: Shows the 99th percentile of all Azure hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        billable_ingested_bytes_agg_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        container_avg_sum:
          description: Shows the average of all distinct containers over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        container_hwm_sum:
          description: Shows the sum of the high-water marks of all distinct containers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        cspm_container_avg_sum:
          description: Shows the average number of Cloud Security Posture Management
            containers over all hours in the current months for all organizations.
          format: int64
          type: integer
        cspm_container_hwm_sum:
          description: Shows the sum of the the high-water marks of Cloud Security
            Posture Management containers over all hours in the current months for
            all organizations.
          format: int64
          type: integer
        cspm_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Posture Management
            hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        custom_ts_sum:
          description: Shows the average number of distinct custom metrics over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        cws_containers_avg_sum:
          description: Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        cws_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Workload Security hosts
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        end_date:
          description: Shows the last date of usage in the current months for all
            organizations.
          format: date-time
          type: string
        fargate_tasks_count_avg_sum:
          description: Shows the average of all Fargate tasks over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_hwm_sum:
          description: Shows the sum of the high-water marks of all Fargate tasks
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        gcp_host_top99p_sum:
          description: Shows the 99th percentile of all GCP hosts over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        heroku_host_top99p_sum:
          description: Shows the 99th percentile of all Heroku dynos over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        incident_management_monthly_active_users_hwm_sum:
          description: Shows sum of the the high-water marks of incident management
            monthly active users in the current months for all organizations.
          format: int64
          type: integer
        indexed_events_count_agg_sum:
          description: Shows the sum of all log events indexed over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        infra_host_top99p_sum:
          description: Shows the 99th percentile of all distinct infrastructure hosts
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        ingested_events_bytes_agg_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        iot_device_agg_sum:
          description: Shows the sum of all IoT devices over all hours in the current
            months for all organizations.
          format: int64
          type: integer
        iot_device_top99p_sum:
          description: Shows the 99th percentile of all IoT devices over all hours
            in the current months of all organizations.
          format: int64
          type: integer
        last_updated:
          description: Shows the the most recent hour in the current months for all
            organizations for which all usages were calculated.
          format: date-time
          type: string
        live_indexed_events_agg_sum:
          description: Shows the sum of all live logs indexed over all hours in the
            current months for all organizations (data available as of December 1,
            2020).
          format: int64
          type: integer
        live_ingested_bytes_agg_sum:
          description: Shows the sum of all live logs bytes ingested over all hours
            in the current months for all organizations (data available as of December
            1, 2020).
          format: int64
          type: integer
        logs_by_retention:
          $ref: '#/components/schemas/LogsByRetention'
        mobile_rum_session_count_agg_sum:
          description: Shows the sum of all mobile RUM Sessions over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_android_agg_sum:
          description: Shows the sum of all mobile RUM Sessions on Android over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_ios_agg_sum:
          description: Shows the sum of all mobile RUM Sessions on iOS over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        netflow_indexed_events_count_agg_sum:
          description: Shows the sum of all Network flows indexed over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        npm_host_top99p_sum:
          description: Shows the 99th percentile of all distinct Networks hosts over
            all hours in the current months for all organizations.
          format: int64
          type: integer
        opentelemetry_host_top99p_sum:
          description: Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            months for all organizations.
          format: int64
          type: integer
        profiling_container_agent_count_avg:
          description: Shows the average number of profiled containers over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        profiling_host_count_top99p_sum:
          description: Shows the 99th percentile of all profiled hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        rehydrated_indexed_events_agg_sum:
          description: Shows the sum of all rehydrated logs indexed over all hours
            in the current months for all organizations (data available as of December
            1, 2020).
          format: int64
          type: integer
        rehydrated_ingested_bytes_agg_sum:
          description: Shows the sum of all rehydrated logs bytes ingested over all
            hours in the current months for all organizations (data available as of
            December 1, 2020).
          format: int64
          type: integer
        rum_session_count_agg_sum:
          description: Shows the sum of all browser RUM Sessions over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        rum_total_session_count_agg_sum:
          description: Shows the sum of RUM Sessions (browser and mobile) over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        start_date:
          description: Shows the first date of usage in the current months for all
            organizations.
          format: date-time
          type: string
        synthetics_browser_check_calls_count_agg_sum:
          description: Shows the sum of all Synthetic browser tests over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        synthetics_check_calls_count_agg_sum:
          description: Shows the sum of all Synthetic API tests over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        trace_search_indexed_events_count_agg_sum:
          description: Shows the sum of all Indexed Spans indexed over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        twol_ingested_events_bytes_agg_sum:
          description: Shows the sum of all tracing without limits bytes ingested
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        usage:
          description: An array of objects regarding hourly usage.
          items:
            $ref: '#/components/schemas/UsageSummaryDate'
          type: array
        vsphere_host_top99p_sum:
          description: Shows the 99th percentile of all vSphere hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
      type: object
    UsageSyntheticsAPIHour:
      description: Number of Synthetics API tests run for each hour for a given organization.
      example:
        check_calls_count: 0
        hour: 2000-01-23T04:56:07.000+00:00
      properties:
        check_calls_count:
          description: Contains the number of Synthetics API tests run.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageSyntheticsAPIResponse:
      description: Response containing the number of Synthetics API tests run for
        each hour for a given organization.
      example:
        usage:
          - check_calls_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
          - check_calls_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
      properties:
        usage:
          description: Get hourly usage for Synthetics API tests.
          items:
            $ref: '#/components/schemas/UsageSyntheticsAPIHour'
          type: array
      type: object
    UsageSyntheticsBrowserHour:
      description: Number of Synthetics Browser tests run for each hour for a given
        organization.
      example:
        hour: 2000-01-23T04:56:07.000+00:00
        browser_check_calls_count: 0
      properties:
        browser_check_calls_count:
          description: Contains the number of Synthetics Browser tests run.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageSyntheticsBrowserResponse:
      description: Response containing the number of Synthetics Browser tests run
        for each hour for a given organization.
      example:
        usage:
          - hour: 2000-01-23T04:56:07.000+00:00
            browser_check_calls_count: 0
          - hour: 2000-01-23T04:56:07.000+00:00
            browser_check_calls_count: 0
      properties:
        usage:
          description: Get hourly usage for Synthetics Browser tests.
          items:
            $ref: '#/components/schemas/UsageSyntheticsBrowserHour'
          type: array
      type: object
    UsageSyntheticsHour:
      description: The number of synthetics tests run for each hour for a given organization.
      example:
        check_calls_count: 0
        hour: 2000-01-23T04:56:07.000+00:00
      properties:
        check_calls_count:
          description: Contains the number of Synthetics API tests run.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
      type: object
    UsageSyntheticsResponse:
      description: Response containing the number of Synthetics API tests run for
        each hour for a given organization.
      example:
        usage:
          - check_calls_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
          - check_calls_count: 0
            hour: 2000-01-23T04:56:07.000+00:00
      properties:
        usage:
          description: Array with the number of hourly Synthetics test run for a given
            organization.
          items:
            $ref: '#/components/schemas/UsageSyntheticsHour'
          type: array
      type: object
    UsageTimeseriesHour:
      description: The hourly usage of timeseries.
      example:
        num_custom_input_timeseries: 0
        hour: 2000-01-23T04:56:07.000+00:00
        num_custom_timeseries: 1
        num_custom_output_timeseries: 6
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        num_custom_input_timeseries:
          description: Contains the number of custom metrics that are inputs for aggregations
            (metric configured is custom).
          format: int64
          type: integer
        num_custom_output_timeseries:
          description: Contains the number of custom metrics that are outputs for
            aggregations (metric configured is custom).
          format: int64
          type: integer
        num_custom_timeseries:
          description: Contains the number of non-aggregation custom metrics.
          format: int64
          type: integer
      type: object
    UsageTimeseriesResponse:
      description: Response containing hourly usage of timeseries.
      example:
        usage:
          - num_custom_input_timeseries: 0
            hour: 2000-01-23T04:56:07.000+00:00
            num_custom_timeseries: 1
            num_custom_output_timeseries: 6
          - num_custom_input_timeseries: 0
            hour: 2000-01-23T04:56:07.000+00:00
            num_custom_timeseries: 1
            num_custom_output_timeseries: 6
      properties:
        usage:
          description: An array of objects regarding hourly usage of timeseries.
          items:
            $ref: '#/components/schemas/UsageTimeseriesHour'
          type: array
      type: object
    UsageTopAvgMetricsHour:
      description: Number of hourly recorded custom metrics for a given organization.
      example:
        max_metric_hour: 6
        metric_name: metric_name
        avg_metric_hour: 0
      properties:
        avg_metric_hour:
          description: Average number of timeseries per hour in which the metric occurs.
          format: int64
          type: integer
        max_metric_hour:
          description: Maximum number of timeseries per hour in which the metric occurs.
          format: int64
          type: integer
        metric_category:
          $ref: '#/components/schemas/UsageMetricCategory'
        metric_name:
          description: Contains the custom metric name.
          type: string
      type: object
    UsageTopAvgMetricsMetadata:
      description: The object containing document metadata.
      example:
        pagination:
          total_number_of_records: 1
          next_record_id: next_record_id
          limit: 6
        month: 2000-01-23T04:56:07.000+00:00
        day: 2000-01-23T04:56:07.000+00:00
      properties:
        day:
          description: The day value from the user request that contains the returned
            usage data. (If day was used the request)
          format: date-time
          type: string
        month:
          description: The month value from the user request that contains the returned
            usage data. (If month was used the request)
          format: date-time
          type: string
        pagination:
          $ref: '#/components/schemas/UsageAttributionPagination'
      type: object
    UsageTopAvgMetricsResponse:
      description: Response containing the number of hourly recorded custom metrics
        for a given organization.
      example:
        metadata:
          pagination:
            total_number_of_records: 1
            next_record_id: next_record_id
            limit: 6
          month: 2000-01-23T04:56:07.000+00:00
          day: 2000-01-23T04:56:07.000+00:00
        usage:
          - max_metric_hour: 6
            metric_name: metric_name
            avg_metric_hour: 0
          - max_metric_hour: 6
            metric_name: metric_name
            avg_metric_hour: 0
      properties:
        metadata:
          $ref: '#/components/schemas/UsageTopAvgMetricsMetadata'
        usage:
          description: Number of hourly recorded custom metrics for a given organization.
          items:
            $ref: '#/components/schemas/UsageTopAvgMetricsHour'
          type: array
      type: object
    UserDisableResponse:
      description: Array of user disabled for a given organization.
      example:
        message: message
      properties:
        message:
          description: Information pertaining to a user disabled for a given organization.
          type: string
      type: object
    UserListResponse:
      description: Array of Datadog users for a given organization.
      example:
        users:
          - access_role: st
            icon: /path/to/matching/gravatar/icon
            name: test user
            verified: true
            disabled: false
            handle: test@datadoghq.com
            email: test@datadoghq.com
          - access_role: st
            icon: /path/to/matching/gravatar/icon
            name: test user
            verified: true
            disabled: false
            handle: test@datadoghq.com
            email: test@datadoghq.com
      properties:
        users:
          description: Array of users.
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    UserResponse:
      description: A Datadog User.
      example:
        user:
          access_role: st
          icon: /path/to/matching/gravatar/icon
          name: test user
          verified: true
          disabled: false
          handle: test@datadoghq.com
          email: test@datadoghq.com
      properties:
        user:
          $ref: '#/components/schemas/User'
      type: object
    Widget:
      description: |-
        Information about widget.

        **Note**: The `layout` property is required for widgets in dashboards with `free` `layout_type`.
              For the **new dashboard layout**, the `layout` property depends on the `reflow_type` of the dashboard.
              - If `reflow_type` is `fixed`, `layout` is required.
              - If `reflow_type` is `auto`, `layout` should not be set.
      properties:
        definition:
          $ref: '#/components/schemas/WidgetDefinition'
        id:
          description: ID of the widget.
          format: int64
          type: integer
        layout:
          $ref: '#/components/schemas/WidgetLayout'
      required:
        - definition
      type: object
    WidgetAggregator:
      description: Aggregator used for the request.
      enum:
        - avg
        - last
        - max
        - min
        - sum
      type: string
      x-enum-varnames:
        - AVERAGE
        - LAST
        - MAXIMUM
        - MINIMUM
        - SUM
    WidgetAxis:
      description: Axis controls for the widget.
      properties:
        include_zero:
          description: True includes zero.
          type: boolean
        label:
          description: The label of the axis to display on the graph.
          type: string
        max:
          default: auto
          description: Specifies the maximum value to show on the y-axis. It takes
            a number, or auto for default behavior.
          type: string
        min:
          default: auto
          description: Specifies minimum value to show on the y-axis. It takes a number,
            or auto for default behavior.
          type: string
        scale:
          default: linear
          description: Specifies the scale type. Possible values are `linear`, `log`,
            `sqrt`, `pow##` (e.g. `pow2`, `pow0.5` etc.).
          type: string
      type: object
    WidgetChangeType:
      description: Show the absolute or the relative change.
      enum:
        - absolute
        - relative
      type: string
      x-enum-varnames:
        - ABSOLUTE
        - RELATIVE
    WidgetColorPreference:
      description: Which color to use on the widget.
      enum:
        - background
        - text
      type: string
      x-enum-varnames:
        - BACKGROUND
        - TEXT
    WidgetComparator:
      description: Comparator to apply.
      enum:
        - '>'
        - '>='
        - <
        - <=
      type: string
      x-enum-varnames:
        - GREATER_THAN
        - GREATER_THAN_OR_EQUAL_TO
        - LESS_THAN
        - LESS_THAN_OR_EQUAL_TO
    WidgetCompareTo:
      description: Timeframe used for the change comparison.
      enum:
        - hour_before
        - day_before
        - week_before
        - month_before
      type: string
      x-enum-varnames:
        - HOUR_BEFORE
        - DAY_BEFORE
        - WEEK_BEFORE
        - MONTH_BEFORE
    WidgetConditionalFormat:
      description: Define a conditional format for the widget.
      properties:
        comparator:
          $ref: '#/components/schemas/WidgetComparator'
        custom_bg_color:
          description: Color palette to apply to the background, same values available
            as palette.
          type: string
        custom_fg_color:
          description: Color palette to apply to the foreground, same values available
            as palette.
          type: string
        hide_value:
          description: True hides values.
          type: boolean
        image_url:
          description: Displays an image as the background.
          type: string
        metric:
          description: Metric from the request to correlate this conditional format
            with.
          type: string
        palette:
          $ref: '#/components/schemas/WidgetPalette'
        timeframe:
          description: Defines the displayed timeframe.
          type: string
        value:
          description: Value for the comparator.
          example: 0.0
          format: double
          type: number
      required:
        - comparator
        - palette
        - value
      type: object
    WidgetCustomLink:
      description: Custom links help you connect a data value to a URL, like a Datadog
        page or your AWS console.
      properties:
        is_hidden:
          description: The flag for toggling context menu link visibility.
          type: boolean
        label:
          description: The label for the custom link URL. Keep the label short and
            descriptive. Use metrics and tags as variables.
          example: Search logs for {{host}}
          type: string
        link:
          description: The URL of the custom link. URL must include `http` or `https`.
            A relative URL must start with `/`.
          example: https://app.datadoghq.com/logs?query={{host}}
          type: string
        override_label:
          description: The label ID that refers to a context menu link. Can be `logs`,
            `hosts`, `traces`, `profiles`, `processes`, `containers`, or `rum`.
          example: logs
          type: string
      type: object
    WidgetDefinition:
      description: '[Definition of the widget](https://docs.datadoghq.com/dashboards/widgets/).'
      oneOf:
        - $ref: '#/components/schemas/AlertGraphWidgetDefinition'
        - $ref: '#/components/schemas/AlertValueWidgetDefinition'
        - $ref: '#/components/schemas/ChangeWidgetDefinition'
        - $ref: '#/components/schemas/CheckStatusWidgetDefinition'
        - $ref: '#/components/schemas/DistributionWidgetDefinition'
        - $ref: '#/components/schemas/EventStreamWidgetDefinition'
        - $ref: '#/components/schemas/EventTimelineWidgetDefinition'
        - $ref: '#/components/schemas/FreeTextWidgetDefinition'
        - $ref: '#/components/schemas/GeomapWidgetDefinition'
        - $ref: '#/components/schemas/GroupWidgetDefinition'
        - $ref: '#/components/schemas/HeatMapWidgetDefinition'
        - $ref: '#/components/schemas/HostMapWidgetDefinition'
        - $ref: '#/components/schemas/IFrameWidgetDefinition'
        - $ref: '#/components/schemas/ImageWidgetDefinition'
        - $ref: '#/components/schemas/LogStreamWidgetDefinition'
        - $ref: '#/components/schemas/MonitorSummaryWidgetDefinition'
        - $ref: '#/components/schemas/NoteWidgetDefinition'
        - $ref: '#/components/schemas/QueryValueWidgetDefinition'
        - $ref: '#/components/schemas/ScatterPlotWidgetDefinition'
        - $ref: '#/components/schemas/SLOWidgetDefinition'
        - $ref: '#/components/schemas/ServiceMapWidgetDefinition'
        - $ref: '#/components/schemas/ServiceSummaryWidgetDefinition'
        - $ref: '#/components/schemas/TableWidgetDefinition'
        - $ref: '#/components/schemas/TimeseriesWidgetDefinition'
        - $ref: '#/components/schemas/ToplistWidgetDefinition'
        - $ref: '#/components/schemas/TreeMapWidgetDefinition'
        - $ref: '#/components/schemas/ListStreamWidgetDefinition'
      type: object
    WidgetDisplayType:
      description: Type of display to use for the request.
      enum:
        - area
        - bars
        - line
      type: string
      x-enum-varnames:
        - AREA
        - BARS
        - LINE
    WidgetEvent:
      description: |-
        Event overlay control options.

        See the dedicated [Events JSON schema documentation](https://docs.datadoghq.com/dashboards/graphing_json/widget_json/#events-schema)
        to learn how to build the `<EVENTS_SCHEMA>`.
      properties:
        q:
          description: Query definition.
          example: ""
          type: string
        tags_execution:
          description: The execution method for multi-value filters.
          type: string
      required:
        - q
      type: object
    WidgetEventSize:
      description: Size to use to display an event.
      enum:
        - s
        - l
      type: string
      x-enum-varnames:
        - SMALL
        - LARGE
    WidgetFieldSort:
      description: Which column and order to sort by
      properties:
        column:
          description: Facet path for the column
          example: ""
          type: string
        order:
          $ref: '#/components/schemas/WidgetSort'
      required:
        - column
        - order
      type: object
    WidgetFormula:
      description: Formula to be used in a widget query.
      properties:
        alias:
          description: Expression alias.
          type: string
        cell_display_mode:
          $ref: '#/components/schemas/TableWidgetCellDisplayMode'
        conditional_formats:
          description: List of conditional formats.
          items:
            $ref: '#/components/schemas/WidgetConditionalFormat'
          type: array
        formula:
          description: String expression built from queries, formulas, and functions.
          example: func(a) + b
          type: string
        limit:
          $ref: '#/components/schemas/WidgetFormula_limit'
      required:
        - formula
      type: object
    WidgetGrouping:
      description: The kind of grouping to use.
      enum:
        - check
        - cluster
      type: string
      x-enum-varnames:
        - CHECK
        - CLUSTER
    WidgetHorizontalAlign:
      description: Horizontal alignment.
      enum:
        - center
        - left
        - right
      type: string
      x-enum-varnames:
        - CENTER
        - LEFT
        - RIGHT
    WidgetImageSizing:
      description: |-
        How to size the image on the widget. The values are based on the image `object-fit` CSS properties.
        **Note**: `zoom`, `fit` and `center` values are deprecated.
      enum:
        - fill
        - contain
        - cover
        - none
        - scale-down
        - zoom
        - fit
        - center
      type: string
      x-enum-varnames:
        - FILL
        - CONTAIN
        - COVER
        - NONE
        - SCALEDOWN
        - ZOOM
        - FIT
        - CENTER
    WidgetLayout:
      description: The layout for a widget on a `free` or **new dashboard layout**
        dashboard.
      properties:
        height:
          description: The height of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        is_column_break:
          description: |-
            Whether the widget should be the first one on the second column in high density or not.
            **Note**: Only for the **new dashboard layout** and only one widget in the dashboard should have this property set to `true`.
          type: boolean
        width:
          description: The width of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        x:
          description: The position of the widget on the x (horizontal) axis. Should
            be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        y:
          description: The position of the widget on the y (vertical) axis. Should
            be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
      required:
        - height
        - width
        - x
        - "y"
      type: object
    WidgetLayoutType:
      description: Layout type of the group.
      enum:
        - ordered
      type: string
      x-enum-varnames:
        - ORDERED
    WidgetLegendSize:
      description: Available legend sizes for a widget. Should be one of "0", "2",
        "4", "8", "16", or "auto".
      type: string
    WidgetLineType:
      description: Type of lines displayed.
      enum:
        - dashed
        - dotted
        - solid
      type: string
      x-enum-varnames:
        - DASHED
        - DOTTED
        - SOLID
    WidgetLineWidth:
      description: Width of line displayed.
      enum:
        - normal
        - thick
        - thin
      type: string
      x-enum-varnames:
        - NORMAL
        - THICK
        - THIN
    WidgetLiveSpan:
      description: The available timeframes depend on the widget you are using.
      enum:
        - 1m
        - 5m
        - 10m
        - 15m
        - 30m
        - 1h
        - 4h
        - 1d
        - 2d
        - 1w
        - 1mo
        - 3mo
        - 6mo
        - 1y
        - alert
      type: string
      x-enum-varnames:
        - PAST_ONE_MINUTE
        - PAST_FIVE_MINUTES
        - PAST_TEN_MINUTES
        - PAST_FIFTEEN_MINUTES
        - PAST_THIRTY_MINUTES
        - PAST_ONE_HOUR
        - PAST_FOUR_HOURS
        - PAST_ONE_DAY
        - PAST_TWO_DAYS
        - PAST_ONE_WEEK
        - PAST_ONE_MONTH
        - PAST_THREE_MONTHS
        - PAST_SIX_MONTHS
        - PAST_ONE_YEAR
        - ALERT
    WidgetMargin:
      description: |-
        Size of the margins around the image.
        **Note**: `small` and `large` values are deprecated.
      enum:
        - sm
        - md
        - lg
        - small
        - large
      type: string
      x-enum-varnames:
        - SM
        - MD
        - LG
        - SMALL
        - LARGE
    WidgetMarker:
      description: Markers allow you to add visual conditional formatting for your
        graphs.
      properties:
        display_type:
          description: |
            Combination of:
              - A severity error, warning, ok, or info
              - A line type: dashed, solid, or bold
            In this case of a Distribution widget, this can be set to be `x_axis_percentile`.
          example: error dashed
          type: string
        label:
          description: Label to display over the marker.
          example: Error threshold
          type: string
        time:
          description: Timestamp for the widget.
          type: string
        value:
          description: Value to apply. Can be a single value y = 15 or a range of
            values 0 < y < 10.
          example: y = 15
          type: string
      required:
        - value
      type: object
    WidgetMessageDisplay:
      description: Amount of log lines to display
      enum:
        - inline
        - expanded-md
        - expanded-lg
      type: string
      x-enum-varnames:
        - INLINE
        - EXPANDED_MEDIUM
        - EXPANDED_LARGE
    WidgetMonitorSummaryDisplayFormat:
      description: What to display on the widget.
      enum:
        - counts
        - countsAndList
        - list
      type: string
      x-enum-varnames:
        - COUNTS
        - COUNTS_AND_LIST
        - LIST
    WidgetMonitorSummarySort:
      description: Widget sorting methods.
      enum:
        - name
        - group
        - status
        - tags
        - triggered
        - group,asc
        - group,desc
        - name,asc
        - name,desc
        - status,asc
        - status,desc
        - tags,asc
        - tags,desc
        - triggered,asc
        - triggered,desc
      example: name,asc
      type: string
      x-enum-varnames:
        - NAME
        - GROUP
        - STATUS
        - TAGS
        - TRIGGERED
        - GROUP_ASCENDING
        - GROUP_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
        - STATUS_ASCENDING
        - STATUS_DESCENDING
        - TAGS_ASCENDING
        - TAGS_DESCENDING
        - TRIGGERED_ASCENDING
        - TRIGGERED_DESCENDING
    WidgetNodeType:
      description: Which type of node to use in the map.
      enum:
        - host
        - container
      type: string
      x-enum-varnames:
        - HOST
        - CONTAINER
    WidgetOrderBy:
      description: What to order by.
      enum:
        - change
        - name
        - present
        - past
      type: string
      x-enum-varnames:
        - CHANGE
        - NAME
        - PRESENT
        - PAST
    WidgetPalette:
      description: Color palette to apply.
      enum:
        - blue
        - custom_bg
        - custom_image
        - custom_text
        - gray_on_white
        - grey
        - green
        - orange
        - red
        - red_on_white
        - white_on_gray
        - white_on_green
        - green_on_white
        - white_on_red
        - white_on_yellow
        - yellow_on_white
        - black_on_light_yellow
        - black_on_light_green
        - black_on_light_red
      type: string
      x-enum-varnames:
        - BLUE
        - CUSTOM_BACKGROUND
        - CUSTOM_IMAGE
        - CUSTOM_TEXT
        - GRAY_ON_WHITE
        - GREY
        - GREEN
        - ORANGE
        - RED
        - RED_ON_WHITE
        - WHITE_ON_GRAY
        - WHITE_ON_GREEN
        - GREEN_ON_WHITE
        - WHITE_ON_RED
        - WHITE_ON_YELLOW
        - YELLOW_ON_WHITE
    WidgetRequestStyle:
      description: Define request widget style.
      properties:
        line_type:
          $ref: '#/components/schemas/WidgetLineType'
        line_width:
          $ref: '#/components/schemas/WidgetLineWidth'
        palette:
          description: Color palette to apply to the widget.
          type: string
      type: object
    WidgetServiceSummaryDisplayFormat:
      description: Number of columns to display.
      enum:
        - one_column
        - two_column
        - three_column
      type: string
      x-enum-varnames:
        - ONE_COLUMN
        - TWO_COLUMN
        - THREE_COLUMN
    WidgetSizeFormat:
      description: Size of the widget.
      enum:
        - small
        - medium
        - large
      type: string
      x-enum-varnames:
        - SMALL
        - MEDIUM
        - LARGE
    WidgetSort:
      description: Widget sorting methods.
      enum:
        - asc
        - desc
      example: desc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    WidgetStyle:
      description: Widget style definition.
      properties:
        palette:
          description: Color palette to apply to the widget.
          type: string
      type: object
    WidgetSummaryType:
      description: Which summary type should be used.
      enum:
        - monitors
        - groups
        - combined
      type: string
      x-enum-varnames:
        - MONITORS
        - GROUPS
        - COMBINED
    WidgetTextAlign:
      description: How to align the text on the widget.
      enum:
        - center
        - left
        - right
      type: string
      x-enum-varnames:
        - CENTER
        - LEFT
        - RIGHT
    WidgetTickEdge:
      description: Define how you want to align the text on the widget.
      enum:
        - bottom
        - left
        - right
        - top
      type: string
      x-enum-varnames:
        - BOTTOM
        - LEFT
        - RIGHT
        - TOP
    WidgetTime:
      description: Time setting for the widget.
      properties:
        live_span:
          $ref: '#/components/schemas/WidgetLiveSpan'
      type: object
    WidgetTimeWindows:
      description: Define a time window.
      enum:
        - 7d
        - 30d
        - 90d
        - week_to_date
        - previous_week
        - month_to_date
        - previous_month
        - global_time
      type: string
      x-enum-varnames:
        - SEVEN_DAYS
        - THIRTY_DAYS
        - NINETY_DAYS
        - WEEK_TO_DATE
        - PREVIOUS_WEEK
        - MONTH_TO_DATE
        - PREVIOUS_MONTH
        - GLOBAL_TIME
    WidgetVerticalAlign:
      description: Vertical alignment.
      enum:
        - center
        - top
        - bottom
      type: string
      x-enum-varnames:
        - CENTER
        - TOP
        - BOTTOM
    WidgetViewMode:
      description: Define how you want the SLO to be displayed.
      enum:
        - overall
        - component
        - both
      type: string
      x-enum-varnames:
        - OVERALL
        - COMPONENT
        - BOTH
    WidgetVizType:
      description: Whether to display the Alert Graph as a timeseries or a top list.
      enum:
        - timeseries
        - toplist
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOPLIST
    CheckCanDeleteMonitorResponse_data:
      description: Wrapper object with the list of monitor IDs.
      example: {}
      properties:
        ok:
          description: An array of of Monitor IDs that can be safely deleted.
          items:
            description: ID of a monitor that can be safely deleted.
            format: int64
            type: integer
          type: array
      type: object
    CheckCanDeleteSLOResponse_data:
      description: An array of service level objective objects.
      example:
        ok:
          - ok
          - ok
      properties:
        ok:
          description: An array of of SLO IDs that can be safely deleted.
          items:
            description: An SLO ID.
            type: string
          type: array
      type: object
    FormulaAndFunctionEventQueryDefinition_compute:
      description: Compute options.
      properties:
        aggregation:
          $ref: '#/components/schemas/FormulaAndFunctionEventAggregation'
        interval:
          description: A time interval in milliseconds.
          example: 60000
          format: int64
          type: integer
        metric:
          description: Measurable attribute to compute.
          example: '@duration'
          type: string
      required:
        - aggregation
      type: object
    FormulaAndFunctionEventQueryDefinition_search:
      description: Search options.
      properties:
        query:
          description: Events search string.
          example: service:query
          type: string
      required:
        - query
      type: object
    FormulaAndFunctionEventQueryGroupBy_sort:
      description: Options for sorting group by results.
      properties:
        aggregation:
          $ref: '#/components/schemas/FormulaAndFunctionEventAggregation'
        metric:
          description: Metric used for sorting group by results.
          type: string
        order:
          $ref: '#/components/schemas/QuerySortOrder'
      required:
        - aggregation
      type: object
    GeomapWidgetDefinition_style:
      description: The style to apply to the widget.
      example:
        palette: hostmap_blues
        palette_flip: false
      properties:
        palette:
          description: The color palette to apply to the widget.
          example: hostmap_blues
          type: string
        palette_flip:
          description: Whether to flip the palette tones.
          example: false
          type: boolean
      required:
        - palette
        - palette_flip
      type: object
    GeomapWidgetDefinition_view:
      description: The view of the world that the map should render.
      example:
        focus: WORLD
      properties:
        focus:
          description: The 2-letter ISO code of a country to focus the map on. Or
            `WORLD`.
          example: WORLD
          type: string
      required:
        - focus
      type: object
    Host_meta:
      description: Metadata associated with your host.
      example:
        nixV:
          - Ubuntu
          - Ubuntu
      properties:
        nixV:
          description: Array of Unix versions.
          items:
            description: Version name.
            example: Ubuntu
            type: string
          type: array
      type: object
    Host_metrics:
      description: Host Metrics collected.
      example:
        load: 0.5
        cpu: 99.0
        iowait: 3.2
      properties:
        cpu:
          description: The percent of CPU used (everything but idle).
          example: 99.0
          format: double
          type: number
        iowait:
          description: The percent of CPU spent waiting on the IO (not reported for
            all platforms).
          example: 3.2
          format: double
          type: number
        load:
          description: The system load over the last 15 minutes.
          example: 0.5
          format: double
          type: number
      type: object
    HostMapWidgetDefinition_requests:
      description: List of definitions.
      example: {}
      properties:
        fill:
          $ref: '#/components/schemas/HostMapRequest'
        size:
          $ref: '#/components/schemas/HostMapRequest'
      type: object
    HostMapWidgetDefinition_style:
      description: The style to apply to the widget.
      properties:
        fill_max:
          description: Max value to use to color the map.
          type: string
        fill_min:
          description: Min value to use to color the map.
          type: string
        palette:
          description: Color palette to apply to the widget.
          type: string
        palette_flip:
          description: Whether to flip the palette tones.
          type: boolean
      type: object
    Log_content:
      description: JSON object containing all log attributes and their associated
        values.
      example:
        service: agent
        host: i-0123
        attributes:
          customAttribute: 123
          duration: 2345
        message: Host connected to remote
        tags:
          - team:A
        timestamp: 2020-05-26T13:36:14Z
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from your log.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        host:
          description: Name of the machine from where the logs are being sent.
          example: i-0123
          type: string
        message:
          description: |-
            The message [reserved attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)
            of your log. By default, Datadog ingests the value of the message attribute as the body of the log entry.
            That value is then highlighted and displayed in the Logstream, where it is indexed for full text search.
          example: Host connected to remote
          type: string
        service:
          description: |-
            The name of the application or service generating the log events.
            It is used to switch from Logs to APM, so make sure you define the same
            value when you use both products.
          example: agent
          type: string
        tags:
          description: Array of tags associated with your log.
          example:
            - team:A
          format: array
          items:
            description: Tag associated with your log.
            format: string
          type: array
        timestamp:
          description: Timestamp of your log.
          example: 2020-05-26T13:36:14Z
          format: date-time
          type: string
      type: object
    LogQueryDefinition_search:
      description: The query being made on the logs.
      properties:
        query:
          description: Search value to apply.
          example: ""
          type: string
      required:
        - query
      type: object
    LogQueryDefinitionGroupBy_sort:
      description: Define a sorting method.
      properties:
        aggregation:
          description: The aggregation method.
          example: avg
          type: string
        facet:
          description: Facet name.
          example: '@string_query.interval'
          type: string
        order:
          $ref: '#/components/schemas/WidgetSort'
      required:
        - aggregation
        - order
      type: object
    LogsByRetention_orgs:
      description: Indexed logs usage summary for each organization for each retention
        period with usage.
      example:
        usage:
          - usage:
              - logs_indexed_logs_usage_sum: 6
                logs_live_indexed_logs_usage_sum: 6
                logs_rehydrated_indexed_logs_usage_sum: 5
                retention: retention
              - logs_indexed_logs_usage_sum: 6
                logs_live_indexed_logs_usage_sum: 6
                logs_rehydrated_indexed_logs_usage_sum: 5
                retention: retention
          - usage:
              - logs_indexed_logs_usage_sum: 6
                logs_live_indexed_logs_usage_sum: 6
                logs_rehydrated_indexed_logs_usage_sum: 5
                retention: retention
              - logs_indexed_logs_usage_sum: 6
                logs_live_indexed_logs_usage_sum: 6
                logs_rehydrated_indexed_logs_usage_sum: 5
                retention: retention
      properties:
        usage:
          description: Indexed logs usage summary for each organization.
          items:
            $ref: '#/components/schemas/LogsByRetentionOrgUsage'
          type: array
      type: object
    LogsListRequest_time:
      description: Timeframe to retrieve the log from.
      example:
        timezone: timezone
        from: 2020-02-02T02:02:02Z
        to: 2020-02-02T20:20:20Z
      properties:
        from:
          description: Minimum timestamp for requested logs.
          example: 2020-02-02T02:02:02Z
          format: date-time
          type: string
        timezone:
          description: |-
            Timezone can be specified both as an offset (e.g. "UTC+03:00")
            or a regional zone (e.g. "Europe/Paris").
          type: string
        to:
          description: Maximum timestamp for requested logs.
          example: 2020-02-02T20:20:20Z
          format: date-time
          type: string
      required:
        - from
        - to
      type: object
    MetricSearchResponse_results:
      description: Search result.
      example:
        metrics:
          - metrics
          - metrics
      properties:
        metrics:
          description: List of metrics that match the search query.
          items:
            description: Metric name.
            type: string
          type: array
      type: object
    MonitorGroupSearchResponse_counts:
      description: The counts of monitor groups per different criteria.
      properties:
        status:
          description: Search facets.
          items:
            description: A facet item.
            properties:
              count:
                description: The number of found monitors with the listed value.
                format: int64
                readOnly: true
                type: integer
              name:
                description: The facet value.
                readOnly: true
            type: object
          type: array
        type:
          description: Search facets.
          items:
            description: A facet item.
            properties:
              count:
                description: The number of found monitors with the listed value.
                format: int64
                readOnly: true
                type: integer
              name:
                description: The facet value.
                readOnly: true
            type: object
          type: array
      readOnly: true
      type: object
    MonitorOptions_aggregation:
      description: Type of aggregation performed in the monitor query.
      example:
        metric: metrics.name
        group_by: host
        type: count
      properties:
        group_by:
          description: Group to break down the monitor on.
          example: host
          type: string
        metric:
          description: Metric name used in the monitor.
          example: metrics.name
          type: string
        type:
          description: Metric type used in the monitor.
          example: count
          type: string
      readOnly: true
      type: object
    MonitorSearchResponse_counts:
      description: The counts of monitors per different criteria.
      properties:
        muted:
          description: Search facets.
          items:
            description: A facet item.
            properties:
              count:
                description: The number of found monitors with the listed value.
                format: int64
                readOnly: true
                type: integer
              name:
                description: The facet value.
                readOnly: true
            type: object
          type: array
        status:
          description: Search facets.
          items:
            description: A facet item.
            properties:
              count:
                description: The number of found monitors with the listed value.
                format: int64
                readOnly: true
                type: integer
              name:
                description: The facet value.
                readOnly: true
            type: object
          type: array
        tag:
          description: Search facets.
          items:
            description: A facet item.
            properties:
              count:
                description: The number of found monitors with the listed value.
                format: int64
                readOnly: true
                type: integer
              name:
                description: The facet value.
                readOnly: true
            type: object
          type: array
        type:
          description: Search facets.
          items:
            description: A facet item.
            properties:
              count:
                description: The number of found monitors with the listed value.
                format: int64
                readOnly: true
                type: integer
              name:
                description: The facet value.
                readOnly: true
            type: object
          type: array
      readOnly: true
      type: object
    NotebooksResponse_meta:
      description: Metadata returned by the API.
      example:
        page:
          total_count: 0
          total_filtered_count: 6
      properties:
        page:
          $ref: '#/components/schemas/NotebooksResponsePage'
      type: object
    Organization_settings_saml:
      description: |-
        Set the boolean property enabled to enable or disable single sign on with SAML.
        See the SAML documentation for more information about all SAML settings.
      example:
        enabled: false
      properties:
        enabled:
          description: Whether or not SAML is enabled for this organization.
          example: false
          type: boolean
      type: object
    Organization_settings_saml_autocreate_users_domains:
      description: Has two properties, `enabled` (boolean) and `domains`, which is
        a list of domains without the @ symbol.
      example:
        domains:
          - example.com
          - example.com
        enabled: false
      properties:
        domains:
          description: List of domains where the SAML automated user creation is enabled.
          items:
            description: Domain to automate user creation from.
            example: example.com
            type: string
          type: array
        enabled:
          description: Whether or not the automated user creation based on SAML domain
            is enabled.
          example: false
          type: boolean
      type: object
    Organization_settings_saml_idp_initiated_login:
      description: Has one property enabled (boolean).
      example:
        enabled: false
      properties:
        enabled:
          description: |-
            Whether SAML IdP initiated login is enabled, learn more
            in the [SAML documentation](https://docs.datadoghq.com/account_management/saml/#idp-initiated-login).
          example: false
          type: boolean
      type: object
    Organization_settings_saml_strict_mode:
      description: Has one property enabled (boolean).
      example:
        enabled: false
      properties:
        enabled:
          description: |-
            Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.
            Learn more on the [SAML Strict documentation](https://docs.datadoghq.com/account_management/saml/#saml-strict).
          example: false
          type: boolean
      type: object
    Organization_settings:
      description: A JSON array of settings.
      example:
        saml_idp_initiated_login:
          enabled: false
        saml_idp_endpoint: https://my.saml.endpoint
        saml_can_be_enabled: false
        private_widget_share: false
        saml_login_url: https://my.saml.login.url
        saml:
          enabled: false
        saml_autocreate_users_domains:
          domains:
            - example.com
            - example.com
          enabled: false
        saml_idp_metadata_uploaded: false
        saml_strict_mode:
          enabled: false
        saml_autocreate_access_role: st
      properties:
        private_widget_share:
          description: Whether or not the organization users can share widgets outside
            of Datadog.
          example: false
          type: boolean
        saml:
          $ref: '#/components/schemas/Organization_settings_saml'
        saml_autocreate_access_role:
          $ref: '#/components/schemas/AccessRole'
        saml_autocreate_users_domains:
          $ref: '#/components/schemas/Organization_settings_saml_autocreate_users_domains'
        saml_can_be_enabled:
          description: Whether or not SAML can be enabled for this organization.
          example: false
          type: boolean
        saml_idp_endpoint:
          description: Identity provider endpoint for SAML authentication.
          example: https://my.saml.endpoint
          type: string
        saml_idp_initiated_login:
          $ref: '#/components/schemas/Organization_settings_saml_idp_initiated_login'
        saml_idp_metadata_uploaded:
          description: Whether or not a SAML identity provider metadata file was provided
            to the Datadog organization.
          example: false
          type: boolean
        saml_login_url:
          description: URL for SAML logging.
          example: https://my.saml.login.url
          type: string
        saml_strict_mode:
          $ref: '#/components/schemas/Organization_settings_saml_strict_mode'
      type: object
    SLOBulkDeleteResponse_data:
      description: An array of service level objective objects.
      example:
        deleted:
          - deleted
          - deleted
        updated:
          - updated
          - updated
      properties:
        deleted:
          description: |-
            An array of service level objective object IDs that indicates
            which objects that were completely deleted.
          items:
            description: A deleted SLO ID.
            type: string
          type: array
        updated:
          description: |-
            An array of service level objective object IDs that indicates
            which objects that were modified (objects for which at least one
            threshold was deleted, but that were not completely deleted).
          items:
            description: An updated SLO ID.
            type: string
          type: array
      type: object
    SLOHistoryMetricsSeries_metadata:
      description: Query metadata.
      example: {}
      properties:
        aggr:
          description: Query aggregator function.
          type: string
        expression:
          description: Query expression.
          type: string
        metric:
          description: Query metric used.
          type: string
        query_index:
          description: Query index from original combined query.
          format: int64
          type: integer
        scope:
          description: Query scope.
          type: string
        unit:
          description: |-
            An array of metric units that contains up to two unit objects.
            For example, bytes represents one unit object and bytes per second represents two unit objects.
            If a metric query only has one unit object, the second array element is null.
          example:
            - family: bytes
              id: 2
              name: byte
              plural: bytes
              scale_factor: 1.0
              short_name: B
            - null
          items:
            $ref: '#/components/schemas/SLOHistoryMetricsSeriesMetadataUnit'
          nullable: true
          type: array
      type: object
    SLOHistoryResponse_data:
      description: An array of service level objective objects.
      example:
        thresholds: {}
        to_ts: 1615928790
        series:
          res_type: ""
          resp_version: 0
          times: []
          query: ""
          interval: 0
          message: ""
          denominator:
            metadata: {}
            values: []
            count: 0
            sum: 0.0
          numerator:
            metadata: {}
            values: []
            count: 0
            sum: 0.0
        type_id: 0
        from_ts: 1615323990
        group_by: []
        groups: []
        overall:
          preview: true
          monitor_modified: 1615867200
          sli_value: 99.99
          precision:
            "30d": 1
            "7d": 2
          error_budget_remaining:
            "7d": 100.0
          name: string
          span_precision: 2
          history:
            - - - 1579212382
                - 0
            - - - 1579212382
                - 0
          monitor_type: string
          errors: []
          group: name
          uptime: 99.99
        type: metric
        monitors: []
      properties:
        from_ts:
          description: The `from` timestamp in epoch seconds.
          example: 1615323990
          format: int64
          type: integer
        group_by:
          description: |-
            For `metric` based SLOs where the query includes a group-by clause, this represents the list of grouping parameters.

            This is not included in responses for `monitor` based SLOs.
          example: []
          items:
            description: A grouping parameter.
            type: string
          type: array
        groups:
          description: |-
            For grouped SLOs, this represents SLI data for specific groups.

            This is not included in the responses for `metric` based SLOs.
          example: []
          items:
            $ref: '#/components/schemas/SLOHistorySLIData'
          type: array
        monitors:
          description: |-
            For multi-monitor SLOs, this represents SLI data for specific monitors.

            This is not included in the responses for `metric` based SLOs.
          example: []
          items:
            $ref: '#/components/schemas/SLOHistorySLIData'
          type: array
        overall:
          $ref: '#/components/schemas/SLOHistorySLIData'
        series:
          $ref: '#/components/schemas/SLOHistoryMetrics'
        thresholds:
          additionalProperties:
            $ref: '#/components/schemas/SLOThreshold'
          description: mapping of string timeframe to the SLO threshold.
          example: {}
          type: object
        to_ts:
          description: The `to` timestamp in epoch seconds.
          example: 1615928790
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SLOType'
        type_id:
          $ref: '#/components/schemas/SLOTypeNumeric'
      type: object
    SLOListResponse_metadata_page:
      description: The object containing information about the pages of the list of
        SLOs.
      example:
        total_count: 5
        total_filtered_count: 5
      properties:
        total_count:
          description: The total number of resources that could be retrieved ignoring
            the parameters and filters in the request.
          format: int64
          type: integer
        total_filtered_count:
          description: The total number of resources that match the parameters and
            filters in the request. This attribute can be used by a client to determine
            the total number of pages.
          format: int64
          type: integer
      type: object
    SLOListResponse_metadata:
      description: The metadata object containing additional information about the
        list of SLOs.
      example:
        page:
          total_count: 5
          total_filtered_count: 5
      properties:
        page:
          $ref: '#/components/schemas/SLOListResponse_metadata_page'
      type: object
    SLOResponse_data:
      description: |-
        A service level objective object includes a service level indicator, thresholds
        for one or more timeframes, and metadata (`name`, `description`, `tags`, etc.).
      example:
        creator:
          name: name
          handle: handle
          email: email
        query:
          denominator: sum:my.custom.metric{*}.as_count()
          numerator: sum:my.custom.metric{type:good}.as_count()
        created_at: 0
        description: description
        groups:
          - env:prod
          - role:mysql
        type: metric
        tags:
          - env:prod
          - app:core
        thresholds:
          - target: 95
            timeframe: 7d
          - target: 95
            timeframe: 30d
            warning: 97
        monitor_ids:
          - 1
          - 1
        name: Custom Metric SLO
        configured_alert_ids:
          - 123
          - 456
          - 789
        id: id
        modified_at: 6
        monitor_tags:
          - monitor_tags
          - monitor_tags
      properties:
        configured_alert_ids:
          description: A list of SLO monitors IDs that reference this SLO. This field
            is returned only when `with_configured_alert_ids` parameter is true in
            query.
          example:
            - 123
            - 456
            - 789
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        created_at:
          description: |-
            Creation timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creator'
        description:
          description: |-
            A user-defined description of the service level objective.

            Always included in service level objective responses (but may be `null`).
            Optional in create/update requests.
          nullable: true
          type: string
        groups:
          description: |-
            A list of (up to 20) monitor groups that narrow the scope of a monitor service level objective.

            Included in service level objective responses if it is not empty. Optional in
            create/update requests for monitor service level objectives, but may only be
            used when then length of the `monitor_ids` field is one.
          example:
            - env:prod
            - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        id:
          description: |-
            A unique identifier for the service level objective object.

            Always included in service level objective responses.
          readOnly: true
          type: string
        modified_at:
          description: |-
            Modification timestamp (UNIX time in seconds)

            Always included in service level objective responses.
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: |-
            A list of monitor ids that defines the scope of a monitor service level
            objective. **Required if type is `monitor`**.
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        monitor_tags:
          description: |-
            The union of monitor tags for all monitors referenced by the `monitor_ids`
            field.
            Always included in service level objective responses for monitor service level
            objectives (but may be empty). Ignored in create/update requests. Does not
            affect which monitors are included in the service level objective (that is
            determined entirely by the `monitor_ids` field).
          items:
            description: A monitor tag.
            type: string
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        tags:
          description: |-
            A list of tags associated with this service level objective.
            Always included in service level objective responses (but may be empty).
            Optional in create/update requests.
          example:
            - env:prod
            - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        thresholds:
          description: |-
            The thresholds (timeframes and associated targets) for this service level
            objective object.
          example:
            - target: 95
              timeframe: 7d
            - target: 95
              timeframe: 30d
              warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        type:
          $ref: '#/components/schemas/SLOType'
      type: object
    ScatterPlotWidgetDefinition_requests:
      description: Widget definition.
      example:
        x:
          q: system.cpu.user
        y:
          q: system.mem.used
      properties:
        x:
          $ref: '#/components/schemas/ScatterPlotRequest'
        y:
          $ref: '#/components/schemas/ScatterPlotRequest'
      required:
        - x
        - "y"
      type: object
    SlackIntegrationChannel_display:
      description: Configuration options for what is shown in an alert event message.
      example:
        notified: true
        message: true
        snapshot: true
        tags: true
      properties:
        message:
          default: true
          description: Show the main body of the alert event.
          type: boolean
        notified:
          default: true
          description: Show the list of @-handles in the alert event.
          type: boolean
        snapshot:
          default: true
          description: Show the alert event's snapshot image.
          type: boolean
        tags:
          default: true
          description: Show the scopes on which the monitor alerted.
          type: boolean
      type: object
    SyntheticsAPITestResultFull_check:
      description: Object describing the API test configuration.
      example:
        config:
          request:
            headers:
              key: headers
            noSavingResponseBody: true
            shouldTrackHops: true
            basicAuth:
              password: ""
              username: ""
            query: '{}'
            certificate:
              cert:
                filename: filename
                content: content
                updatedAt: updatedAt
              key:
                filename: filename
                content: content
                updatedAt: updatedAt
            allow_insecure: true
            body: body
            timeout: 5.962133916683182
            url: url
            port: 1
            dnsServerPort: 5249
            host: host
            numberOfPackets: 6
            dnsServer: dnsServer
          variables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
          assertions: []
          configVariables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsTestConfig'
      required:
        - config
      type: object
    SyntheticsAPITestResultShort_result:
      description: Result of the last API test run.
      example:
        timings:
          redirect: 7.061401241503109
          tcp: 3.616076749251911
          handshake: 2.3021358869347655
          download: 5.962133916683182
          total: 2.027123023002322
          wait: 4.145608029883936
          dns: 1.4658129805029452
          firstByte: 5.637376656633329
          ssl: 9.301444243932576
        passed: true
      properties:
        passed:
          description: Describes if the test run has passed or failed.
          type: boolean
        timings:
          $ref: '#/components/schemas/SyntheticsTiming'
      type: object
    SyntheticsAssertionJSONPathTarget_target:
      description: Composed target for `validatesJSONPath` operator.
      properties:
        jsonPath:
          description: The JSON path to assert.
          type: string
        operator:
          description: The specific operator to use on the path.
          type: string
        targetValue:
          description: The path target value to compare to.
      type: object
    SyntheticsBrowserTestResultFull_check:
      description: Object describing the browser test configuration.
      example:
        config:
          request:
            headers:
              key: headers
            noSavingResponseBody: true
            shouldTrackHops: true
            basicAuth:
              password: ""
              username: ""
            query: '{}'
            certificate:
              cert:
                filename: filename
                content: content
                updatedAt: updatedAt
              key:
                filename: filename
                content: content
                updatedAt: updatedAt
            allow_insecure: true
            body: body
            timeout: 5.962133916683182
            url: url
            port: 1
            dnsServerPort: 5249
            host: host
            numberOfPackets: 6
            dnsServer: dnsServer
          variables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
          assertions: []
          configVariables:
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
            - name: VARIABLE_NAME
              pattern: pattern
              id: id
              example: example
      properties:
        config:
          $ref: '#/components/schemas/SyntheticsTestConfig'
      required:
        - config
      type: object
    SyntheticsBrowserTestResultShort_result:
      description: Object with the result of the last browser test run.
      example:
        duration: 1.4658129805029452
        stepCountTotal: 2
        device:
          name: ""
          width: 0
          isMobile: true
          height: 0
        errorCount: 5
        stepCountCompleted: 5
      properties:
        device:
          $ref: '#/components/schemas/SyntheticsDevice'
        duration:
          description: Length in second of the browser test run.
          format: double
          type: number
        errorCount:
          description: Amount of errors collected for a single browser test run.
          format: int64
          type: integer
        stepCountCompleted:
          description: Amount of browser test steps completed before failing.
          format: int64
          type: integer
        stepCountTotal:
          description: Total amount of browser test steps.
          format: int64
          type: integer
      type: object
    SyntheticsCITest_metadata_ci:
      description: Describe CI provider.
      example:
        pipeline: pipeline
        provider: provider
      properties:
        pipeline:
          description: Name of the pipeline.
          type: string
        provider:
          description: Name of the CI provider.
          type: string
      type: object
    SyntheticsCITest_metadata_git:
      description: Git information.
      example:
        commit_sha: commit_sha
        branch: branch
      properties:
        branch:
          description: Branch name.
          type: string
        commit_sha:
          description: Commit SHA.
          type: string
      type: object
    SyntheticsCITest_metadata:
      description: Metadata for the Synthetics tests run
      example:
        git:
          commit_sha: commit_sha
          branch: branch
        ci:
          pipeline: pipeline
          provider: provider
      properties:
        ci:
          $ref: '#/components/schemas/SyntheticsCITest_metadata_ci'
        git:
          $ref: '#/components/schemas/SyntheticsCITest_metadata_git'
      type: object
    SyntheticsGlobalVariable_parse_test_options:
      description: Parser options to use for retrieving a Synthetics global variable
        from a Synthetics Test. Used in conjunction with `parse_test_public_id`.
      example:
        field: content-type
        parser:
          type: regex
          value: .*
      properties:
        field:
          description: When type is `http_header`, name of the header to use to extract
            the value.
          example: content-type
          type: string
        parser:
          $ref: '#/components/schemas/SyntheticsVariableParser'
        type:
          $ref: '#/components/schemas/SyntheticsGlobalVariableParseTestOptionsType'
      required:
        - parser
        - type
      type: object
    SyntheticsPrivateLocation_secrets_authentication:
      description: Authentication part of the secrets.
      example:
        id: id
        key: key
      properties:
        id:
          description: Access key for the private location.
          readOnly: true
          type: string
        key:
          description: Secret access key for the private location.
          readOnly: true
          type: string
      type: object
    SyntheticsPrivateLocation_secrets_config_decryption:
      description: Private key for the private location.
      example:
        key: key
      properties:
        key:
          description: Private key for the private location.
          readOnly: true
          type: string
      type: object
    SyntheticsPrivateLocation_secrets:
      description: Secrets for the private location. Only present in the response
        when creating the private location.
      example:
        config_decryption:
          key: key
        authentication:
          id: id
          key: key
      properties:
        authentication:
          $ref: '#/components/schemas/SyntheticsPrivateLocation_secrets_authentication'
        config_decryption:
          $ref: '#/components/schemas/SyntheticsPrivateLocation_secrets_config_decryption'
      readOnly: true
      type: object
    SyntheticsPrivateLocationCreationResponse_result_encryption:
      description: Public key for the result encryption.
      example:
        id: id
        key: key
      properties:
        id:
          description: Fingerprint for the encryption key.
          type: string
        key:
          description: Public key for result encryption.
          type: string
      type: object
    SyntheticsSSLCertificate_issuer:
      description: Object describing the issuer of a SSL certificate.
      example:
        ST: ST
        C: C
        OU: OU
        CN: CN
        L: L
        O: O
      properties:
        C:
          description: Country Name that issued the certificate.
          type: string
        CN:
          description: Common Name that issued certificate.
          type: string
        L:
          description: Locality that issued the certificate.
          type: string
        O:
          description: Organization that issued the certificate.
          type: string
        OU:
          description: Organizational Unit that issued the certificate.
          type: string
        ST:
          description: State Or Province Name that issued the certificate.
          type: string
      type: object
    SyntheticsSSLCertificate_subject:
      description: Object describing the SSL certificate used for the test.
      example:
        ST: ST
        C: C
        OU: OU
        CN: CN
        altName: altName
        L: L
        O: O
      properties:
        C:
          description: Country Name associated with the certificate.
          type: string
        CN:
          description: Common Name that associated with the certificate.
          type: string
        L:
          description: Locality associated with the certificate.
          type: string
        O:
          description: Organization associated with the certificate.
          type: string
        OU:
          description: Organizational Unit associated with the certificate.
          type: string
        ST:
          description: State Or Province Name associated with the certificate.
          type: string
        altName:
          description: Subject Alternative Name associated with the certificate.
          type: string
      type: object
    SyntheticsTestOptions_monitor_options:
      description: |-
        Object containing the options for a Synthetic test as a monitor
        (for example, renotification).
      example:
        renotify_interval: 1339
      properties:
        renotify_interval:
          description: |-
            Time interval before renotifying if the test is still failing
            (in minutes).
          format: int64
          maximum: 1440
          minimum: 0
          type: integer
      type: object
    WidgetFormula_limit:
      description: Options for limiting results returned.
      properties:
        count:
          description: Number of results to return.
          format: int64
          type: integer
        order:
          $ref: '#/components/schemas/QuerySortOrder'
      type: object



    ### v2
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    APIKeyCreateAttributes:
      description: Attributes used to create an API Key.
      example:
        name: API Key for submitting metrics
      properties:
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
      required:
        - name
      type: object
    APIKeyCreateData:
      description: Object used to create an API key.
      example:
        attributes:
          name: API Key for submitting metrics
        type: api_keys
      properties:
        attributes:
          $ref: '#/components/schemas/APIKeyCreateAttributes'
        type:
          $ref: '#/components/schemas/APIKeysType'
      required:
        - attributes
        - type
      type: object
    APIKeyCreateRequest:
      description: Request used to create an API key.
      example:
        data:
          attributes:
            name: API Key for submitting metrics
          type: api_keys
      properties:
        data:
          $ref: '#/components/schemas/APIKeyCreateData'
      required:
        - data
      type: object
    APIKeyRelationships:
      description: Resources related to the API key.
      example:
        modified_by:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
        created_by:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        modified_by:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    APIKeyResponse:
      description: Response for retrieving an API key.
      example:
        data:
          relationships:
            modified_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            last4: abcd
            name: API Key for submitting metrics
            created_at: 2020-11-23T10:00:00.000Z
            modified_at: 2020-11-23T10:00:00.000Z
            key: key
          id: id
          type: api_keys
        included:
          - null
          - null
      properties:
        data:
          $ref: '#/components/schemas/FullAPIKey'
        included:
          description: Array of objects related to the API key.
          items:
            $ref: '#/components/schemas/APIKeyResponseIncludedItem'
          type: array
      type: object
    APIKeyResponseIncludedItem:
      description: An object related to an API key.
      oneOf:
        - $ref: '#/components/schemas/User'
      type: object
    APIKeyUpdateAttributes:
      description: Attributes used to update an API Key.
      example:
        name: API Key for submitting metrics
      properties:
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
      required:
        - name
      type: object
    APIKeyUpdateData:
      description: Object used to update an API key.
      example:
        attributes:
          name: API Key for submitting metrics
        id: 00112233-4455-6677-8899-aabbccddeeff
        type: api_keys
      properties:
        attributes:
          $ref: '#/components/schemas/APIKeyUpdateAttributes'
        id:
          description: ID of the API key.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        type:
          $ref: '#/components/schemas/APIKeysType'
      required:
        - attributes
        - id
        - type
      type: object
    APIKeyUpdateRequest:
      description: Request used to update an API key.
      example:
        data:
          attributes:
            name: API Key for submitting metrics
          id: 00112233-4455-6677-8899-aabbccddeeff
          type: api_keys
      properties:
        data:
          $ref: '#/components/schemas/APIKeyUpdateData'
      required:
        - data
      type: object
    APIKeysResponse:
      description: Response for a list of API keys.
      example:
        data:
          - relationships:
              modified_by:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              created_by:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
            attributes:
              last4: abcd
              name: API Key for submitting metrics
              created_at: 2020-11-23T10:00:00.000Z
              modified_at: 2020-11-23T10:00:00.000Z
            id: id
            type: api_keys
          - relationships:
              modified_by:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              created_by:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
            attributes:
              last4: abcd
              name: API Key for submitting metrics
              created_at: 2020-11-23T10:00:00.000Z
              modified_at: 2020-11-23T10:00:00.000Z
            id: id
            type: api_keys
        included:
          - null
          - null
      properties:
        data:
          description: Array of API keys.
          items:
            $ref: '#/components/schemas/PartialAPIKey'
          type: array
        included:
          description: Array of objects related to the API key.
          items:
            $ref: '#/components/schemas/APIKeyResponseIncludedItem'
          type: array
      type: object
    APIKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - -created_at
        - last4
        - -last4
        - modified_at
        - -modified_at
        - name
        - -name
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    APIKeysType:
      default: api_keys
      description: API Keys resource type.
      enum:
        - api_keys
      example: api_keys
      type: string
      x-enum-varnames:
        - API_KEYS
    ApplicationKeyCreateAttributes:
      description: Attributes used to create an application Key.
      example:
        name: Application Key for submitting metrics
      properties:
        name:
          description: Name of the application key.
          example: Application Key for submitting metrics
          type: string
      required:
        - name
      type: object
    ApplicationKeyCreateData:
      description: Object used to create an application key.
      example:
        attributes:
          name: Application Key for submitting metrics
        type: application_keys
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationKeyCreateAttributes'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      required:
        - attributes
        - type
      type: object
    ApplicationKeyCreateRequest:
      description: Request used to create an application key.
      example:
        data:
          attributes:
            name: Application Key for submitting metrics
          type: application_keys
      properties:
        data:
          $ref: '#/components/schemas/ApplicationKeyCreateData'
      required:
        - data
      type: object
    ApplicationKeyRelationships:
      description: Resources related to the application key.
      example:
        created_by:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    ApplicationKeyResponse:
      description: Response for retrieving an application key.
      example:
        data:
          relationships:
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            last4: abcd
            name: Application Key for submitting metrics
            created_at: 2020-11-23T10:00:00.000Z
            key: key
          id: id
          type: application_keys
        included:
          - null
          - null
      properties:
        data:
          $ref: '#/components/schemas/FullApplicationKey'
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
      type: object
    ApplicationKeyResponseIncludedItem:
      description: An object related to an application key.
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Role'
      type: object
    ApplicationKeyUpdateAttributes:
      description: Attributes used to update an application Key.
      example:
        name: Application Key for submitting metrics
      properties:
        name:
          description: Name of the application key.
          example: Application Key for submitting metrics
          type: string
      required:
        - name
      type: object
    ApplicationKeyUpdateData:
      description: Object used to update an application key.
      example:
        attributes:
          name: Application Key for submitting metrics
        id: 00112233-4455-6677-8899-aabbccddeeff
        type: application_keys
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationKeyUpdateAttributes'
        id:
          description: ID of the application key.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      required:
        - attributes
        - id
        - type
      type: object
    ApplicationKeyUpdateRequest:
      description: Request used to update an application key.
      example:
        data:
          attributes:
            name: Application Key for submitting metrics
          id: 00112233-4455-6677-8899-aabbccddeeff
          type: application_keys
      properties:
        data:
          $ref: '#/components/schemas/ApplicationKeyUpdateData'
      required:
        - data
      type: object
    ApplicationKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - -created_at
        - last4
        - -last4
        - name
        - -name
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    ApplicationKeysType:
      default: application_keys
      description: Application Keys resource type.
      enum:
        - application_keys
      example: application_keys
      type: string
      x-enum-varnames:
        - APPLICATION_KEYS
    Creator:
      description: Creator of the object.
      properties:
        email:
          description: Email of the creator.
          type: string
        handle:
          description: Handle of the creator.
          type: string
        name:
          description: Name of the creator.
          type: string
      type: object
    DashboardListAddItemsRequest:
      description: Request containing a list of dashboards to add.
      example:
        dashboards:
          - id: q5j-nti-fv6
            type: host_timeboard
          - id: q5j-nti-fv6
            type: host_timeboard
      properties:
        dashboards:
          description: List of dashboards to add the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListAddItemsResponse:
      description: Response containing a list of added dashboards.
      example:
        added_dashboards_to_list:
          - id: q5j-nti-fv6
            type: host_timeboard
          - id: q5j-nti-fv6
            type: host_timeboard
      properties:
        added_dashboards_to_list:
          description: List of dashboards added to the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardListDeleteItemsRequest:
      description: Request containing a list of dashboards to delete.
      example:
        dashboards:
          - id: q5j-nti-fv6
            type: host_timeboard
          - id: q5j-nti-fv6
            type: host_timeboard
      properties:
        dashboards:
          description: List of dashboards to delete from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListDeleteItemsResponse:
      description: Response containing a list of deleted dashboards.
      example:
        deleted_dashboards_from_list:
          - id: q5j-nti-fv6
            type: host_timeboard
          - id: q5j-nti-fv6
            type: host_timeboard
      properties:
        deleted_dashboards_from_list:
          description: List of dashboards deleted from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardListItem:
      description: A dashboard within a list.
      properties:
        author:
          $ref: '#/components/schemas/Creator'
        created:
          description: Date of creation of the dashboard.
          format: date-time
          readOnly: true
          type: string
        icon:
          description: URL to the icon of the dashboard.
          readOnly: true
          type: string
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        is_favorite:
          description: Whether or not the dashboard is in the favorites.
          readOnly: true
          type: boolean
        is_read_only:
          description: Whether or not the dashboard is read only.
          readOnly: true
          type: boolean
        is_shared:
          description: Whether the dashboard is publicly shared or not.
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard.
          format: date-time
          readOnly: true
          type: string
        popularity:
          description: Popularity of the dashboard.
          format: int32
          maximum: 5
          readOnly: true
          type: integer
        title:
          description: Title of the dashboard.
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
        url:
          description: URL path to the dashboard.
          readOnly: true
          type: string
      required:
        - id
        - type
      type: object
    DashboardListItemRequest:
      description: A dashboard within a list.
      example:
        id: q5j-nti-fv6
        type: host_timeboard
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
        - id
        - type
      type: object
    DashboardListItemResponse:
      description: A dashboard within a list.
      example:
        id: q5j-nti-fv6
        type: host_timeboard
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
        - id
        - type
      type: object
    DashboardListItems:
      description: Dashboards within a list.
      example:
        total: 0
        dashboards: []
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          example: []
          items:
            $ref: '#/components/schemas/DashboardListItem'
          type: array
        total:
          description: Number of dashboards in the dashboard list.
          format: int64
          readOnly: true
          type: integer
      required:
        - dashboards
      type: object
    DashboardListUpdateItemsRequest:
      description: Request containing the list of dashboards to update to.
      example:
        dashboards:
          - id: q5j-nti-fv6
            type: host_timeboard
          - id: q5j-nti-fv6
            type: host_timeboard
      properties:
        dashboards:
          description: List of dashboards to update the dashboard list to.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListUpdateItemsResponse:
      description: Response containing a list of updated dashboards.
      example:
        dashboards:
          - id: q5j-nti-fv6
            type: host_timeboard
          - id: q5j-nti-fv6
            type: host_timeboard
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardType:
      description: The type of the dashboard.
      enum:
        - custom_timeboard
        - custom_screenboard
        - integration_screenboard
        - integration_timeboard
        - host_timeboard
      example: host_timeboard
      type: string
      x-enum-varnames:
        - CUSTOM_TIMEBOARD
        - CUSTOM_SCREENBOARD
        - INTEGRATION_SCREENBOARD
        - INTEGRATION_TIMEBOARD
        - HOST_TIMEBOARD
    FullAPIKey:
      description: Datadog API key.
      example:
        relationships:
          modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          last4: abcd
          name: API Key for submitting metrics
          created_at: 2020-11-23T10:00:00.000Z
          modified_at: 2020-11-23T10:00:00.000Z
          key: key
        id: id
        type: api_keys
      properties:
        attributes:
          $ref: '#/components/schemas/FullAPIKeyAttributes'
        id:
          description: ID of the API key.
          type: string
        relationships:
          $ref: '#/components/schemas/APIKeyRelationships'
        type:
          $ref: '#/components/schemas/APIKeysType'
      type: object
    FullAPIKeyAttributes:
      description: Attributes of a full API key.
      example:
        last4: abcd
        name: API Key for submitting metrics
        created_at: 2020-11-23T10:00:00.000Z
        modified_at: 2020-11-23T10:00:00.000Z
        key: key
      properties:
        created_at:
          description: Creation date of the API key.
          example: 2020-11-23T10:00:00.000Z
          readOnly: true
          type: string
        key:
          description: The API key.
          readOnly: true
          type: string
        last4:
          description: The last four characters of the API key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        modified_at:
          description: Date the API key was last modified.
          example: 2020-11-23T10:00:00.000Z
          readOnly: true
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
      type: object
    FullApplicationKey:
      description: Datadog application key.
      example:
        relationships:
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          last4: abcd
          name: Application Key for submitting metrics
          created_at: 2020-11-23T10:00:00.000Z
          key: key
        id: id
        type: application_keys
      properties:
        attributes:
          $ref: '#/components/schemas/FullApplicationKeyAttributes'
        id:
          description: ID of the application key.
          type: string
        relationships:
          $ref: '#/components/schemas/ApplicationKeyRelationships'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      type: object
    FullApplicationKeyAttributes:
      description: Attributes of a full application key.
      example:
        last4: abcd
        name: Application Key for submitting metrics
        created_at: 2020-11-23T10:00:00.000Z
        key: key
      properties:
        created_at:
          description: Creation date of the application key.
          example: 2020-11-23T10:00:00.000Z
          readOnly: true
          type: string
        key:
          description: The application key.
          readOnly: true
          type: string
        last4:
          description: The last four characters of the application key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        name:
          description: Name of the application key.
          example: Application Key for submitting metrics
          type: string
      type: object
    IncidentCreateAttributes:
      description: The incident's attributes for a create request.
      example:
        initial_timeline_cells:
          - null
          - null
        notification_handles:
          - '@test.user@test.com'
          - '@test.user@test.com'
        fields:
          severity:
            type: dropdown
            value: SEV-5
        title: A test incident title
        customer_impacted: false
      properties:
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: A condensed view of the user-defined fields for which to create
            initial selections.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        initial_timeline_cells:
          description: An array of initial timeline cells to be placed at the beginning
            of the incident timeline.
          items:
            $ref: '#/components/schemas/IncidentTimelineCellCreateAttributes'
          type: array
        notification_handles:
          description: Notification handles that will be notified of the incident
            at creation.
          items:
            description: A notification handle that will be notified at incident creation.
            example: '@test.user@test.com'
            type: string
          type: array
        title:
          description: The title of the incident, which summarizes what happened.
          example: A test incident title
          type: string
      required:
        - customer_impacted
        - title
      type: object
    IncidentCreateData:
      description: Incident data for a create request.
      example:
        relationships:
          commander:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          initial_timeline_cells:
            - null
            - null
          notification_handles:
            - '@test.user@test.com'
            - '@test.user@test.com'
          fields:
            severity:
              type: dropdown
              value: SEV-5
          title: A test incident title
          customer_impacted: false
        type: incidents
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentCreateRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - attributes
      type: object
    IncidentCreateRelationships:
      description: The relationships the incident will have with other resources once
        created.
      example:
        commander:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
      properties:
        commander:
          $ref: '#/components/schemas/RelationshipToUser'
      required:
        - commander
      type: object
    IncidentCreateRequest:
      description: Create request for an incident.
      example:
        data:
          relationships:
            commander:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            initial_timeline_cells:
              - null
              - null
            notification_handles:
              - '@test.user@test.com'
              - '@test.user@test.com'
            fields:
              severity:
                type: dropdown
                value: SEV-5
            title: A test incident title
            customer_impacted: false
          type: incidents
      properties:
        data:
          $ref: '#/components/schemas/IncidentCreateData'
      required:
        - data
      type: object
    IncidentFieldAttributes:
      description: Dynamic fields for which selections can be made, with field names
        as keys.
      oneOf:
        - $ref: '#/components/schemas/IncidentFieldAttributesSingleValue'
        - $ref: '#/components/schemas/IncidentFieldAttributesMultipleValue'
      required:
        - type
      type: object
    IncidentFieldAttributesMultipleValue:
      description: A field with potentially multiple values selected.
      properties:
        type:
          $ref: '#/components/schemas/IncidentFieldAttributesValueType'
        value:
          description: The multiple values selected for this field.
          example:
            - "1.0"
            - "1.1"
          items:
            description: A value which has been selected for the parent field.
            example: "1.1"
            type: string
          type: array
      type: object
    IncidentFieldAttributesSingleValue:
      description: A field with a single value selected.
      properties:
        type:
          $ref: '#/components/schemas/IncidentFieldAttributesSingleValueType'
        value:
          description: The single value selected for this field.
          example: SEV-1
          type: string
      type: object
    IncidentFieldAttributesSingleValueType:
      default: dropdown
      description: Type of the single value field definitions.
      enum:
        - dropdown
        - textbox
      example: dropdown
      type: string
      x-enum-varnames:
        - DROPDOWN
        - TEXTBOX
    IncidentFieldAttributesValueType:
      default: multiselect
      description: Type of the single value field definitions.
      enum:
        - multiselect
        - textarray
        - metrictag
        - autocomplete
      example: multiselect
      type: string
      x-enum-varnames:
        - MULTISELECT
        - TEXTARRAY
        - METRICTAG
        - AUTOCOMPLETE
    IncidentIntegrationMetadataType:
      default: incident_integrations
      description: Integration metadata resource type.
      enum:
        - incident_integrations
      example: incident_integrations
      type: string
      x-enum-varnames:
        - INCIDENT_INTEGRATIONS
    IncidentPostmortemType:
      default: incident_postmortems
      description: Incident postmortem resource type.
      enum:
        - incident_postmortems
      example: incident_postmortems
      type: string
      x-enum-varnames:
        - INCIDENT_POSTMORTEMS
    IncidentRelatedObject:
      description: Object related to an incident.
      enum:
        - users
      type: string
      x-enum-varnames:
        - USERS
    IncidentResponse:
      description: Response with an incident.
      example:
        data:
          relationships:
            postmortem:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: incident_postmortems
            last_modified_by_user:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            commander_user:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            integrations:
              data:
                - id: 00000000-0000-0000-0000-000000000000
                  type: incident_integrations
                - id: 00000000-0000-0000-0000-000000000000
                  type: incident_integrations
            created_by_user:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            time_to_repair: 5
            created: 2000-01-23T04:56:07.000+00:00
            time_to_internal_response: 1
            notification_handles:
              - '@test.user@test.com'
              - '@test.user@test.com'
            customer_impact_duration: 0
            title: A test incident title
            public_id: 1
            time_to_detect: 6
            customer_impact_scope: An example customer impact scope
            postmortem_id: 00000000-0000-0000-0000-000000000000
            customer_impact_end: 2000-01-23T04:56:07.000+00:00
            time_to_resolve: 5
            customer_impact_start: 2000-01-23T04:56:07.000+00:00
            detected: 2000-01-23T04:56:07.000+00:00
            modified: 2000-01-23T04:56:07.000+00:00
            fields:
              severity:
                type: dropdown
                value: SEV-5
            customer_impacted: false
            resolved: 2000-01-23T04:56:07.000+00:00
          id: 00000000-0000-0000-0000-000000000000
          type: incidents
        included:
          - null
          - null
      properties:
        data:
          $ref: '#/components/schemas/IncidentResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentResponseAttributes:
      description: The incident's attributes from a response.
      example:
        time_to_repair: 5
        created: 2000-01-23T04:56:07.000+00:00
        time_to_internal_response: 1
        notification_handles:
          - '@test.user@test.com'
          - '@test.user@test.com'
        customer_impact_duration: 0
        title: A test incident title
        public_id: 1
        time_to_detect: 6
        customer_impact_scope: An example customer impact scope
        postmortem_id: 00000000-0000-0000-0000-000000000000
        customer_impact_end: 2000-01-23T04:56:07.000+00:00
        time_to_resolve: 5
        customer_impact_start: 2000-01-23T04:56:07.000+00:00
        detected: 2000-01-23T04:56:07.000+00:00
        modified: 2000-01-23T04:56:07.000+00:00
        fields:
          severity:
            type: dropdown
            value: SEV-5
        customer_impacted: false
        resolved: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          description: Timestamp when the incident was created.
          format: date-time
          readOnly: true
          type: string
        customer_impact_duration:
          description: |-
            Length of the incident's customer impact in seconds.
            Equals the difference between `customer_impact_start` and `customer_impact_end`.
          format: int64
          readOnly: true
          type: integer
        customer_impact_end:
          description: Timestamp when customers were no longer impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impact_scope:
          description: A summary of the impact customers experienced during the incident.
          example: An example customer impact scope
          nullable: true
          type: string
        customer_impact_start:
          description: Timestamp when customers began being impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        detected:
          description: Timestamp when the incident was detected.
          format: date-time
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: A condensed view of the user-defined fields attached to incidents.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        modified:
          description: Timestamp when the incident was last modified.
          format: date-time
          readOnly: true
          type: string
        notification_handles:
          description: Notification handles that will be notified of the incident
            during update.
          items:
            description: A notification handle that will be notified during incident
              update.
            example: '@test.user@test.com'
            type: string
          type: array
        postmortem_id:
          description: The UUID of the postmortem object attached to the incident.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        public_id:
          description: The monotonically increasing integer ID for the incident.
          example: 1
          format: int64
          type: integer
        resolved:
          description: Timestamp when the incident's state was set to resolved.
          format: date-time
          nullable: true
          type: string
        time_to_detect:
          description: |-
            The amount of time in seconds to detect the incident.
            Equals the difference between `customer_impact_start` and `detected`.
          format: int64
          readOnly: true
          type: integer
        time_to_internal_response:
          description: The amount of time in seconds to call incident after detection.
            Equals the difference of `detected` and `created`.
          format: int64
          readOnly: true
          type: integer
        time_to_repair:
          description: The amount of time in seconds to resolve customer impact after
            detecting the issue. Equals the difference between `customer_impact_end`
            and `detected`.
          format: int64
          readOnly: true
          type: integer
        time_to_resolve:
          description: The amount of time in seconds to resolve the incident after
            it was created. Equals the difference between `created` and `resolved`.
          format: int64
          readOnly: true
          type: integer
        title:
          description: The title of the incident, which summarizes what happened.
          example: A test incident title
          type: string
      required:
        - title
      type: object
    IncidentResponseData:
      description: Incident data from a response.
      example:
        relationships:
          postmortem:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: incident_postmortems
          last_modified_by_user:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          commander_user:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          integrations:
            data:
              - id: 00000000-0000-0000-0000-000000000000
                type: incident_integrations
              - id: 00000000-0000-0000-0000-000000000000
                type: incident_integrations
          created_by_user:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          time_to_repair: 5
          created: 2000-01-23T04:56:07.000+00:00
          time_to_internal_response: 1
          notification_handles:
            - '@test.user@test.com'
            - '@test.user@test.com'
          customer_impact_duration: 0
          title: A test incident title
          public_id: 1
          time_to_detect: 6
          customer_impact_scope: An example customer impact scope
          postmortem_id: 00000000-0000-0000-0000-000000000000
          customer_impact_end: 2000-01-23T04:56:07.000+00:00
          time_to_resolve: 5
          customer_impact_start: 2000-01-23T04:56:07.000+00:00
          detected: 2000-01-23T04:56:07.000+00:00
          modified: 2000-01-23T04:56:07.000+00:00
          fields:
            severity:
              type: dropdown
              value: SEV-5
          customer_impacted: false
          resolved: 2000-01-23T04:56:07.000+00:00
        id: 00000000-0000-0000-0000-000000000000
        type: incidents
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentResponseAttributes'
        id:
          description: The incident's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentResponseRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - id
        - type
      type: object
    IncidentResponseIncludedItem:
      description: An object related to an incident that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
      type: object
    IncidentResponseRelationships:
      description: The incident's relationships from a response.
      example:
        postmortem:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: incident_postmortems
        last_modified_by_user:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
        commander_user:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
        integrations:
          data:
            - id: 00000000-0000-0000-0000-000000000000
              type: incident_integrations
            - id: 00000000-0000-0000-0000-000000000000
              type: incident_integrations
        created_by_user:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
      properties:
        commander_user:
          $ref: '#/components/schemas/RelationshipToUser'
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        integrations:
          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        postmortem:
          $ref: '#/components/schemas/RelationshipToIncidentPostmortem'
      type: object
    IncidentServiceCreateAttributes:
      description: The incident service's attributes for a create request.
      example:
        name: an example service name
      properties:
        name:
          description: Name of the incident service.
          example: an example service name
          type: string
      required:
        - name
      type: object
    IncidentServiceCreateData:
      description: Incident Service payload for create requests.
      example:
        relationships:
          last_modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          name: an example service name
        type: services
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - type
      type: object
    IncidentServiceCreateRequest:
      description: Create request with an incident service payload.
      example:
        data:
          relationships:
            last_modified_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            name: an example service name
          type: services
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceCreateData'
      required:
        - data
      type: object
    IncidentServiceIncludedItems:
      description: An object related to an incident service which is present in the
        included payload.
      oneOf:
        - $ref: '#/components/schemas/User'
      type: object
    IncidentServiceRelationships:
      description: The incident service's relationships.
      example:
        last_modified_by:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
        created_by:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by:
          $ref: '#/components/schemas/RelationshipToUser'
      readOnly: true
      type: object
    IncidentServiceResponse:
      description: Response with an incident service payload.
      example:
        data:
          relationships:
            last_modified_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            created: 2000-01-23T04:56:07.000+00:00
            name: service name
            modified: 2000-01-23T04:56:07.000+00:00
          id: 00000000-0000-0000-0000-000000000000
          type: services
        included:
          - null
          - null
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceResponseData'
        included:
          description: Included objects from relationships.
          items:
            $ref: '#/components/schemas/IncidentServiceIncludedItems'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentServiceResponseAttributes:
      description: The incident service's attributes from a response.
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: service name
        modified: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          description: Timestamp of when the incident service was created.
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Timestamp of when the incident service was modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the incident service.
          example: service name
          type: string
      type: object
    IncidentServiceResponseData:
      description: Incident Service data from responses.
      example:
        relationships:
          last_modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          created: 2000-01-23T04:56:07.000+00:00
          name: service name
          modified: 2000-01-23T04:56:07.000+00:00
        id: 00000000-0000-0000-0000-000000000000
        type: services
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceResponseAttributes'
        id:
          description: The incident service's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - id
        - type
      type: object
    IncidentServiceType:
      default: services
      description: Incident service resource type.
      enum:
        - services
      example: services
      type: string
      x-enum-varnames:
        - SERVICES
    IncidentServiceUpdateAttributes:
      description: The incident service's attributes for an update request.
      example:
        name: an example service name
      properties:
        name:
          description: Name of the incident service.
          example: an example service name
          type: string
      required:
        - name
      type: object
    IncidentServiceUpdateData:
      description: Incident Service payload for update requests.
      example:
        relationships:
          last_modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          name: an example service name
        id: 00000000-0000-0000-0000-000000000000
        type: services
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceUpdateAttributes'
        id:
          description: The incident service's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - type
      type: object
    IncidentServiceUpdateRequest:
      description: Update request with an incident service payload.
      example:
        data:
          relationships:
            last_modified_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            name: an example service name
          id: 00000000-0000-0000-0000-000000000000
          type: services
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceUpdateData'
      required:
        - data
      type: object
    IncidentServicesResponse:
      description: Response with a list of incident service payloads.
      example:
        data:
          - id: 00000000-0000-0000-0000-000000000000
            type: services
        meta:
          pagination:
            offset: 10
            size: 1000
            next_offset: 1000
        included:
          - null
          - null
      properties:
        data:
          description: An array of incident services.
          example:
            - id: 00000000-0000-0000-0000-000000000000
              type: services
          items:
            $ref: '#/components/schemas/IncidentServiceResponseData'
          type: array
        included:
          description: Included related resources which the user requested.
          items:
            $ref: '#/components/schemas/IncidentServiceIncludedItems'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentServicesResponse_meta'
      required:
        - data
      type: object
    IncidentTeamCreateAttributes:
      description: The incident team's attributes for a create request.
      example:
        name: team name
      properties:
        name:
          description: Name of the incident team.
          example: team name
          type: string
      required:
        - name
      type: object
    IncidentTeamCreateData:
      description: Incident Team data for a create request.
      example:
        relationships:
          last_modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          name: team name
        type: teams
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      required:
        - type
      type: object
    IncidentTeamCreateRequest:
      description: Create request with an incident team payload.
      example:
        data:
          relationships:
            last_modified_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            name: team name
          type: teams
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamCreateData'
      required:
        - data
      type: object
    IncidentTeamIncludedItems:
      description: An object related to an incident team which is present in the included
        payload.
      oneOf:
        - $ref: '#/components/schemas/User'
      type: object
    IncidentTeamRelationships:
      description: The incident team's relationships.
      example:
        last_modified_by:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
        created_by:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by:
          $ref: '#/components/schemas/RelationshipToUser'
      readOnly: true
      type: object
    IncidentTeamResponse:
      description: Response with an incident team payload.
      example:
        data:
          relationships:
            last_modified_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            created: 2000-01-23T04:56:07.000+00:00
            name: team name
            modified: 2000-01-23T04:56:07.000+00:00
          id: 00000000-0000-0000-0000-000000000000
          type: teams
        included:
          - null
          - null
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamResponseData'
        included:
          description: Included objects from relationships.
          items:
            $ref: '#/components/schemas/IncidentTeamIncludedItems'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentTeamResponseAttributes:
      description: The incident team's attributes from a response.
      example:
        created: 2000-01-23T04:56:07.000+00:00
        name: team name
        modified: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          description: Timestamp of when the incident team was created.
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Timestamp of when the incident team was modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the incident team.
          example: team name
          type: string
      type: object
    IncidentTeamResponseData:
      description: Incident Team data from a response.
      example:
        relationships:
          last_modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          created: 2000-01-23T04:56:07.000+00:00
          name: team name
          modified: 2000-01-23T04:56:07.000+00:00
        id: 00000000-0000-0000-0000-000000000000
        type: teams
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamResponseAttributes'
        id:
          description: The incident team's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      type: object
    IncidentTeamType:
      default: teams
      description: Incident Team resource type.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    IncidentTeamUpdateAttributes:
      description: The incident team's attributes for an update request.
      example:
        name: team name
      properties:
        name:
          description: Name of the incident team.
          example: team name
          type: string
      required:
        - name
      type: object
    IncidentTeamUpdateData:
      description: Incident Team data for an update request.
      example:
        relationships:
          last_modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          name: team name
        id: 00000000-0000-0000-0000-000000000000
        type: teams
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamUpdateAttributes'
        id:
          description: The incident team's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      required:
        - type
      type: object
    IncidentTeamUpdateRequest:
      description: Update request with an incident team payload.
      example:
        data:
          relationships:
            last_modified_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            created_by:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            name: team name
          id: 00000000-0000-0000-0000-000000000000
          type: teams
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamUpdateData'
      required:
        - data
      type: object
    IncidentTeamsResponse:
      description: Response with a list of incident team payloads.
      example:
        data:
          - attributes:
              name: team name
            id: 00000000-0000-0000-0000-000000000000
            type: teams
        meta:
          pagination:
            offset: 10
            size: 1000
            next_offset: 1000
        included:
          - null
          - null
      properties:
        data:
          description: An array of incident teams.
          example:
            - attributes:
                name: team name
              id: 00000000-0000-0000-0000-000000000000
              type: teams
          items:
            $ref: '#/components/schemas/IncidentTeamResponseData'
          type: array
        included:
          description: Included related resources which the user requested.
          items:
            $ref: '#/components/schemas/IncidentTeamIncludedItems'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentServicesResponse_meta'
      required:
        - data
      type: object
    IncidentTimelineCellCreateAttributes:
      description: The timeline cell's attributes for a create request.
      oneOf:
        - $ref: '#/components/schemas/IncidentTimelineCellMarkdownCreateAttributes'
      type: object
    IncidentTimelineCellMarkdownContentType:
      default: markdown
      description: Type of the Markdown timeline cell.
      enum:
        - markdown
      example: markdown
      type: string
      x-enum-varnames:
        - MARKDOWN
    IncidentTimelineCellMarkdownCreateAttributes:
      description: Timeline cell data for Markdown timeline cells for a create request.
      properties:
        cell_type:
          $ref: '#/components/schemas/IncidentTimelineCellMarkdownContentType'
        content:
          $ref: '#/components/schemas/IncidentTimelineCellMarkdownCreateAttributes_content'
        important:
          default: false
          description: A flag indicating whether the timeline cell is important and
            should be highlighted.
          example: false
          type: boolean
      required:
        - cell_type
        - content
      type: object
    IncidentType:
      default: incidents
      description: Incident resource type.
      enum:
        - incidents
      example: incidents
      type: string
      x-enum-varnames:
        - INCIDENTS
    IncidentUpdateAttributes:
      description: The incident's attributes for an update request.
      example:
        customer_impact_scope: Example customer impact scope
        customer_impact_end: 2000-01-23T04:56:07.000+00:00
        notification_handles:
          - '@test.user@test.com'
          - '@test.user@test.com'
        customer_impact_start: 2000-01-23T04:56:07.000+00:00
        detected: 2000-01-23T04:56:07.000+00:00
        fields:
          severity:
            type: dropdown
            value: SEV-5
        title: A test incident title
        customer_impacted: false
        resolved: 2000-01-23T04:56:07.000+00:00
      properties:
        customer_impact_end:
          description: Timestamp when customers were no longer impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impact_scope:
          description: A summary of the impact customers experienced during the incident.
          example: Example customer impact scope
          type: string
        customer_impact_start:
          description: Timestamp when customers began being impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        detected:
          description: Timestamp when the incident was detected.
          format: date-time
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: A condensed view of the user-defined fields for which to update
            selections.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        notification_handles:
          description: Notification handles that will be notified of the incident
            during update.
          items:
            description: A notification handle that will be notified during incident
              update.
            example: '@test.user@test.com'
            type: string
          type: array
        resolved:
          description: Timestamp when the incident's state was set to resolved.
          format: date-time
          nullable: true
          type: string
        title:
          description: The title of the incident, which summarizes what happened.
          example: A test incident title
          type: string
      type: object
    IncidentUpdateData:
      description: Incident data for an update request.
      example:
        relationships:
          postmortem:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: incident_postmortems
          last_modified_by_user:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          commander_user:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          integrations:
            data:
              - id: 00000000-0000-0000-0000-000000000000
                type: incident_integrations
              - id: 00000000-0000-0000-0000-000000000000
                type: incident_integrations
          created_by_user:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          customer_impact_scope: Example customer impact scope
          customer_impact_end: 2000-01-23T04:56:07.000+00:00
          notification_handles:
            - '@test.user@test.com'
            - '@test.user@test.com'
          customer_impact_start: 2000-01-23T04:56:07.000+00:00
          detected: 2000-01-23T04:56:07.000+00:00
          fields:
            severity:
              type: dropdown
              value: SEV-5
          title: A test incident title
          customer_impacted: false
          resolved: 2000-01-23T04:56:07.000+00:00
        id: 00000000-0000-0000-0000-000000000000
        type: incidents
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentUpdateAttributes'
        id:
          description: The team's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentUpdateRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - id
      type: object
    IncidentUpdateRelationships:
      description: The incident's relationships for an update request.
      example:
        postmortem:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: incident_postmortems
        last_modified_by_user:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
        commander_user:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
        integrations:
          data:
            - id: 00000000-0000-0000-0000-000000000000
              type: incident_integrations
            - id: 00000000-0000-0000-0000-000000000000
              type: incident_integrations
        created_by_user:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: users
      properties:
        commander_user:
          $ref: '#/components/schemas/RelationshipToUser'
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        integrations:
          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        postmortem:
          $ref: '#/components/schemas/RelationshipToIncidentPostmortem'
      type: object
    IncidentUpdateRequest:
      description: Update request for an incident.
      example:
        data:
          relationships:
            postmortem:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: incident_postmortems
            last_modified_by_user:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            commander_user:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
            integrations:
              data:
                - id: 00000000-0000-0000-0000-000000000000
                  type: incident_integrations
                - id: 00000000-0000-0000-0000-000000000000
                  type: incident_integrations
            created_by_user:
              data:
                id: 00000000-0000-0000-0000-000000000000
                type: users
          attributes:
            customer_impact_scope: Example customer impact scope
            customer_impact_end: 2000-01-23T04:56:07.000+00:00
            notification_handles:
              - '@test.user@test.com'
              - '@test.user@test.com'
            customer_impact_start: 2000-01-23T04:56:07.000+00:00
            detected: 2000-01-23T04:56:07.000+00:00
            fields:
              severity:
                type: dropdown
                value: SEV-5
            title: A test incident title
            customer_impacted: false
            resolved: 2000-01-23T04:56:07.000+00:00
          id: 00000000-0000-0000-0000-000000000000
          type: incidents
      properties:
        data:
          $ref: '#/components/schemas/IncidentUpdateData'
      required:
        - data
      type: object
    IncidentsResponse:
      description: Response with a list of incidents.
      example:
        data:
          - attributes:
              created: 2020-04-21T15:34:08.627205+00:00
              creation_idempotency_key: null
              customer_impact_duration: 0
              customer_impact_end: null
              customer_impact_scope: null
              customer_impact_start: null
              customer_impacted: false
              detected: 2020-04-14T00:00:00+00:00
              modified: 2020-09-17T14:16:58.696424+00:00
              postmortem_id: 00000000-0000-0000-0000-000000000000
              public_id: 1
              resolved: null
              severity: SEV-1
              time_to_detect: 0
              time_to_internal_response: 0
              time_to_repair: 0
              time_to_resolve: 0
              title: Example Incident
            id: 00000000-0000-0000-0000-000000000000
            relationships:
              commander_user:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              created_by_user:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              integrations:
                data:
                  - id: 00000000-0000-0000-0000-000000000000
                    type: incident_integrations
                  - id: 00000000-0000-0000-0000-000000000000
                    type: incident_integrations
              last_modified_by_user:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              postmortem:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: incident_postmortems
            type: incidents
          - attributes:
              created: 2020-04-21T15:34:08.627205+00:00
              creation_idempotency_key: null
              customer_impact_duration: 0
              customer_impact_end: null
              customer_impact_scope: null
              customer_impact_start: null
              customer_impacted: false
              detected: 2020-04-14T00:00:00+00:00
              modified: 2020-09-17T14:16:58.696424+00:00
              postmortem_id: 00000000-0000-0000-0000-000000000000
              public_id: 2
              resolved: null
              severity: SEV-5
              time_to_detect: 0
              time_to_internal_response: 0
              time_to_repair: 0
              time_to_resolve: 0
              title: Example Incident 2
            id: 00000000-0000-0000-0000-000000000000
            relationships:
              commander_user:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              created_by_user:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              integrations:
                data:
                  - id: 00000000-0000-0000-0000-000000000000
                    type: incident_integrations
                  - id: 00000000-0000-0000-0000-000000000000
                    type: incident_integrations
              last_modified_by_user:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
              postmortem:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: incident_postmortems
            type: incidents
        meta:
          pagination:
            offset: 10
            size: 1000
            next_offset: 1000
        included:
          - null
          - null
      properties:
        data:
          description: An array of incidents.
          example:
            - attributes:
                created: 2020-04-21T15:34:08.627205+00:00
                creation_idempotency_key: null
                customer_impact_duration: 0
                customer_impact_end: null
                customer_impact_scope: null
                customer_impact_start: null
                customer_impacted: false
                detected: 2020-04-14T00:00:00+00:00
                modified: 2020-09-17T14:16:58.696424+00:00
                postmortem_id: 00000000-0000-0000-0000-000000000000
                public_id: 1
                resolved: null
                severity: SEV-1
                time_to_detect: 0
                time_to_internal_response: 0
                time_to_repair: 0
                time_to_resolve: 0
                title: Example Incident
              id: 00000000-0000-0000-0000-000000000000
              relationships:
                commander_user:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: users
                created_by_user:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: users
                integrations:
                  data:
                    - id: 00000000-0000-0000-0000-000000000000
                      type: incident_integrations
                    - id: 00000000-0000-0000-0000-000000000000
                      type: incident_integrations
                last_modified_by_user:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: users
                postmortem:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: incident_postmortems
              type: incidents
            - attributes:
                created: 2020-04-21T15:34:08.627205+00:00
                creation_idempotency_key: null
                customer_impact_duration: 0
                customer_impact_end: null
                customer_impact_scope: null
                customer_impact_start: null
                customer_impacted: false
                detected: 2020-04-14T00:00:00+00:00
                modified: 2020-09-17T14:16:58.696424+00:00
                postmortem_id: 00000000-0000-0000-0000-000000000000
                public_id: 2
                resolved: null
                severity: SEV-5
                time_to_detect: 0
                time_to_internal_response: 0
                time_to_repair: 0
                time_to_resolve: 0
                title: Example Incident 2
              id: 00000000-0000-0000-0000-000000000000
              relationships:
                commander_user:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: users
                created_by_user:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: users
                integrations:
                  data:
                    - id: 00000000-0000-0000-0000-000000000000
                      type: incident_integrations
                    - id: 00000000-0000-0000-0000-000000000000
                      type: incident_integrations
                last_modified_by_user:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: users
                postmortem:
                  data:
                    id: 00000000-0000-0000-0000-000000000000
                    type: incident_postmortems
              type: incidents
          items:
            $ref: '#/components/schemas/IncidentResponseData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentServicesResponse_meta'
      required:
        - data
      type: object
    ListApplicationKeysResponse:
      description: Response for a list of application keys.
      example:
        data:
          - relationships:
              created_by:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
            attributes:
              last4: abcd
              name: Application Key for submitting metrics
              created_at: 2020-11-23T10:00:00.000Z
            id: id
            type: application_keys
          - relationships:
              created_by:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: users
            attributes:
              last4: abcd
              name: Application Key for submitting metrics
              created_at: 2020-11-23T10:00:00.000Z
            id: id
            type: application_keys
        included:
          - null
          - null
      properties:
        data:
          description: Array of application keys.
          items:
            $ref: '#/components/schemas/PartialApplicationKey'
          type: array
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
      type: object
    Log:
      description: Object description of a log after being processed and stored by
        Datadog.
      example:
        attributes:
          service: agent
          host: i-0123
          attributes:
            customAttribute: 123
            duration: 2345
          message: Host connected to remote
          status: INFO
          tags:
            - team:A
          timestamp: 2019-01-02T09:42:36.32Z
        id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
        type: log
      properties:
        attributes:
          $ref: '#/components/schemas/Log_attributes'
        id:
          description: Unique ID of the Log.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/LogType'
      type: object
    LogType:
      default: log
      description: Type of the event.
      enum:
        - log
      example: log
      type: string
      x-enum-varnames:
        - LOG
    LogsAggregateBucket:
      description: A bucket values
      example:
        computes: {}
        by:
          '@state': success
          '@version': abc
      properties:
        by:
          additionalProperties:
            description: The values for each group by
            type: string
          description: The key, value pairs for each group by
          example:
            '@state': success
            '@version': abc
          type: object
        computes:
          additionalProperties:
            $ref: '#/components/schemas/LogsAggregateBucketValue'
          description: A map of the metric name -> value for regular compute or list
            of values for a timeseries
          type: object
      type: object
    LogsAggregateBucketValue:
      description: A bucket value, can be either a timeseries or a single value
      oneOf:
        - $ref: '#/components/schemas/LogsAggregateBucketValueSingleString'
        - $ref: '#/components/schemas/LogsAggregateBucketValueSingleNumber'
        - $ref: '#/components/schemas/LogsAggregateBucketValueTimeseries'
    LogsAggregateBucketValueSingleNumber:
      description: A single number value
      format: double
      type: number
    LogsAggregateBucketValueSingleString:
      description: A single string value
      type: string
    LogsAggregateBucketValueTimeseries:
      description: A timeseries array
      items:
        $ref: '#/components/schemas/LogsAggregateBucketValueTimeseriesPoint'
      type: array
      x-generate-alias-as-model: true
    LogsAggregateBucketValueTimeseriesPoint:
      description: A timeseries point
      properties:
        time:
          description: The time value for this point
          example: 2020-06-08T11:55:00Z
          type: string
        value:
          description: The value for this point
          example: 19
          format: double
          type: number
      type: object
    LogsAggregateRequest:
      description: The object sent with the request to retrieve a list of logs from
        your organization.
      example:
        compute:
          - metric: '@duration'
            aggregation: pc90
            interval: 5m
          - metric: '@duration'
            aggregation: pc90
            interval: 5m
        filter:
          indexes:
            - main
            - web
          query: service:web* AND @http.status_code:[200 TO 299]
          from: now-15m
          to: now
        options:
          timezone: GMT
          timeOffset: 6
        group_by:
          - histogram:
              min: 50
              max: 100
              interval: 10
            limit: 0
            sort:
              aggregation: count
              order: asc
            facet: host
          - histogram:
              min: 50
              max: 100
              interval: 10
            limit: 0
            sort:
              aggregation: count
              order: asc
            facet: host
        page:
          cursor: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        compute:
          description: The list of metrics or timeseries to compute for the retrieved
            buckets.
          items:
            $ref: '#/components/schemas/LogsCompute'
          type: array
        filter:
          $ref: '#/components/schemas/LogsQueryFilter'
        group_by:
          description: The rules for the group by
          items:
            $ref: '#/components/schemas/LogsGroupBy'
          type: array
        options:
          $ref: '#/components/schemas/LogsQueryOptions'
        page:
          $ref: '#/components/schemas/LogsAggregateRequest_page'
      type: object
    LogsAggregateResponse:
      description: The response object for the logs aggregate API endpoint
      example:
        data:
          buckets:
            - computes: {}
              by:
                '@state': success
                '@version': abc
            - computes: {}
              by:
                '@state': success
                '@version': abc
        meta:
          elapsed: 132
          warnings:
            - code: unknown_index
              detail: 'indexes: foo, bar'
              title: One or several indexes are missing or invalid, results hold data
                from the other indexes
            - code: unknown_index
              detail: 'indexes: foo, bar'
              title: One or several indexes are missing or invalid, results hold data
                from the other indexes
          page:
            after: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          status: done
      properties:
        data:
          $ref: '#/components/schemas/LogsAggregateResponse_data'
        meta:
          $ref: '#/components/schemas/LogsResponseMetadata'
      type: object
    LogsAggregateResponseStatus:
      description: The status of the response
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    LogsAggregateSort:
      description: A sort rule
      example:
        aggregation: count
        order: asc
      properties:
        aggregation:
          $ref: '#/components/schemas/LogsAggregationFunction'
        metric:
          description: The metric to sort by (only used for `type=measure`)
          example: '@duration'
          type: string
        order:
          $ref: '#/components/schemas/LogsSortOrder'
        type:
          $ref: '#/components/schemas/LogsAggregateSortType'
      type: object
    LogsAggregateSortType:
      default: alphabetical
      description: The type of sorting algorithm
      enum:
        - alphabetical
        - measure
      type: string
      x-enum-varnames:
        - ALPHABETICAL
        - MEASURE
    LogsAggregationFunction:
      description: An aggregation function
      enum:
        - count
        - cardinality
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
      example: pc90
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - PERCENTILE_75
        - PERCENTILE_90
        - PERCENTILE_95
        - PERCENTILE_98
        - PERCENTILE_99
        - SUM
        - MIN
        - MAX
        - AVG
    LogsArchive:
      description: The logs archive.
      example:
        data:
          attributes:
            rehydration_tags:
              - team:intake
              - team:app
            query: source:nginx
            name: Nginx Archive
            include_tags: false
            state: WORKING
          id: a2zcMylnM4OCHpYusxIi3g
          type: archives
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveDefinition'
      type: object
    LogsArchiveAttributes:
      description: The attributes associated with the archive.
      example:
        rehydration_tags:
          - team:intake
          - team:app
        query: source:nginx
        name: Nginx Archive
        include_tags: false
        state: WORKING
      properties:
        destination:
          $ref: '#/components/schemas/LogsArchiveDestination'
        include_tags:
          default: false
          description: |-
            To store the tags in the archive, set the value "true".
            If it is set to "false", the tags will be deleted when the logs are sent to the archive.
          example: false
          type: boolean
        name:
          description: The archive name.
          example: Nginx Archive
          type: string
        query:
          description: The archive query/filter. Logs matching this query are included
            in the archive.
          example: source:nginx
          type: string
        rehydration_tags:
          description: An array of tags to add to rehydrated logs from an archive.
          example:
            - team:intake
            - team:app
          items:
            description: A given tag in the `<KEY>:<VALUE>` format.
            type: string
          type: array
        state:
          $ref: '#/components/schemas/LogsArchiveState'
      required:
        - destination
        - name
        - query
      type: object
    LogsArchiveCreateRequest:
      description: The logs archive.
      example:
        data:
          attributes:
            rehydration_tags:
              - team:intake
              - team:app
            query: source:nginx
            name: Nginx Archive
            include_tags: false
          type: archives
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveCreateRequestDefinition'
      type: object
    LogsArchiveCreateRequestAttributes:
      description: The attributes associated with the archive.
      example:
        rehydration_tags:
          - team:intake
          - team:app
        query: source:nginx
        name: Nginx Archive
        include_tags: false
      properties:
        destination:
          $ref: '#/components/schemas/LogsArchiveCreateRequestDestination'
        include_tags:
          default: false
          description: |-
            To store the tags in the archive, set the value "true".
            If it is set to "false", the tags will be deleted when the logs are sent to the archive.
          example: false
          type: boolean
        name:
          description: The archive name.
          example: Nginx Archive
          type: string
        query:
          description: The archive query/filter. Logs matching this query are included
            in the archive.
          example: source:nginx
          type: string
        rehydration_tags:
          description: An array of tags to add to rehydrated logs from an archive.
          example:
            - team:intake
            - team:app
          items:
            description: A given tag in the `<KEY>:<VALUE>` format.
            type: string
          type: array
      required:
        - destination
        - name
        - query
      type: object
    LogsArchiveCreateRequestDefinition:
      description: The definition of an archive.
      example:
        attributes:
          rehydration_tags:
            - team:intake
            - team:app
          query: source:nginx
          name: Nginx Archive
          include_tags: false
        type: archives
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveCreateRequestAttributes'
        type:
          default: archives
          description: The type of the resource. The value should always be archives.
          example: archives
          type: string
      required:
        - type
      type: object
    LogsArchiveCreateRequestDestination:
      description: An archive's destination.
      oneOf:
        - $ref: '#/components/schemas/LogsArchiveDestinationAzure'
        - $ref: '#/components/schemas/LogsArchiveDestinationGCS'
        - $ref: '#/components/schemas/LogsArchiveDestinationS3'
      required:
        - integration
        - type
      type: object
    LogsArchiveDefinition:
      description: The definition of an archive.
      example:
        attributes:
          rehydration_tags:
            - team:intake
            - team:app
          query: source:nginx
          name: Nginx Archive
          include_tags: false
          state: WORKING
        id: a2zcMylnM4OCHpYusxIi3g
        type: archives
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveAttributes'
        id:
          description: The archive ID.
          example: a2zcMylnM4OCHpYusxIi3g
          readOnly: true
          type: string
        type:
          default: archives
          description: The type of the resource. The value should always be archives.
          example: archives
          readOnly: true
          type: string
      required:
        - type
      type: object
    LogsArchiveDestination:
      description: An archive's destination.
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/LogsArchiveDestinationAzure'
        - $ref: '#/components/schemas/LogsArchiveDestinationGCS'
        - $ref: '#/components/schemas/LogsArchiveDestinationS3'
      required:
        - integration
        - type
      type: object
    LogsArchiveDestinationAzure:
      description: The Azure archive destination.
      properties:
        container:
          description: The container where the archive will be stored.
          example: container-name
          type: string
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationAzure'
        path:
          description: The archive path.
          type: string
        region:
          description: The region where the archive will be stored.
          type: string
        storage_account:
          description: The associated storage account.
          example: account-name
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationAzureType'
      required:
        - container
        - integration
        - storage_account
        - type
      type: object
    LogsArchiveDestinationAzureType:
      default: azure
      description: Type of the Azure archive destination.
      enum:
        - azure
      example: azure
      type: string
      x-enum-varnames:
        - AZURE
    LogsArchiveDestinationGCS:
      description: The GCS archive destination.
      properties:
        bucket:
          description: The bucket where the archive will be stored.
          example: bucket-name
          type: string
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationGCS'
        path:
          description: The archive path.
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationGCSType'
      required:
        - bucket
        - integration
        - type
      type: object
    LogsArchiveDestinationGCSType:
      default: gcs
      description: Type of the GCS archive destination.
      enum:
        - gcs
      example: gcs
      type: string
      x-enum-varnames:
        - GCS
    LogsArchiveDestinationS3:
      description: The S3 archive destination.
      properties:
        bucket:
          description: The bucket where the archive will be stored.
          example: bucket-name
          type: string
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationS3'
        path:
          description: The archive path.
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationS3Type'
      required:
        - bucket
        - integration
        - type
      type: object
    LogsArchiveDestinationS3Type:
      default: s3
      description: Type of the S3 archive destination.
      enum:
        - s3
      example: s3
      type: string
      x-enum-varnames:
        - S3
    LogsArchiveIntegrationAzure:
      description: The Azure archive's integration destination.
      properties:
        client_id:
          description: A client ID.
          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
          type: string
        tenant_id:
          description: A tenant ID.
          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
          type: string
      required:
        - client_id
        - tenant_id
      type: object
    LogsArchiveIntegrationGCS:
      description: The GCS archive's integration destination.
      properties:
        client_email:
          description: A client email.
          example: youremail@example.com
          type: string
        project_id:
          description: A project ID.
          example: project-id
          type: string
      required:
        - client_email
        - project_id
      type: object
    LogsArchiveIntegrationS3:
      description: The S3 Archive's integration destination.
      properties:
        account_id:
          description: The account ID for the integration.
          example: "123456789012"
          type: string
        role_name:
          description: The path of the integration.
          example: role-name
          type: string
      required:
        - account_id
        - role_name
      type: object
    LogsArchiveOrder:
      description: A ordered list of archive IDs.
      example:
        data:
          attributes:
            archive_ids:
              - a2zcMylnM4OCHpYusxIi1g
              - a2zcMylnM4OCHpYusxIi2g
              - a2zcMylnM4OCHpYusxIi3g
          type: archive_order
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveOrderDefinition'
      type: object
    LogsArchiveOrderAttributes:
      description: The attributes associated with the archive order.
      example:
        archive_ids:
          - a2zcMylnM4OCHpYusxIi1g
          - a2zcMylnM4OCHpYusxIi2g
          - a2zcMylnM4OCHpYusxIi3g
      properties:
        archive_ids:
          description: |-
            An ordered array of `<ARCHIVE_ID>` strings, the order of archive IDs in the array
            define the overall archives order for Datadog.
          example:
            - a2zcMylnM4OCHpYusxIi1g
            - a2zcMylnM4OCHpYusxIi2g
            - a2zcMylnM4OCHpYusxIi3g
          items:
            description: A given archive ID.
            type: string
          type: array
      required:
        - archive_ids
      type: object
    LogsArchiveOrderDefinition:
      description: The definition of an archive order.
      example:
        attributes:
          archive_ids:
            - a2zcMylnM4OCHpYusxIi1g
            - a2zcMylnM4OCHpYusxIi2g
            - a2zcMylnM4OCHpYusxIi3g
        type: archive_order
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveOrderAttributes'
        type:
          $ref: '#/components/schemas/LogsArchiveOrderDefinitionType'
      required:
        - attributes
        - type
      type: object
    LogsArchiveOrderDefinitionType:
      default: archive_order
      description: Type of the archive order definition.
      enum:
        - archive_order
      example: archive_order
      type: string
      x-enum-varnames:
        - ARCHIVE_ORDER
    LogsArchiveState:
      description: The state of the archive.
      enum:
        - UNKNOWN
        - WORKING
        - FAILING
        - WORKING_AUTH_LEGACY
      example: WORKING
      type: string
      x-enum-varnames:
        - UNKNOWN
        - WORKING
        - FAILING
        - WORKING_AUTH_LEGACY
    LogsArchives:
      description: The available archives.
      example:
        data:
          - attributes:
              rehydration_tags:
                - team:intake
                - team:app
              query: source:nginx
              name: Nginx Archive
              include_tags: false
              state: WORKING
            id: a2zcMylnM4OCHpYusxIi3g
            type: archives
          - attributes:
              rehydration_tags:
                - team:intake
                - team:app
              query: source:nginx
              name: Nginx Archive
              include_tags: false
              state: WORKING
            id: a2zcMylnM4OCHpYusxIi3g
            type: archives
      properties:
        data:
          description: A list of archives.
          items:
            $ref: '#/components/schemas/LogsArchiveDefinition'
          type: array
      type: object
    LogsCompute:
      description: A compute rule to compute metrics or timeseries
      example:
        metric: '@duration'
        aggregation: pc90
        interval: 5m
      properties:
        aggregation:
          $ref: '#/components/schemas/LogsAggregationFunction'
        interval:
          description: |-
            The time buckets' size (only used for type=timeseries)
            Defaults to a resolution of 150 points
          example: 5m
          type: string
        metric:
          description: The metric to use
          example: '@duration'
          type: string
        type:
          $ref: '#/components/schemas/LogsComputeType'
      required:
        - aggregation
      type: object
    LogsComputeType:
      default: total
      description: The type of compute
      enum:
        - timeseries
        - total
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOTAL
    LogsGroupBy:
      description: A group by rule
      example:
        histogram:
          min: 50
          max: 100
          interval: 10
        limit: 0
        sort:
          aggregation: count
          order: asc
        facet: host
      properties:
        facet:
          description: The name of the facet to use (required)
          example: host
          type: string
        histogram:
          $ref: '#/components/schemas/LogsGroupBy_histogram'
        limit:
          default: 10
          description: The maximum buckets to return for this group by
          format: int64
          type: integer
        missing:
          $ref: '#/components/schemas/LogsGroupByMissing'
        sort:
          $ref: '#/components/schemas/LogsAggregateSort'
        total:
          $ref: '#/components/schemas/LogsGroupByTotal'
      required:
        - facet
      type: object
    LogsGroupByMissing:
      description: The value to use for logs that don't have the facet used to group
        by
      oneOf:
        - $ref: '#/components/schemas/LogsGroupByMissingString'
        - $ref: '#/components/schemas/LogsGroupByMissingNumber'
    LogsGroupByMissingNumber:
      description: The missing value to use if there is a number valued facet.
      format: double
      type: number
    LogsGroupByMissingString:
      description: The missing value to use if there is string valued facet.
      type: string
    LogsGroupByTotal:
      description: A resulting object to put the given computes in over all the matching
        records.
      oneOf:
        - $ref: '#/components/schemas/LogsGroupByTotalBoolean'
        - $ref: '#/components/schemas/LogsGroupByTotalString'
        - $ref: '#/components/schemas/LogsGroupByTotalNumber'
    LogsGroupByTotalBoolean:
      description: If set to true, creates an additional bucket labeled "$facet_total"
      type: boolean
    LogsGroupByTotalNumber:
      description: A number to use as the key value for the total bucket
      format: double
      type: number
    LogsGroupByTotalString:
      description: A string to use as the key value for the total bucket
      type: string
    LogsListRequest:
      description: The request for a logs list.
      example:
        filter:
          indexes:
            - main
            - web
          query: service:web* AND @http.status_code:[200 TO 299]
          from: now-15m
          to: now
        options:
          timezone: GMT
          timeOffset: 6
        page:
          cursor: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          limit: 25
      properties:
        filter:
          $ref: '#/components/schemas/LogsQueryFilter'
        options:
          $ref: '#/components/schemas/LogsQueryOptions'
        page:
          $ref: '#/components/schemas/LogsListRequest_page'
        sort:
          $ref: '#/components/schemas/LogsSort'
      type: object
    LogsListResponse:
      description: Response object with all logs matching the request and pagination
        information.
      example:
        data:
          - attributes:
              service: agent
              host: i-0123
              attributes:
                customAttribute: 123
                duration: 2345
              message: Host connected to remote
              status: INFO
              tags:
                - team:A
              timestamp: 2019-01-02T09:42:36.32Z
            id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
            type: log
          - attributes:
              service: agent
              host: i-0123
              attributes:
                customAttribute: 123
                duration: 2345
              message: Host connected to remote
              status: INFO
              tags:
                - team:A
              timestamp: 2019-01-02T09:42:36.32Z
            id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
            type: log
        meta:
          elapsed: 132
          warnings:
            - code: unknown_index
              detail: 'indexes: foo, bar'
              title: One or several indexes are missing or invalid, results hold data
                from the other indexes
            - code: unknown_index
              detail: 'indexes: foo, bar'
              title: One or several indexes are missing or invalid, results hold data
                from the other indexes
          page:
            after: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          status: done
        links:
          next: https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        data:
          description: Array of logs matching the request.
          items:
            $ref: '#/components/schemas/Log'
          type: array
        links:
          $ref: '#/components/schemas/LogsListResponse_links'
        meta:
          $ref: '#/components/schemas/LogsResponseMetadata'
      type: object
    LogsMetricCompute:
      description: The compute rule to compute the log-based metric.
      example:
        aggregation_type: distribution
        path: '@duration'
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricComputeAggregationType'
        path:
          description: The path to the value the log-based metric will aggregate on
            (only used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      required:
        - aggregation_type
      type: object
    LogsMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    LogsMetricCreateAttributes:
      description: The object describing the Datadog log-based metric to create.
      example:
        compute:
          aggregation_type: distribution
          path: '@duration'
        filter:
          query: service:web* AND @http.status_code:[200 TO 299]
        group_by:
          - path: '@http.status_code'
            tag_name: status_code
          - path: '@http.status_code'
            tag_name: status_code
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      required:
        - compute
      type: object
    LogsMetricCreateData:
      description: The new log-based metric properties.
      example:
        attributes:
          compute:
            aggregation_type: distribution
            path: '@duration'
          filter:
            query: service:web* AND @http.status_code:[200 TO 299]
          group_by:
            - path: '@http.status_code'
              tag_name: status_code
            - path: '@http.status_code'
              tag_name: status_code
        id: logs.page.load.count
        type: logs_metrics
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricCreateAttributes'
        id:
          description: The name of the log-based metric.
          example: logs.page.load.count
          type: string
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
        - attributes
        - id
        - type
      type: object
    LogsMetricCreateRequest:
      description: The new log-based metric body.
      example:
        data:
          attributes:
            compute:
              aggregation_type: distribution
              path: '@duration'
            filter:
              query: service:web* AND @http.status_code:[200 TO 299]
            group_by:
              - path: '@http.status_code'
                tag_name: status_code
              - path: '@http.status_code'
                tag_name: status_code
          id: logs.page.load.count
          type: logs_metrics
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricCreateData'
      required:
        - data
      type: object
    LogsMetricFilter:
      description: The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      example:
        query: service:web* AND @http.status_code:[200 TO 299]
      properties:
        query:
          default: '*'
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricGroupBy:
      description: A group by rule.
      example:
        path: '@http.status_code'
        tag_name: status_code
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated
            over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: Eventual name of the tag that gets created. By default, the
            path attribute is used as the tag name.
          example: status_code
          type: string
      required:
        - path
      type: object
    LogsMetricID:
      description: The name of the log-based metric.
      example: logs.page.load.count
      type: string
    LogsMetricResponse:
      description: The log-based metric object.
      example:
        data:
          attributes:
            compute:
              aggregation_type: distribution
              path: '@duration'
            filter:
              query: service:web* AND @http.status_code:[200 TO 299]
            group_by:
              - path: '@http.status_code'
                tag_name: status_code
              - path: '@http.status_code'
                tag_name: status_code
          id: logs.page.load.count
          type: logs_metrics
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricResponseData'
      type: object
    LogsMetricResponseAttributes:
      description: The object describing a Datadog log-based metric.
      example:
        compute:
          aggregation_type: distribution
          path: '@duration'
        filter:
          query: service:web* AND @http.status_code:[200 TO 299]
        group_by:
          - path: '@http.status_code'
            tag_name: status_code
          - path: '@http.status_code'
            tag_name: status_code
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricResponseCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricResponseGroupBy'
          type: array
      type: object
    LogsMetricResponseCompute:
      description: The compute rule to compute the log-based metric.
      example:
        aggregation_type: distribution
        path: '@duration'
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricResponseComputeAggregationType'
        path:
          description: The path to the value the log-based metric will aggregate on
            (only used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      type: object
    LogsMetricResponseComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    LogsMetricResponseData:
      description: The log-based metric properties.
      example:
        attributes:
          compute:
            aggregation_type: distribution
            path: '@duration'
          filter:
            query: service:web* AND @http.status_code:[200 TO 299]
          group_by:
            - path: '@http.status_code'
              tag_name: status_code
            - path: '@http.status_code'
              tag_name: status_code
        id: logs.page.load.count
        type: logs_metrics
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricResponseAttributes'
        id:
          description: The name of the log-based metric.
          example: logs.page.load.count
          type: string
        type:
          $ref: '#/components/schemas/LogsMetricType'
      type: object
    LogsMetricResponseFilter:
      description: The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      example:
        query: service:web* AND @http.status_code:[200 TO 299]
      properties:
        query:
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricResponseGroupBy:
      description: A group by rule.
      example:
        path: '@http.status_code'
        tag_name: status_code
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated
            over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: Eventual name of the tag that gets created. By default, the
            path attribute is used as the tag name.
          example: status_code
          type: string
      type: object
    LogsMetricType:
      default: logs_metrics
      description: The type of the resource. The value should always be logs_metrics.
      enum:
        - logs_metrics
      example: logs_metrics
      type: string
      x-enum-varnames:
        - LOGS_METRICS
    LogsMetricUpdateAttributes:
      description: The log-based metric properties that will be updated.
      example:
        filter:
          query: service:web* AND @http.status_code:[200 TO 299]
        group_by:
          - path: '@http.status_code'
            tag_name: status_code
          - path: '@http.status_code'
            tag_name: status_code
      properties:
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      type: object
    LogsMetricUpdateData:
      description: The new log-based metric properties.
      example:
        attributes:
          filter:
            query: service:web* AND @http.status_code:[200 TO 299]
          group_by:
            - path: '@http.status_code'
              tag_name: status_code
            - path: '@http.status_code'
              tag_name: status_code
        type: logs_metrics
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricUpdateAttributes'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
        - attributes
        - type
      type: object
    LogsMetricUpdateRequest:
      description: The new log-based metric body.
      example:
        data:
          attributes:
            filter:
              query: service:web* AND @http.status_code:[200 TO 299]
            group_by:
              - path: '@http.status_code'
                tag_name: status_code
              - path: '@http.status_code'
                tag_name: status_code
          type: logs_metrics
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricUpdateData'
      required:
        - data
      type: object
    LogsMetricsResponse:
      description: All the available log-based metric objects.
      example:
        data:
          - attributes:
              compute:
                aggregation_type: distribution
                path: '@duration'
              filter:
                query: service:web* AND @http.status_code:[200 TO 299]
              group_by:
                - path: '@http.status_code'
                  tag_name: status_code
                - path: '@http.status_code'
                  tag_name: status_code
            id: logs.page.load.count
            type: logs_metrics
          - attributes:
              compute:
                aggregation_type: distribution
                path: '@duration'
              filter:
                query: service:web* AND @http.status_code:[200 TO 299]
              group_by:
                - path: '@http.status_code'
                  tag_name: status_code
                - path: '@http.status_code'
                  tag_name: status_code
            id: logs.page.load.count
            type: logs_metrics
      properties:
        data:
          description: A list of log-based metric objects.
          items:
            $ref: '#/components/schemas/LogsMetricResponseData'
          type: array
      type: object
    LogsQueryFilter:
      description: The search and filter query settings
      example:
        indexes:
          - main
          - web
        query: service:web* AND @http.status_code:[200 TO 299]
        from: now-15m
        to: now
      properties:
        from:
          default: now-15m
          description: The minimum time for the requested logs, supports date math
            and regular timestamps
          example: now-15m
          type: string
        indexes:
          default:
            - '*'
          description: For customers with multiple indexes, the indexes to search.
            Defaults to ['*'] which means all indexes.
          example:
            - main
            - web
          items:
            description: The name of a log index.
            type: string
          type: array
        query:
          default: '*'
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        to:
          default: now
          description: The maximum time for the requested logs, supports date math
            and regular timestamps
          example: now
          type: string
      type: object
    LogsQueryOptions:
      description: |-
        Global query options that are used during the query.
        Note: You should only supply timezone or time offset but not both otherwise the query will fail.
      example:
        timezone: GMT
        timeOffset: 6
      properties:
        timeOffset:
          description: The time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: 'The timezone can be specified both as an offset, for example:
            "UTC+03:00".'
          example: GMT
          type: string
      type: object
    LogsResponseMetadata:
      description: The metadata associated with a request
      example:
        elapsed: 132
        warnings:
          - code: unknown_index
            detail: 'indexes: foo, bar'
            title: One or several indexes are missing or invalid, results hold data
              from the other indexes
          - code: unknown_index
            detail: 'indexes: foo, bar'
            title: One or several indexes are missing or invalid, results hold data
              from the other indexes
        page:
          after: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        request_id: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
        status: done
      properties:
        elapsed:
          description: The time elapsed in milliseconds
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/LogsResponseMetadata_page'
        request_id:
          description: The identifier of the request
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/LogsAggregateResponseStatus'
        warnings:
          description: |-
            A list of warnings (non fatal errors) encountered, partial results might be returned if
            warnings are present in the response.
          items:
            $ref: '#/components/schemas/LogsWarning'
          type: array
      type: object
    LogsSort:
      description: Sort parameters when querying logs.
      enum:
        - timestamp
        - -timestamp
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    LogsSortOrder:
      description: The order to use, ascending or descending
      enum:
        - asc
        - desc
      example: asc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    LogsWarning:
      description: A warning message indicating something that went wrong with the
        query
      example:
        code: unknown_index
        detail: 'indexes: foo, bar'
        title: One or several indexes are missing or invalid, results hold data from
          the other indexes
      properties:
        code:
          description: A unique code for this type of warning
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning
          example: One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    Metric:
      description: Object for a single metric tag configuration.
      example:
        id: metric.foo.bar
        type: metric
      properties:
        id:
          description: The metric name for this resource.
          example: test.metric.latency
          type: string
        type:
          $ref: '#/components/schemas/MetricType'
      type: object
    MetricAllTags:
      description: Object for a single metric's indexed tags.
      example:
        attributes:
          tags:
            - sport:golf
            - sport:football
            - animal:dog
        id: test.metric.latency
        type: metrics
      properties:
        attributes:
          $ref: '#/components/schemas/MetricAllTagsAttributes'
        id:
          description: The metric name for this resource.
          example: test.metric.latency
          type: string
        type:
          $ref: '#/components/schemas/MetricType'
      type: object
    MetricAllTagsAttributes:
      description: Object containing the definition of a metric's tags.
      example:
        tags:
          - sport:golf
          - sport:football
          - animal:dog
      properties:
        tags:
          description: List of indexed tag value pairs.
          example:
            - sport:golf
            - sport:football
            - animal:dog
          items:
            description: Tag key-value pairs.
            type: string
          type: array
      type: object
    MetricAllTagsResponse:
      description: Response object that includes a single metric's indexed tags.
      example:
        data:
          attributes:
            tags:
              - sport:golf
              - sport:football
              - animal:dog
          id: test.metric.latency
          type: metrics
      properties:
        data:
          $ref: '#/components/schemas/MetricAllTags'
      readOnly: true
      type: object
    MetricDistinctVolume:
      description: Object for a single metric's distinct volume.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricDistinctVolumeAttributes'
        id:
          description: The metric name for this resource.
          example: test.metric.latency
          type: string
        type:
          $ref: '#/components/schemas/MetricDistinctVolumeType'
      type: object
    MetricDistinctVolumeAttributes:
      description: Object containing the definition of a metric's distinct volume.
      properties:
        distinct_volume:
          description: Distinct volume for the given metric.
          example: 10
          format: int64
          type: integer
      type: object
    MetricDistinctVolumeType:
      default: distinct_metric_volumes
      description: The metric distinct volume type.
      enum:
        - distinct_metric_volumes
      example: distinct_metric_volumes
      type: string
      x-enum-varnames:
        - DISTINCT_METRIC_VOLUMES
    MetricIngestedIndexedVolume:
      description: Object for a single metric's ingested and indexed volume.
      properties:
        attributes:
          $ref: '#/components/schemas/MetricIngestedIndexedVolumeAttributes'
        id:
          description: The metric name for this resource.
          example: test.metric.latency
          type: string
        type:
          $ref: '#/components/schemas/MetricIngestedIndexedVolumeType'
      type: object
    MetricIngestedIndexedVolumeAttributes:
      description: Object containing the definition of a metric's ingested and indexed
        volume.
      properties:
        indexed_volume:
          description: Indexed volume for the given metric.
          example: 10
          format: int64
          type: integer
        ingested_volume:
          description: Ingested volume for the given metric.
          example: 20
          format: int64
          type: integer
      type: object
    MetricIngestedIndexedVolumeType:
      default: metric_volumes
      description: The metric ingested and indexed volume type.
      enum:
        - metric_volumes
      example: metric_volumes
      type: string
      x-enum-varnames:
        - METRIC_VOLUMES
    MetricName:
      description: The metric name for this resource.
      example: test.metric.latency
      type: string
    MetricTagConfiguration:
      description: Object for a single metric tag configuration.
      example:
        attributes:
          created_at: 2020-03-31T09:48:37.463835Z
          metric_type: gauge
          modified_at: 2020-04-31T09:48:37.463835Z
          tags:
            - app
            - datacenter
        id: http.request.latency
        type: manage_tags
      properties:
        attributes:
          $ref: '#/components/schemas/MetricTagConfigurationAttributes'
        id:
          description: The metric name for this resource.
          example: test.metric.latency
          type: string
        type:
          $ref: '#/components/schemas/MetricTagConfigurationType'
      type: object
    MetricTagConfigurationAttributes:
      description: Object containing the definition of a metric tag configuration
        attributes.
      properties:
        created_at:
          description: Timestamp when the tag configuration was created.
          example: 2020-03-31T09:48:37.463835Z
          format: date-time
          type: string
        include_percentiles:
          description: |-
            Toggle to turn on/off percentile aggregations for distribution metrics.
            Only present when the `metric_type` is `distribution`.
          example: true
          type: boolean
        metric_type:
          $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'
        modified_at:
          description: Timestamp when the tag configuration was last modified.
          example: 2020-03-31T09:48:37.463835Z
          format: date-time
          type: string
        tags:
          description: List of tag keys on which to group.
          example:
            - app
            - datacenter
          items:
            description: Tag keys to group by.
            type: string
          type: array
      type: object
    MetricTagConfigurationCreateAttributes:
      description: Object containing the definition of a metric tag configuration
        to be created.
      properties:
        include_percentiles:
          default: false
          description: |-
            Toggle to include/exclude percentiles for a distribution metric.
            Defaults to false. Can only be applied to metrics that have a `metric_type` of `distribution`.
          example: true
          type: boolean
        metric_type:
          $ref: '#/components/schemas/MetricTagConfigurationMetricTypes'
        tags:
          default: []
          description: A list of tag keys that will be queryable for your metric.
          example:
            - app
            - datacenter
          items:
            description: Tag keys to group by.
            type: string
          type: array
      required:
        - metric_type
        - tags
      type: object
    MetricTagConfigurationCreateData:
      description: Object for a single metric to be configure tags on.
      example:
        attributes:
          include_percentiles: false
          metric_type: distribution
          tags:
            - app
            - datacenter
        id: http.endpoint.request
        type: manage_tags
      properties:
        attributes:
          $ref: '#/components/schemas/MetricTagConfigurationCreateAttributes'
        id:
          description: The metric name for this resource.
          example: test.metric.latency
          type: string
        type:
          $ref: '#/components/schemas/MetricTagConfigurationType'
      required:
        - id
        - type
      type: object
    MetricTagConfigurationCreateRequest:
      description: Request object that includes the metric that you would like to
        configure tags for.
      example:
        data:
          attributes:
            include_percentiles: false
            metric_type: distribution
            tags:
              - app
              - datacenter
          id: http.endpoint.request
          type: manage_tags
      properties:
        data:
          $ref: '#/components/schemas/MetricTagConfigurationCreateData'
      required:
        - data
      type: object
    MetricTagConfigurationMetricTypes:
      default: gauge
      description: The metric's type.
      enum:
        - gauge
        - count
        - rate
        - distribution
      example: count
      type: string
      x-enum-varnames:
        - GAUGE
        - COUNT
        - RATE
        - DISTRIBUTION
    MetricTagConfigurationResponse:
      description: Response object which includes a single metric's tag configuration.
      example:
        data:
          attributes:
            created_at: 2020-03-31T09:48:37.463835Z
            metric_type: gauge
            modified_at: 2020-04-31T09:48:37.463835Z
            tags:
              - app
              - datacenter
          id: http.request.latency
          type: manage_tags
      properties:
        data:
          $ref: '#/components/schemas/MetricTagConfiguration'
      readOnly: true
      type: object
    MetricTagConfigurationType:
      default: manage_tags
      description: The metric tag configuration resource type.
      enum:
        - manage_tags
      example: manage_tags
      type: string
      x-enum-varnames:
        - MANAGE_TAGS
    MetricTagConfigurationUpdateAttributes:
      description: Object containing the definition of a metric tag configuration
        to be updated.
      properties:
        include_percentiles:
          default: false
          description: |-
            Toggle to include/exclude percentiles for a distribution metric.
            Defaults to false. Can only be applied to metrics that have a `metric_type` of `distribution`.
          example: true
          type: boolean
        tags:
          default: []
          description: A list of tag keys that will be queryable for your metric.
          example:
            - app
            - datacenter
          items:
            description: Tag keys to group by.
            type: string
          type: array
      type: object
    MetricTagConfigurationUpdateData:
      description: Object for a single tag configuration to be edited.
      example:
        attributes:
          group_by:
            - app
            - datacenter
          include_percentiles: false
        id: http.endpoint.request
        type: manage_tags
      properties:
        attributes:
          $ref: '#/components/schemas/MetricTagConfigurationUpdateAttributes'
        id:
          description: The metric name for this resource.
          example: test.metric.latency
          type: string
        type:
          $ref: '#/components/schemas/MetricTagConfigurationType'
      required:
        - id
        - type
      type: object
    MetricTagConfigurationUpdateRequest:
      description: Request object that includes the metric that you would like to
        edit the tag configuration on.
      example:
        data:
          attributes:
            group_by:
              - app
              - datacenter
            include_percentiles: false
          id: http.endpoint.request
          type: manage_tags
      properties:
        data:
          $ref: '#/components/schemas/MetricTagConfigurationUpdateData'
      required:
        - data
      type: object
    MetricType:
      default: metrics
      description: The metric resource type.
      enum:
        - metrics
      example: metrics
      type: string
      x-enum-varnames:
        - METRICS
    MetricVolumes:
      description: Possible response objects for a metric's volume.
      oneOf:
        - $ref: '#/components/schemas/MetricDistinctVolume'
        - $ref: '#/components/schemas/MetricIngestedIndexedVolume'
      type: object
    MetricVolumesResponse:
      description: Response object which includes a single metric's volume.
      example: {}
      properties:
        data:
          $ref: '#/components/schemas/MetricVolumes'
      readOnly: true
      type: object
    MetricsAndMetricTagConfigurations:
      description: Object for a metrics and metric tag configurations.
      oneOf:
        - $ref: '#/components/schemas/Metric'
        - $ref: '#/components/schemas/MetricTagConfiguration'
      type: object
    MetricsAndMetricTagConfigurationsResponse:
      description: Response object that includes metrics and metric tag configurations.
      example:
        data:
          - null
          - null
      properties:
        data:
          description: Array of metrics and metric tag configurations.
          items:
            $ref: '#/components/schemas/MetricsAndMetricTagConfigurations'
          type: array
      readOnly: true
      type: object
    Organization:
      description: Organization object.
      properties:
        attributes:
          $ref: '#/components/schemas/OrganizationAttributes'
        id:
          description: ID of the organization.
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - type
      type: object
    OrganizationAttributes:
      description: Attributes of the organization.
      properties:
        created_at:
          description: Creation time of the organization.
          format: date-time
          type: string
        description:
          description: Description of the organization.
          type: string
        disabled:
          description: Whether or not the organization is disabled.
          type: boolean
        modified_at:
          description: Time of last organization modification.
          format: date-time
          type: string
        name:
          description: Name of the organization.
          type: string
        public_id:
          description: Public ID of the organization.
          type: string
        sharing:
          description: Sharing type of the organization.
          type: string
        url:
          description: URL of the site that this organization exists at.
          type: string
      type: object
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    Pagination:
      description: Pagination object.
      example:
        total_count: 6
        total_filtered_count: 1
      properties:
        total_count:
          description: Total count.
          format: int64
          type: integer
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    PartialAPIKey:
      description: Partial Datadog API key.
      example:
        relationships:
          modified_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          last4: abcd
          name: API Key for submitting metrics
          created_at: 2020-11-23T10:00:00.000Z
          modified_at: 2020-11-23T10:00:00.000Z
        id: id
        type: api_keys
      properties:
        attributes:
          $ref: '#/components/schemas/PartialAPIKeyAttributes'
        id:
          description: ID of the API key.
          type: string
        relationships:
          $ref: '#/components/schemas/APIKeyRelationships'
        type:
          $ref: '#/components/schemas/APIKeysType'
      type: object
    PartialAPIKeyAttributes:
      description: Attributes of a partial API key.
      example:
        last4: abcd
        name: API Key for submitting metrics
        created_at: 2020-11-23T10:00:00.000Z
        modified_at: 2020-11-23T10:00:00.000Z
      properties:
        created_at:
          description: Creation date of the API key.
          example: 2020-11-23T10:00:00.000Z
          readOnly: true
          type: string
        last4:
          description: The last four characters of the API key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        modified_at:
          description: Date the API key was last modified.
          example: 2020-11-23T10:00:00.000Z
          readOnly: true
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
      type: object
    PartialApplicationKey:
      description: Partial Datadog application key.
      example:
        relationships:
          created_by:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: users
        attributes:
          last4: abcd
          name: Application Key for submitting metrics
          created_at: 2020-11-23T10:00:00.000Z
        id: id
        type: application_keys
      properties:
        attributes:
          $ref: '#/components/schemas/PartialApplicationKeyAttributes'
        id:
          description: ID of the application key.
          type: string
        relationships:
          $ref: '#/components/schemas/ApplicationKeyRelationships'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      type: object
    PartialApplicationKeyAttributes:
      description: Attributes of a partial application key.
      example:
        last4: abcd
        name: Application Key for submitting metrics
        created_at: 2020-11-23T10:00:00.000Z
      properties:
        created_at:
          description: Creation date of the application key.
          example: 2020-11-23T10:00:00.000Z
          readOnly: true
          type: string
        last4:
          description: The last four characters of the application key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        name:
          description: Name of the application key.
          example: Application Key for submitting metrics
          type: string
      type: object
    Permission:
      description: Permission object.
      example:
        attributes:
          display_type: display_type
          group_name: group_name
          created: 2000-01-23T04:56:07.000+00:00
          restricted: true
          name: name
          description: description
          display_name: display_name
        id: id
        type: permissions
      properties:
        attributes:
          $ref: '#/components/schemas/PermissionAttributes'
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      required:
        - type
      type: object
    PermissionAttributes:
      description: Attributes of a permission.
      example:
        display_type: display_type
        group_name: group_name
        created: 2000-01-23T04:56:07.000+00:00
        restricted: true
        name: name
        description: description
        display_name: display_name
      properties:
        created:
          description: Creation time of the permission.
          format: date-time
          type: string
        description:
          description: Description of the permission.
          type: string
        display_name:
          description: Displayed name for the permission.
          type: string
        display_type:
          description: Display type.
          type: string
        group_name:
          description: Name of the permission group.
          type: string
        name:
          description: Name of the permission.
          type: string
        restricted:
          description: Whether or not the permission is restricted.
          type: boolean
      type: object
    PermissionsResponse:
      description: Payload with API-returned permissions.
      example:
        data:
          - attributes:
              display_type: display_type
              group_name: group_name
              created: 2000-01-23T04:56:07.000+00:00
              restricted: true
              name: name
              description: description
              display_name: display_name
            id: id
            type: permissions
          - attributes:
              display_type: display_type
              group_name: group_name
              created: 2000-01-23T04:56:07.000+00:00
              restricted: true
              name: name
              description: description
              display_name: display_name
            id: id
            type: permissions
      properties:
        data:
          description: Array of permissions.
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    PermissionsType:
      default: permissions
      description: Permissions resource type.
      enum:
        - permissions
      example: permissions
      type: string
      x-enum-varnames:
        - PERMISSIONS
    ProcessSummariesMeta:
      description: Response metadata object.
      example:
        page:
          size: 1465
          after: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd
      properties:
        page:
          $ref: '#/components/schemas/ProcessSummariesMeta_page'
      type: object
    ProcessSummariesResponse:
      description: List of process summaries.
      example:
        data:
          - attributes:
              cmdline: cmdline
              host: host
              start: start
              pid: 0
              user: user
              ppid: 6
              tags:
                - tags
                - tags
              timestamp: timestamp
            id: id
            type: process
          - attributes:
              cmdline: cmdline
              host: host
              start: start
              pid: 0
              user: user
              ppid: 6
              tags:
                - tags
                - tags
              timestamp: timestamp
            id: id
            type: process
        meta:
          page:
            size: 1465
            after: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd
      properties:
        data:
          description: Array of process summary objects.
          items:
            $ref: '#/components/schemas/ProcessSummary'
          type: array
        meta:
          $ref: '#/components/schemas/ProcessSummariesMeta'
      type: object
    ProcessSummary:
      description: Process summary object.
      example:
        attributes:
          cmdline: cmdline
          host: host
          start: start
          pid: 0
          user: user
          ppid: 6
          tags:
            - tags
            - tags
          timestamp: timestamp
        id: id
        type: process
      properties:
        attributes:
          $ref: '#/components/schemas/ProcessSummaryAttributes'
        id:
          description: Process ID.
          type: string
        type:
          $ref: '#/components/schemas/ProcessSummaryType'
      type: object
    ProcessSummaryAttributes:
      description: Attributes for a process summary.
      example:
        cmdline: cmdline
        host: host
        start: start
        pid: 0
        user: user
        ppid: 6
        tags:
          - tags
          - tags
        timestamp: timestamp
      properties:
        cmdline:
          description: Process command line.
          type: string
        host:
          description: Host running the process.
          type: string
        pid:
          description: Process ID.
          format: int64
          type: integer
        ppid:
          description: Parent process ID.
          format: int64
          type: integer
        start:
          description: Time the process was started.
          type: string
        tags:
          description: List of tags associated with the process.
          items:
            description: A tag associated with the process.
            type: string
          type: array
        timestamp:
          description: Time the process was seen.
          type: string
        user:
          description: Process owner.
          type: string
      type: object
    ProcessSummaryType:
      default: process
      description: Type of process summary.
      enum:
        - process
      example: process
      type: string
      x-enum-varnames:
        - PROCESS
    QuerySortOrder:
      default: desc
      description: Direction of sort.
      enum:
        - asc
        - desc
      type: string
      x-enum-varnames:
        - ASC
        - DESC
    RelationshipToIncidentIntegrationMetadataData:
      description: A relationship reference for an integration metadata object.
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: incident_integrations
      properties:
        id:
          description: A unique identifier that represents the integration metadata.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentIntegrationMetadatas:
      description: A relationship reference for multiple integration metadata objects.
      example:
        data:
          - id: 00000000-0000-0000-0000-000000000000
            type: incident_integrations
          - id: 00000000-0000-0000-0000-000000000000
            type: incident_integrations
      properties:
        data:
          description: The integration metadata relationship array
          example:
            - id: 00000000-0000-0000-0000-000000000000
              type: incident_integrations
            - id: 00000000-0000-0000-0000-000000000000
              type: incident_integrations
          items:
            $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadataData'
          type: array
      required:
        - data
      type: object
    RelationshipToIncidentPostmortem:
      description: A relationship reference for postmortems.
      example:
        data:
          id: 00000000-0000-0000-0000-000000000000
          type: incident_postmortems
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToIncidentPostmortemData'
      required:
        - data
      type: object
    RelationshipToIncidentPostmortemData:
      description: The postmortem relationship data.
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: incident_postmortems
      properties:
        id:
          description: A unique identifier that represents the postmortem.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentPostmortemType'
      required:
        - id
        - type
      type: object
    RelationshipToOrganization:
      description: Relationship to an organization.
      example:
        data:
          id: 00000000-0000-0000-0000-000000000000
          type: orgs
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
        - data
      type: object
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: orgs
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - id
        - type
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      example:
        data: []
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
        - data
      type: object
    RelationshipToPermission:
      description: Relationship to a permissions object.
      example:
        data:
          id: id
          type: permissions
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToPermissionData'
      type: object
    RelationshipToPermissionData:
      description: Relationship to permission object.
      example:
        id: id
        type: permissions
      properties:
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      type: object
    RelationshipToPermissions:
      description: Relationship to multiple permissions objects.
      example:
        data:
          - id: id
            type: permissions
          - id: id
            type: permissions
      properties:
        data:
          description: Relationships to permission objects.
          items:
            $ref: '#/components/schemas/RelationshipToPermissionData'
          type: array
      type: object
    RelationshipToRole:
      description: Relationship to role.
      example:
        data:
          id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: roles
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToRoleData'
      type: object
    RelationshipToRoleData:
      description: Relationship to role object.
      example:
        id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
        type: roles
      properties:
        id:
          description: ID of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    RelationshipToRoles:
      description: Relationship to roles.
      example:
        data:
          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
            type: roles
          - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
            type: roles
      properties:
        data:
          description: An array containing type and ID of a role.
          items:
            $ref: '#/components/schemas/RelationshipToRoleData'
          type: array
      type: object
    RelationshipToUser:
      description: Relationship to user.
      example:
        data:
          id: 00000000-0000-0000-0000-000000000000
          type: users
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserData'
      required:
        - data
      type: object
    RelationshipToUserData:
      description: Relationship to user object.
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: users
      properties:
        id:
          description: This person is assigned as the leader of the incident investigation.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToUsers:
      description: Relationship to users.
      example:
        data: []
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToUserData'
          type: array
      required:
        - data
      type: object
    ResponseMetaAttributes:
      description: Object describing meta attributes of response.
      example:
        page:
          total_count: 6
          total_filtered_count: 1
      properties:
        page:
          $ref: '#/components/schemas/Pagination'
      type: object
    Role:
      description: Role object returned by the API.
      example:
        relationships:
          permissions:
            data:
              - id: id
                type: permissions
              - id: id
                type: permissions
        attributes:
          user_count: 0
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          modified_at: 2000-01-23T04:56:07.000+00:00
        id: id
        type: roles
      properties:
        attributes:
          $ref: '#/components/schemas/RoleAttributes'
        id:
          description: ID of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    RoleAttributes:
      description: Attributes of the role.
      example:
        user_count: 0
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the role.
          type: string
        user_count:
          description: Number of users with that role.
          format: int64
          readOnly: true
          type: integer
      type: object
    RoleCreateAttributes:
      description: Attributes of the created role.
      example:
        name: developers
        created_at: 2000-01-23T04:56:07.000+00:00
        modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the role.
          example: developers
          type: string
      required:
        - name
      type: object
    RoleCreateData:
      description: Data related to the creation of a role.
      example:
        relationships:
          permissions:
            data:
              - id: id
                type: permissions
              - id: id
                type: permissions
          users:
            data: []
        attributes:
          name: developers
          created_at: 2000-01-23T04:56:07.000+00:00
          modified_at: 2000-01-23T04:56:07.000+00:00
        type: roles
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCreateAttributes'
        relationships:
          $ref: '#/components/schemas/RoleRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - attributes
      type: object
    RoleCreateRequest:
      description: Create a role.
      example:
        data:
          relationships:
            permissions:
              data:
                - id: id
                  type: permissions
                - id: id
                  type: permissions
            users:
              data: []
          attributes:
            name: developers
            created_at: 2000-01-23T04:56:07.000+00:00
            modified_at: 2000-01-23T04:56:07.000+00:00
          type: roles
      properties:
        data:
          $ref: '#/components/schemas/RoleCreateData'
      required:
        - data
      type: object
    RoleCreateResponse:
      description: Response containing information about a created role.
      example:
        data:
          relationships:
            permissions:
              data:
                - id: id
                  type: permissions
                - id: id
                  type: permissions
          attributes:
            name: developers
            created_at: 2000-01-23T04:56:07.000+00:00
            modified_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: roles
      properties:
        data:
          $ref: '#/components/schemas/RoleCreateResponse_data'
      type: object
    RoleRelationships:
      description: Relationships of the role object.
      example:
        permissions:
          data:
            - id: id
              type: permissions
            - id: id
              type: permissions
        users:
          data: []
      properties:
        permissions:
          $ref: '#/components/schemas/RelationshipToPermissions'
        users:
          $ref: '#/components/schemas/RelationshipToUsers'
      type: object
    RoleResponse:
      description: Response containing information about a single role.
      example:
        data:
          relationships:
            permissions:
              data:
                - id: id
                  type: permissions
                - id: id
                  type: permissions
          attributes:
            user_count: 0
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            modified_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: roles
      properties:
        data:
          $ref: '#/components/schemas/Role'
      type: object
    RoleResponseRelationships:
      description: Relationships of the role object returned by the API.
      example:
        permissions:
          data:
            - id: id
              type: permissions
            - id: id
              type: permissions
      properties:
        permissions:
          $ref: '#/components/schemas/RelationshipToPermissions'
      type: object
    RoleUpdateAttributes:
      description: Attributes of the role.
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        modified_at: 2000-01-23T04:56:07.000+00:00
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the role.
          type: string
      type: object
    RoleUpdateData:
      description: Data related to the update of a role.
      example:
        attributes:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          modified_at: 2000-01-23T04:56:07.000+00:00
        id: 00000000-0000-0000-0000-000000000000
        type: roles
      properties:
        attributes:
          $ref: '#/components/schemas/RoleUpdateAttributes'
        id:
          description: ID of the role.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - attributes
        - id
        - type
      type: object
    RoleUpdateRequest:
      description: Update a role.
      example:
        data:
          attributes:
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            modified_at: 2000-01-23T04:56:07.000+00:00
          id: 00000000-0000-0000-0000-000000000000
          type: roles
      properties:
        data:
          $ref: '#/components/schemas/RoleUpdateData'
      required:
        - data
      type: object
    RoleUpdateResponse:
      description: Response containing information about an updated role.
      example:
        data:
          relationships:
            permissions:
              data:
                - id: id
                  type: permissions
                - id: id
                  type: permissions
          attributes:
            name: name
            created_at: 2000-01-23T04:56:07.000+00:00
            modified_at: 2000-01-23T04:56:07.000+00:00
          id: id
          type: roles
      properties:
        data:
          $ref: '#/components/schemas/RoleUpdateResponse_data'
      type: object
    RolesResponse:
      description: Response containing information about multiple roles.
      example:
        data:
          - relationships:
              permissions:
                data:
                  - id: id
                    type: permissions
                  - id: id
                    type: permissions
            attributes:
              user_count: 0
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              modified_at: 2000-01-23T04:56:07.000+00:00
            id: id
            type: roles
          - relationships:
              permissions:
                data:
                  - id: id
                    type: permissions
                  - id: id
                    type: permissions
            attributes:
              user_count: 0
              name: name
              created_at: 2000-01-23T04:56:07.000+00:00
              modified_at: 2000-01-23T04:56:07.000+00:00
            id: id
            type: roles
        meta:
          page:
            total_count: 6
            total_filtered_count: 1
      properties:
        data:
          description: Array of returned roles.
          items:
            $ref: '#/components/schemas/Role'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    RolesSort:
      default: name
      description: Sorting options for roles.
      enum:
        - name
        - -name
        - modified_at
        - -modified_at
        - user_count
        - -user_count
      type: string
      x-enum-varnames:
        - NAME_ASCENDING
        - NAME_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - USER_COUNT_ASCENDING
        - USER_COUNT_DESCENDING
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
    SecurityFilter:
      description: The security filter's properties.
      example:
        attributes:
          is_enabled: false
          exclusion_filters:
            - query: source:staging
              name: Exclude staging
            - query: source:staging
              name: Exclude staging
          query: service:api
          filtered_data_type: logs
          name: Custom security filter
          version: 1
          is_builtin: false
        id: 3dd-0uc-h1s
        type: security_filters
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterAttributes'
        id:
          description: The ID of the security filter.
          example: 3dd-0uc-h1s
          type: string
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      type: object
    SecurityFilterAttributes:
      description: The object describing a security filter.
      example:
        is_enabled: false
        exclusion_filters:
          - query: source:staging
            name: Exclude staging
          - query: source:staging
            name: Exclude staging
        query: service:api
        filtered_data_type: logs
        name: Custom security filter
        version: 1
        is_builtin: false
      properties:
        exclusion_filters:
          description: The list of exclusion filters applied in this security filter.
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilterResponse'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_builtin:
          description: Whether the security filter is the built-in filter.
          example: false
          type: boolean
        is_enabled:
          description: Whether the security filter is enabled.
          example: false
          type: boolean
        name:
          description: The security filter name.
          example: Custom security filter
          type: string
        query:
          description: The security filter query. Logs accepted by this query will
            be accepted by this filter.
          example: service:api
          type: string
        version:
          description: The version of the security filter.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityFilterCreateAttributes:
      description: Object containing the attributes of the security filter to be created.
      example:
        is_enabled: true
        exclusion_filters:
          - name: Exclude staging
            query: source:staging
        query: service:api
        filtered_data_type: logs
        name: Custom security filter
      properties:
        exclusion_filters:
          description: Exclusion filters to exclude some logs from the security filter.
          example:
            - name: Exclude staging
              query: source:staging
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilter'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_enabled:
          description: Whether the security filter is enabled.
          example: true
          type: boolean
        name:
          description: The name of the security filter.
          example: Custom security filter
          type: string
        query:
          description: The query of the security filter.
          example: service:api
          type: string
      required:
        - exclusion_filters
        - filtered_data_type
        - is_enabled
        - name
        - query
      type: object
    SecurityFilterCreateData:
      description: Object for a single security filter.
      example:
        attributes:
          is_enabled: true
          exclusion_filters:
            - name: Exclude staging
              query: source:staging
          query: service:api
          filtered_data_type: logs
          name: Custom security filter
        type: security_filters
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterCreateAttributes'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      required:
        - attributes
        - type
      type: object
    SecurityFilterCreateRequest:
      description: Request object that includes the security filter that you would
        like to create.
      example:
        data:
          attributes:
            is_enabled: true
            exclusion_filters:
              - name: Exclude staging
                query: source:staging
            query: service:api
            filtered_data_type: logs
            name: Custom security filter
          type: security_filters
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilterCreateData'
      required:
        - data
      type: object
    SecurityFilterExclusionFilter:
      description: Exclusion filter for the security filter.
      example:
        name: Exclude staging
        query: source:staging
      properties:
        name:
          description: Exclusion filter name.
          example: Exclude staging
          type: string
        query:
          description: Exclusion filter query. Logs that match this query are excluded
            from the security filter.
          example: source:staging
          type: string
      required:
        - name
        - query
      type: object
    SecurityFilterExclusionFilterResponse:
      description: A single exclusion filter.
      example:
        query: source:staging
        name: Exclude staging
      properties:
        name:
          description: The exclusion filter name.
          example: Exclude staging
          type: string
        query:
          description: The exclusion filter query.
          example: source:staging
          type: string
      type: object
    SecurityFilterFilteredDataType:
      description: The filtered data type.
      enum:
        - logs
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
    SecurityFilterID:
      description: The ID of the security filter.
      example: 3dd-0uc-h1s
      type: string
    SecurityFilterMeta:
      description: Optional metadata associated to the response.
      example:
        warning: All the security filters are disabled. As a result, no logs are being
          analyzed.
      properties:
        warning:
          description: A warning message.
          example: All the security filters are disabled. As a result, no logs are
            being analyzed.
          type: string
      type: object
    SecurityFilterResponse:
      description: Response object which includes a single security filter.
      example:
        data:
          attributes:
            is_enabled: false
            exclusion_filters:
              - query: source:staging
                name: Exclude staging
              - query: source:staging
                name: Exclude staging
            query: service:api
            filtered_data_type: logs
            name: Custom security filter
            version: 1
            is_builtin: false
          id: 3dd-0uc-h1s
          type: security_filters
        meta:
          warning: All the security filters are disabled. As a result, no logs are
            being analyzed.
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilter'
        meta:
          $ref: '#/components/schemas/SecurityFilterMeta'
      type: object
    SecurityFilterType:
      default: security_filters
      description: The type of the resource. The value should always be `security_filters`.
      enum:
        - security_filters
      example: security_filters
      type: string
      x-enum-varnames:
        - SECURITY_FILTERS
    SecurityFilterUpdateAttributes:
      description: The security filters properties to be updated.
      example:
        is_enabled: true
        exclusion_filters: []
        query: service:api
        filtered_data_type: logs
        name: Custom security filter
        version: 1
      properties:
        exclusion_filters:
          description: Exclusion filters to exclude some logs from the security filter.
          example: []
          items:
            $ref: '#/components/schemas/SecurityFilterExclusionFilter'
          type: array
        filtered_data_type:
          $ref: '#/components/schemas/SecurityFilterFilteredDataType'
        is_enabled:
          description: Whether the security filter is enabled.
          example: true
          type: boolean
        name:
          description: The name of the security filter.
          example: Custom security filter
          type: string
        query:
          description: The query of the security filter.
          example: service:api
          type: string
        version:
          description: The version of the security filter to update.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityFilterUpdateData:
      description: The new security filter properties.
      example:
        attributes:
          is_enabled: true
          exclusion_filters: []
          query: service:api
          filtered_data_type: logs
          name: Custom security filter
          version: 1
        type: security_filters
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityFilterUpdateAttributes'
        type:
          $ref: '#/components/schemas/SecurityFilterType'
      required:
        - attributes
        - type
      type: object
    SecurityFilterUpdateRequest:
      description: The new security filter body.
      example:
        data:
          attributes:
            is_enabled: true
            exclusion_filters: []
            query: service:api
            filtered_data_type: logs
            name: Custom security filter
            version: 1
          type: security_filters
      properties:
        data:
          $ref: '#/components/schemas/SecurityFilterUpdateData'
      required:
        - data
      type: object
    SecurityFiltersResponse:
      description: All the available security filters objects.
      example:
        data:
          - attributes:
              is_enabled: false
              exclusion_filters:
                - query: source:staging
                  name: Exclude staging
                - query: source:staging
                  name: Exclude staging
              query: service:api
              filtered_data_type: logs
              name: Custom security filter
              version: 1
              is_builtin: false
            id: 3dd-0uc-h1s
            type: security_filters
          - attributes:
              is_enabled: false
              exclusion_filters:
                - query: source:staging
                  name: Exclude staging
                - query: source:staging
                  name: Exclude staging
              query: service:api
              filtered_data_type: logs
              name: Custom security filter
              version: 1
              is_builtin: false
            id: 3dd-0uc-h1s
            type: security_filters
        meta:
          warning: All the security filters are disabled. As a result, no logs are
            being analyzed.
      properties:
        data:
          description: A list of security filters objects.
          items:
            $ref: '#/components/schemas/SecurityFilter'
          type: array
        meta:
          $ref: '#/components/schemas/SecurityFilterMeta'
      type: object
    SecurityMonitoringFilter:
      description: The rule's suppression filter.
      example:
        query: query
      properties:
        action:
          $ref: '#/components/schemas/SecurityMonitoringFilterAction'
        query:
          description: Query for selecting logs to apply the filtering action.
          type: string
      type: object
    SecurityMonitoringFilterAction:
      description: The type of filtering action.
      enum:
        - require
        - suppress
      type: string
      x-enum-varnames:
        - REQUIRE
        - SUPPRESS
    SecurityMonitoringListRulesResponse:
      description: List of rules.
      example:
        data:
          - cases:
              - condition: condition
                name: name
                notifications:
                  - notifications
                  - notifications
              - condition: condition
                name: name
                notifications:
                  - notifications
                  - notifications
            hasExtendedTitle: true
            updateAuthorId: 1
            filters:
              - query: query
              - query: query
            message: message
            queries:
              - distinctFields:
                  - distinctFields
                  - distinctFields
                metric: metric
                groupByFields:
                  - groupByFields
                  - groupByFields
                query: query
                name: name
                agentRule:
                  expression: expression
                  agentRuleId: etc_shadow
              - distinctFields:
                  - distinctFields
                  - distinctFields
                metric: metric
                groupByFields:
                  - groupByFields
                  - groupByFields
                query: query
                name: name
                agentRule:
                  expression: expression
                  agentRuleId: etc_shadow
            version: 5
            tags:
              - tags
              - tags
            creationAuthorId: 6
            createdAt: 0
            isDefault: true
            isDeleted: true
            isEnabled: true
            name: name
            options:
              newValueOptions: {}
            id: id
          - cases:
              - condition: condition
                name: name
                notifications:
                  - notifications
                  - notifications
              - condition: condition
                name: name
                notifications:
                  - notifications
                  - notifications
            hasExtendedTitle: true
            updateAuthorId: 1
            filters:
              - query: query
              - query: query
            message: message
            queries:
              - distinctFields:
                  - distinctFields
                  - distinctFields
                metric: metric
                groupByFields:
                  - groupByFields
                  - groupByFields
                query: query
                name: name
                agentRule:
                  expression: expression
                  agentRuleId: etc_shadow
              - distinctFields:
                  - distinctFields
                  - distinctFields
                metric: metric
                groupByFields:
                  - groupByFields
                  - groupByFields
                query: query
                name: name
                agentRule:
                  expression: expression
                  agentRuleId: etc_shadow
            version: 5
            tags:
              - tags
              - tags
            creationAuthorId: 6
            createdAt: 0
            isDefault: true
            isDeleted: true
            isEnabled: true
            name: name
            options:
              newValueOptions: {}
            id: id
        meta:
          page:
            total_count: 6
            total_filtered_count: 1
      properties:
        data:
          description: Array containing the list of rules.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleResponse'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    SecurityMonitoringRuleCase:
      description: Case when signal is generated.
      example:
        condition: condition
        name: name
        notifications:
          - notifications
          - notifications
      properties:
        condition:
          description: |-
            A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated
            based on the event counts in the previously defined queries.
          type: string
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      type: object
    SecurityMonitoringRuleCaseCreate:
      description: Case when signal is generated.
      properties:
        condition:
          description: |-
            A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated
            based on the event counts in the previously defined queries.
          type: string
        name:
          description: Name of the case.
          type: string
        notifications:
          description: Notification targets for each rule case.
          items:
            description: Notification.
            type: string
          type: array
        status:
          $ref: '#/components/schemas/SecurityMonitoringRuleSeverity'
      required:
        - status
      type: object
    SecurityMonitoringRuleCreatePayload:
      description: Create a new rule.
      example:
        cases: []
        hasExtendedTitle: true
        isEnabled: true
        name: My security monitoring rule.
        options:
          newValueOptions: {}
        filters:
          - query: query
          - query: query
        message: ""
        queries: []
        tags:
          - env:prod
          - team:security
      properties:
        cases:
          description: Cases for generating signals.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCaseCreate'
          type: array
        filters:
          description: Additional queries to filter matched events before they are
            processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values
            in their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          example: true
          type: boolean
        message:
          description: Message for generated signals.
          example: ""
          type: string
        name:
          description: The name of the rule.
          example: My security monitoring rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          example: []
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleQueryCreate'
          type: array
        tags:
          description: Tags for generated signals.
          example:
            - env:prod
            - team:security
          items:
            description: Tag.
            type: string
          type: array
      required:
        - cases
        - isEnabled
        - message
        - name
        - options
        - queries
      type: object
    SecurityMonitoringRuleDetectionMethod:
      description: The detection method.
      enum:
        - threshold
        - new_value
        - anomaly_detection
      type: string
      x-enum-varnames:
        - THRESHOLD
        - NEW_VALUE
        - ANOMALY_DETECTION
    SecurityMonitoringRuleEvaluationWindow:
      description: |-
        A time window is specified to match when at least one of the cases matches true. This is a sliding window
        and evaluates in real time.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
    SecurityMonitoringRuleKeepAlive:
      description: |-
        Once a signal is generated, the signal will remain “open” if a case is matched at least once within
        this keep alive window.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
        - 10800
        - 21600
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
        - THREE_HOURS
        - SIX_HOURS
    SecurityMonitoringRuleMaxSignalDuration:
      description: |-
        A signal will “close” regardless of the query being matched once the time exceeds the maximum duration.
        This time is calculated from the first seen timestamp.
      enum:
        - 0
        - 60
        - 300
        - 600
        - 900
        - 1800
        - 3600
        - 7200
        - 10800
        - 21600
        - 43200
        - 86400
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_MINUTES
        - ONE_MINUTE
        - FIVE_MINUTES
        - TEN_MINUTES
        - FIFTEEN_MINUTES
        - THIRTY_MINUTES
        - ONE_HOUR
        - TWO_HOURS
        - THREE_HOURS
        - SIX_HOURS
        - TWELVE_HOURS
        - ONE_DAY
    SecurityMonitoringRuleNewValueOptions:
      description: Options on new value rules.
      example: {}
      properties:
        forgetAfter:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsForgetAfter'
        learningDuration:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptionsLearningDuration'
      type: object
    SecurityMonitoringRuleNewValueOptionsForgetAfter:
      description: The duration in days after which a learned value is forgotten.
      enum:
        - 1
        - 2
        - 7
        - 14
        - 21
        - 28
      format: int32
      type: integer
      x-enum-varnames:
        - ONE_DAY
        - TWO_DAYS
        - ONE_WEEK
        - TWO_WEEKS
        - THREE_WEEKS
        - FOUR_WEEKS
    SecurityMonitoringRuleNewValueOptionsLearningDuration:
      description: |-
        The duration in days during which values are learned, and after which signals will be generated for values that
        weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
      enum:
        - 0
        - 1
        - 7
      format: int32
      type: integer
      x-enum-varnames:
        - ZERO_DAYS
        - ONE_DAY
        - SEVEN_DAYS
    SecurityMonitoringRuleOptions:
      description: Options on rules.
      example:
        newValueOptions: {}
      properties:
        detectionMethod:
          $ref: '#/components/schemas/SecurityMonitoringRuleDetectionMethod'
        evaluationWindow:
          $ref: '#/components/schemas/SecurityMonitoringRuleEvaluationWindow'
        keepAlive:
          $ref: '#/components/schemas/SecurityMonitoringRuleKeepAlive'
        maxSignalDuration:
          $ref: '#/components/schemas/SecurityMonitoringRuleMaxSignalDuration'
        newValueOptions:
          $ref: '#/components/schemas/SecurityMonitoringRuleNewValueOptions'
      type: object
    SecurityMonitoringRuleQuery:
      description: Query for matching rule.
      example:
        distinctFields:
          - distinctFields
          - distinctFields
        metric: metric
        groupByFields:
          - groupByFields
          - groupByFields
        query: query
        name: name
        agentRule:
          expression: expression
          agentRuleId: etc_shadow
      properties:
        agentRule:
          $ref: '#/components/schemas/SecurityMonitoringRuntimeAgentRule'
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        distinctFields:
          description: Field for which the cardinality is measured. Sent as an array.
          items:
            description: Field.
            type: string
          type: array
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        metric:
          description: |-
            The target field to aggregate over when using the sum or max
            aggregations.
          type: string
        name:
          description: Name of the query.
          type: string
        query:
          description: Query to run on logs.
          type: string
      type: object
    SecurityMonitoringRuleQueryAggregation:
      description: The aggregation type.
      enum:
        - count
        - cardinality
        - sum
        - max
        - new_value
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - SUM
        - MAX
        - NEW_VALUE
    SecurityMonitoringRuleQueryCreate:
      description: Query for matching rule.
      properties:
        agentRule:
          $ref: '#/components/schemas/SecurityMonitoringRuntimeAgentRule'
        aggregation:
          $ref: '#/components/schemas/SecurityMonitoringRuleQueryAggregation'
        distinctFields:
          description: Field for which the cardinality is measured. Sent as an array.
          items:
            description: Field.
            type: string
          type: array
        groupByFields:
          description: Fields to group by.
          items:
            description: Field.
            type: string
          type: array
        metric:
          description: |-
            The target field to aggregate over when using the sum or max
            aggregations.
          type: string
        name:
          description: Name of the query.
          type: string
        query:
          description: Query to run on logs.
          example: a > 3
          type: string
      required:
        - query
      type: object
    SecurityMonitoringRuleResponse:
      description: Rule.
      example:
        cases:
          - condition: condition
            name: name
            notifications:
              - notifications
              - notifications
          - condition: condition
            name: name
            notifications:
              - notifications
              - notifications
        hasExtendedTitle: true
        updateAuthorId: 1
        filters:
          - query: query
          - query: query
        message: message
        queries:
          - distinctFields:
              - distinctFields
              - distinctFields
            metric: metric
            groupByFields:
              - groupByFields
              - groupByFields
            query: query
            name: name
            agentRule:
              expression: expression
              agentRuleId: etc_shadow
          - distinctFields:
              - distinctFields
              - distinctFields
            metric: metric
            groupByFields:
              - groupByFields
              - groupByFields
            query: query
            name: name
            agentRule:
              expression: expression
              agentRuleId: etc_shadow
        version: 5
        tags:
          - tags
          - tags
        creationAuthorId: 6
        createdAt: 0
        isDefault: true
        isDeleted: true
        isEnabled: true
        name: name
        options:
          newValueOptions: {}
        id: id
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        createdAt:
          description: When the rule was created, timestamp in milliseconds.
          format: int64
          type: integer
        creationAuthorId:
          description: User ID of the user who created the rule.
          format: int64
          type: integer
        filters:
          description: Additional queries to filter matched events before they are
            processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values
            in their title.
          type: boolean
        id:
          description: The ID of the rule.
          type: string
        isDefault:
          description: Whether the rule is included by default.
          type: boolean
        isDeleted:
          description: Whether the rule has been deleted.
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: The name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        updateAuthorId:
          description: User ID of the user who updated the rule.
          format: int64
          type: integer
        version:
          description: The version of the rule.
          format: int64
          type: integer
    SecurityMonitoringRuleSeverity:
      description: Severity of the Security Signal.
      enum:
        - info
        - low
        - medium
        - high
        - critical
      type: string
      x-enum-varnames:
        - INFO
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    SecurityMonitoringRuleUpdatePayload:
      description: Update an existing rule.
      example:
        cases:
          - condition: condition
            name: name
            notifications:
              - notifications
              - notifications
          - condition: condition
            name: name
            notifications:
              - notifications
              - notifications
        hasExtendedTitle: true
        isEnabled: true
        name: name
        options:
          newValueOptions: {}
        filters:
          - query: query
          - query: query
        message: message
        queries:
          - distinctFields:
              - distinctFields
              - distinctFields
            metric: metric
            groupByFields:
              - groupByFields
              - groupByFields
            query: query
            name: name
            agentRule:
              expression: expression
              agentRuleId: etc_shadow
          - distinctFields:
              - distinctFields
              - distinctFields
            metric: metric
            groupByFields:
              - groupByFields
              - groupByFields
            query: query
            name: name
            agentRule:
              expression: expression
              agentRuleId: etc_shadow
        version: 1
        tags:
          - tags
          - tags
      properties:
        cases:
          description: Cases for generating signals.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleCase'
          type: array
        filters:
          description: Additional queries to filter matched events before they are
            processed.
          items:
            $ref: '#/components/schemas/SecurityMonitoringFilter'
          type: array
        hasExtendedTitle:
          description: Whether the notifications include the triggering group-by values
            in their title.
          example: true
          type: boolean
        isEnabled:
          description: Whether the rule is enabled.
          type: boolean
        message:
          description: Message for generated signals.
          type: string
        name:
          description: Name of the rule.
          type: string
        options:
          $ref: '#/components/schemas/SecurityMonitoringRuleOptions'
        queries:
          description: Queries for selecting logs which are part of the rule.
          items:
            $ref: '#/components/schemas/SecurityMonitoringRuleQuery'
          type: array
        tags:
          description: Tags for generated signals.
          items:
            description: Tag.
            type: string
          type: array
        version:
          description: The version of the rule being updated.
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    SecurityMonitoringRuntimeAgentRule:
      description: The Agent rule.
      example:
        expression: expression
        agentRuleId: etc_shadow
      properties:
        agentRuleId:
          description: The Agent rule ID. Must be unique within the rule.
          example: etc_shadow
          type: string
        expression:
          description: |-
            A Runtime Security expression determines what activity should be collected by the Datadog Agent.
            These logical expressions can use predefined operators and attributes. Tags cannot be used in Runtime
            Security expressions. Instead, allow or deny based on tags under the advanced option.
          type: string
      type: object
    SecurityMonitoringSignal:
      description: Object description of a security signal.
      example:
        attributes:
          attributes:
            workflow:
              first_seen: 2020-06-23T14:46:01.000Z
              last_seen: 2020-06-23T14:46:49.000Z
              rule:
                id: 0f5-e0c-805
                name: 'Brute Force Attack Grouped By User '
                version: 12
          message: Detect Account Take Over (ATO) through brute force attempts
          tags:
            - security:attack
            - technique:T1110-brute-force
          timestamp: 2019-01-02T09:42:36.32Z
        id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
        type: signal
      properties:
        attributes:
          $ref: '#/components/schemas/SecurityMonitoringSignal_attributes'
        id:
          description: The unique ID of the security signal.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/SecurityMonitoringSignalType'
      type: object
    SecurityMonitoringSignalListRequest:
      description: The request for a security signal list.
      example:
        filter:
          query: security:attack status:high
          from: 2019-01-02T09:42:36.32Z
          to: 2019-01-03T09:42:36.32Z
        page:
          cursor: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          limit: 25
      properties:
        filter:
          $ref: '#/components/schemas/SecurityMonitoringSignalListRequest_filter'
        page:
          $ref: '#/components/schemas/SecurityMonitoringSignalListRequest_page'
        sort:
          $ref: '#/components/schemas/SecurityMonitoringSignalsSort'
      type: object
    SecurityMonitoringSignalType:
      default: signal
      description: The type of event.
      enum:
        - signal
      example: signal
      type: string
      x-enum-varnames:
        - SIGNAL
    SecurityMonitoringSignalsListResponse:
      description: |-
        The response object with all security signals matching the request
        and pagination information.
      example:
        data:
          - attributes:
              attributes:
                workflow:
                  first_seen: 2020-06-23T14:46:01.000Z
                  last_seen: 2020-06-23T14:46:49.000Z
                  rule:
                    id: 0f5-e0c-805
                    name: 'Brute Force Attack Grouped By User '
                    version: 12
              message: Detect Account Take Over (ATO) through brute force attempts
              tags:
                - security:attack
                - technique:T1110-brute-force
              timestamp: 2019-01-02T09:42:36.32Z
            id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
            type: signal
          - attributes:
              attributes:
                workflow:
                  first_seen: 2020-06-23T14:46:01.000Z
                  last_seen: 2020-06-23T14:46:49.000Z
                  rule:
                    id: 0f5-e0c-805
                    name: 'Brute Force Attack Grouped By User '
                    version: 12
              message: Detect Account Take Over (ATO) through brute force attempts
              tags:
                - security:attack
                - technique:T1110-brute-force
              timestamp: 2019-01-02T09:42:36.32Z
            id: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
            type: signal
        meta:
          page:
            after: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        links:
          next: https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        data:
          description: An array of security signals matching the request.
          items:
            $ref: '#/components/schemas/SecurityMonitoringSignal'
          type: array
        links:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse_links'
        meta:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse_meta'
      type: object
    SecurityMonitoringSignalsSort:
      description: The sort parameters used for querying security signals.
      enum:
        - timestamp
        - -timestamp
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    User:
      description: User object returned by the API.
      example:
        relationships:
          other_users:
            data: []
          org:
            data:
              id: 00000000-0000-0000-0000-000000000000
              type: orgs
          roles:
            data:
              - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                type: roles
              - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                type: roles
          other_orgs:
            data: []
        attributes:
          icon: icon
          name: name
          verified: true
          created_at: 2000-01-23T04:56:07.000+00:00
          disabled: true
          handle: handle
          modified_at: 2000-01-23T04:56:07.000+00:00
          title: title
          email: email
          status: status
        id: id
        type: users
      properties:
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        id:
          description: ID of the user.
          type: string
        relationships:
          $ref: '#/components/schemas/UserResponseRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    UserAttributes:
      description: Attributes of user object returned by the API.
      example:
        icon: icon
        name: name
        verified: true
        created_at: 2000-01-23T04:56:07.000+00:00
        disabled: true
        handle: handle
        modified_at: 2000-01-23T04:56:07.000+00:00
        title: title
        email: email
        status: status
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        modified_at:
          description: Time that the user was last modified.
          format: date-time
          type: string
        name:
          description: Name of the user.
          type: string
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    UserCreateAttributes:
      description: Attributes of the created user.
      example:
        name: name
        title: title
        email: jane.doe@example.com
      properties:
        email:
          description: The email of the user.
          example: jane.doe@example.com
          type: string
        name:
          description: The name of the user.
          type: string
        title:
          description: The title of the user.
          type: string
      required:
        - email
      type: object
    UserCreateData:
      description: Object to create a user.
      example:
        relationships:
          roles:
            data:
              - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                type: roles
              - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                type: roles
        attributes:
          name: name
          title: title
          email: jane.doe@example.com
        type: users
      properties:
        attributes:
          $ref: '#/components/schemas/UserCreateAttributes'
        relationships:
          $ref: '#/components/schemas/UserRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - type
      type: object
    UserCreateRequest:
      description: Create a user.
      example:
        data:
          relationships:
            roles:
              data:
                - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                  type: roles
                - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                  type: roles
          attributes:
            name: name
            title: title
            email: jane.doe@example.com
          type: users
      properties:
        data:
          $ref: '#/components/schemas/UserCreateData'
      required:
        - data
      type: object
    UserInvitationData:
      description: Object to create a user invitation.
      properties:
        relationships:
          $ref: '#/components/schemas/UserInvitationRelationships'
        type:
          $ref: '#/components/schemas/UserInvitationsType'
      required:
        - relationships
        - type
      type: object
    UserInvitationDataAttributes:
      description: Attributes of a user invitation.
      example:
        invite_type: invite_type
        expires_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        uuid: uuid
      properties:
        created_at:
          description: Creation time of the user invitation.
          format: date-time
          type: string
        expires_at:
          description: Time of invitation expiration.
          format: date-time
          type: string
        invite_type:
          description: Type of invitation.
          type: string
        uuid:
          description: UUID of the user invitation.
          type: string
      type: object
    UserInvitationRelationships:
      description: Relationships data for user invitation.
      properties:
        user:
          $ref: '#/components/schemas/RelationshipToUser'
      required:
        - user
      type: object
    UserInvitationResponse:
      description: User invitation as returned by the API.
      example:
        data:
          attributes:
            invite_type: invite_type
            expires_at: 2000-01-23T04:56:07.000+00:00
            created_at: 2000-01-23T04:56:07.000+00:00
            uuid: uuid
          id: id
          type: user_invitations
      properties:
        data:
          $ref: '#/components/schemas/UserInvitationResponseData'
      type: object
    UserInvitationResponseData:
      description: Object of a user invitation returned by the API.
      example:
        attributes:
          invite_type: invite_type
          expires_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          uuid: uuid
        id: id
        type: user_invitations
      properties:
        attributes:
          $ref: '#/components/schemas/UserInvitationDataAttributes'
        id:
          description: ID of the user invitation.
          type: string
        type:
          $ref: '#/components/schemas/UserInvitationsType'
      type: object
    UserInvitationsRequest:
      description: Object to invite users to join the organization.
      example:
        data: []
      properties:
        data:
          description: List of user invitations.
          example: []
          items:
            $ref: '#/components/schemas/UserInvitationData'
          type: array
      required:
        - data
      type: object
    UserInvitationsResponse:
      description: User invitations as returned by the API.
      example:
        data:
          - attributes:
              invite_type: invite_type
              expires_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              uuid: uuid
            id: id
            type: user_invitations
          - attributes:
              invite_type: invite_type
              expires_at: 2000-01-23T04:56:07.000+00:00
              created_at: 2000-01-23T04:56:07.000+00:00
              uuid: uuid
            id: id
            type: user_invitations
      properties:
        data:
          description: Array of user invitations.
          items:
            $ref: '#/components/schemas/UserInvitationResponseData'
          type: array
      type: object
    UserInvitationsType:
      default: user_invitations
      description: User invitations type.
      enum:
        - user_invitations
      example: user_invitations
      type: string
      x-enum-varnames:
        - USER_INVITATIONS
    UserRelationships:
      description: Relationships of the user object.
      example:
        roles:
          data:
            - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
              type: roles
            - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
              type: roles
      properties:
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    UserResponseIncludedItem:
      description: An object related to a user.
      oneOf:
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/Permission'
        - $ref: '#/components/schemas/Role'
      type: object
    UserResponseRelationships:
      description: Relationships of the user object returned by the API.
      example:
        other_users:
          data: []
        org:
          data:
            id: 00000000-0000-0000-0000-000000000000
            type: orgs
        roles:
          data:
            - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
              type: roles
            - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
              type: roles
        other_orgs:
          data: []
      properties:
        org:
          $ref: '#/components/schemas/RelationshipToOrganization'
        other_orgs:
          $ref: '#/components/schemas/RelationshipToOrganizations'
        other_users:
          $ref: '#/components/schemas/RelationshipToUsers'
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    UserUpdateAttributes:
      description: Attributes of the edited user.
      example:
        name: name
        disabled: true
        email: email
      properties:
        disabled:
          description: If the user is enabled or disabled.
          type: boolean
        email:
          description: The email of the user.
          type: string
        name:
          description: The name of the user.
          type: string
      type: object
    UserUpdateData:
      description: Object to update a user.
      example:
        attributes:
          name: name
          disabled: true
          email: email
        id: 00000000-0000-0000-0000-000000000000
        type: users
      properties:
        attributes:
          $ref: '#/components/schemas/UserUpdateAttributes'
        id:
          description: ID of the user.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - id
        - type
      type: object
    UserUpdateRequest:
      description: Update a user.
      example:
        data:
          attributes:
            name: name
            disabled: true
            email: email
          id: 00000000-0000-0000-0000-000000000000
          type: users
      properties:
        data:
          $ref: '#/components/schemas/UserUpdateData'
      required:
        - data
      type: object
    UsersResponse:
      description: Response containing information about multiple users.
      example:
        data:
          - relationships:
              other_users:
                data: []
              org:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: orgs
              roles:
                data:
                  - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                    type: roles
                  - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                    type: roles
              other_orgs:
                data: []
            attributes:
              icon: icon
              name: name
              verified: true
              created_at: 2000-01-23T04:56:07.000+00:00
              disabled: true
              handle: handle
              modified_at: 2000-01-23T04:56:07.000+00:00
              title: title
              email: email
              status: status
            id: id
            type: users
          - relationships:
              other_users:
                data: []
              org:
                data:
                  id: 00000000-0000-0000-0000-000000000000
                  type: orgs
              roles:
                data:
                  - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                    type: roles
                  - id: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
                    type: roles
              other_orgs:
                data: []
            attributes:
              icon: icon
              name: name
              verified: true
              created_at: 2000-01-23T04:56:07.000+00:00
              disabled: true
              handle: handle
              modified_at: 2000-01-23T04:56:07.000+00:00
              title: title
              email: email
              status: status
            id: id
            type: users
        meta:
          page:
            total_count: 6
            total_filtered_count: 1
        included:
          - null
          - null
      properties:
        data:
          description: Array of returned users.
          items:
            $ref: '#/components/schemas/User'
          type: array
        included:
          description: Array of objects related to the users.
          items:
            $ref: '#/components/schemas/UserResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      readOnly: true
      type: object
    UsersType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    IncidentServicesResponse_meta_pagination:
      description: Pagination properties.
      example:
        offset: 10
        size: 1000
        next_offset: 1000
      properties:
        next_offset:
          description: The index of the first element in the next page of results.
            Equal to page size added to the current offset.
          example: 1000
          format: int64
          type: integer
        offset:
          description: The index of the first element in the results.
          example: 10
          format: int64
          type: integer
        size:
          description: Maximum size of pages to return.
          example: 1000
          format: int64
          type: integer
      type: object
    IncidentServicesResponse_meta:
      description: The metadata object containing pagination metadata.
      example:
        pagination:
          offset: 10
          size: 1000
          next_offset: 1000
      properties:
        pagination:
          $ref: '#/components/schemas/IncidentServicesResponse_meta_pagination'
      readOnly: true
      type: object
    IncidentTimelineCellMarkdownCreateAttributes_content:
      description: The Markdown timeline cell contents.
      properties:
        content:
          description: The Markdown content of the cell.
          example: An example timeline cell message.
          nullable: false
          type: string
      type: object
    Log_attributes:
      description: JSON object containing all log attributes and their associated
        values.
      example:
        service: agent
        host: i-0123
        attributes:
          customAttribute: 123
          duration: 2345
        message: Host connected to remote
        status: INFO
        tags:
          - team:A
        timestamp: 2019-01-02T09:42:36.32Z
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from your log.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        host:
          description: Name of the machine from where the logs are being sent.
          example: i-0123
          type: string
        message:
          description: |-
            The message [reserved attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)
            of your log. By default, Datadog ingests the value of the message attribute as the body of the log entry.
            That value is then highlighted and displayed in the Logstream, where it is indexed for full text search.
          example: Host connected to remote
          type: string
        service:
          description: |-
            The name of the application or service generating the log events.
            It is used to switch from Logs to APM, so make sure you define the same
            value when you use both products.
          example: agent
          type: string
        status:
          description: Status of the message associated with your log.
          example: INFO
          type: string
        tags:
          description: Array of tags associated with your log.
          example:
            - team:A
          items:
            description: Tag associated with your log.
            type: string
          type: array
        timestamp:
          description: Timestamp of your log.
          example: 2019-01-02T09:42:36.32Z
          format: date-time
          type: string
      type: object
    LogsAggregateRequest_page:
      description: Paging settings
      example:
        cursor: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        cursor:
          description: The returned paging point to use to get the next results
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsAggregateResponse_data:
      description: The query results
      example:
        buckets:
          - computes: {}
            by:
              '@state': success
              '@version': abc
          - computes: {}
            by:
              '@state': success
              '@version': abc
      properties:
        buckets:
          description: The list of matching buckets, one item per bucket
          items:
            $ref: '#/components/schemas/LogsAggregateBucket'
          type: array
      type: object
    LogsGroupBy_histogram:
      description: |-
        Used to perform a histogram computation (only for measure facets).
        Note: At most 100 buckets are allowed, the number of buckets is (max - min)/interval.
      example:
        min: 50
        max: 100
        interval: 10
      properties:
        interval:
          description: The bin size of the histogram buckets
          example: 10
          format: double
          type: number
        max:
          description: |-
            The maximum value for the measure used in the histogram
            (values greater than this one are filtered out)
          example: 100
          format: double
          type: number
        min:
          description: |-
            The minimum value for the measure used in the histogram
            (values smaller than this one are filtered out)
          example: 50
          format: double
          type: number
      required:
        - interval
        - max
        - min
      type: object
    LogsListRequest_page:
      description: Paging attributes for listing logs.
      example:
        cursor: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        limit: 25
      properties:
        cursor:
          description: List following results with a cursor provided in the previous
            query.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of logs in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    LogsListResponse_links:
      description: Links attributes.
      example:
        next: https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        next:
          description: |-
            Link for the next set of results. Note that the request can also be made using the
            POST endpoint.
          example: https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsResponseMetadata_page:
      description: Paging attributes.
      example:
        after: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        after:
          description: |-
            The cursor to use to get the next results, if any. To make the next request, use the same.
            parameters with the addition of the `page[cursor]`.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    ProcessSummariesMeta_page:
      description: Paging attributes.
      example:
        size: 1465
        after: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd
      properties:
        after:
          description: |-
            The cursor used to get the next results, if any. To make the next request, use the same
            parameters with the addition of the `page[cursor]`.
          example: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd
          type: string
        size:
          description: Number of results returned.
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
      type: object
    RoleCreateResponse_data:
      description: Role object returned by the API.
      example:
        relationships:
          permissions:
            data:
              - id: id
                type: permissions
              - id: id
                type: permissions
        attributes:
          name: developers
          created_at: 2000-01-23T04:56:07.000+00:00
          modified_at: 2000-01-23T04:56:07.000+00:00
        id: id
        type: roles
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCreateAttributes'
        id:
          description: ID of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    RoleUpdateResponse_data:
      description: Role object returned by the API.
      example:
        relationships:
          permissions:
            data:
              - id: id
                type: permissions
              - id: id
                type: permissions
        attributes:
          name: name
          created_at: 2000-01-23T04:56:07.000+00:00
          modified_at: 2000-01-23T04:56:07.000+00:00
        id: id
        type: roles
      properties:
        attributes:
          $ref: '#/components/schemas/RoleUpdateAttributes'
        id:
          description: ID of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    SecurityMonitoringSignal_attributes:
      description: |-
        The object containing all signal attributes and their
        associated values.
      example:
        attributes:
          workflow:
            first_seen: 2020-06-23T14:46:01.000Z
            last_seen: 2020-06-23T14:46:49.000Z
            rule:
              id: 0f5-e0c-805
              name: 'Brute Force Attack Grouped By User '
              version: 12
        message: Detect Account Take Over (ATO) through brute force attempts
        tags:
          - security:attack
          - technique:T1110-brute-force
        timestamp: 2019-01-02T09:42:36.32Z
      properties:
        attributes:
          additionalProperties: {}
          description: A JSON object of attributes in the security signal.
          example:
            workflow:
              first_seen: 2020-06-23T14:46:01.000Z
              last_seen: 2020-06-23T14:46:49.000Z
              rule:
                id: 0f5-e0c-805
                name: 'Brute Force Attack Grouped By User '
                version: 12
          type: object
        message:
          description: The message in the security signal defined by the rule that
            generated the signal.
          example: Detect Account Take Over (ATO) through brute force attempts
          type: string
        tags:
          description: An array of tags associated with the security signal.
          example:
            - security:attack
            - technique:T1110-brute-force
          format: array
          items:
            description: The tag associated with the security signal.
            format: string
          type: array
        timestamp:
          description: The timestamp of the security signal.
          example: 2019-01-02T09:42:36.32Z
          format: date-time
          type: string
      type: object
    SecurityMonitoringSignalListRequest_filter:
      description: Search filters for listing security signals.
      example:
        query: security:attack status:high
        from: 2019-01-02T09:42:36.32Z
        to: 2019-01-03T09:42:36.32Z
      properties:
        from:
          description: The minimum timestamp for requested security signals.
          example: 2019-01-02T09:42:36.32Z
          format: date-time
          type: string
        query:
          description: Search query for listing security signals.
          example: security:attack status:high
          type: string
        to:
          description: The maximum timestamp for requested security signals.
          example: 2019-01-03T09:42:36.32Z
          format: date-time
          type: string
      type: object
    SecurityMonitoringSignalListRequest_page:
      description: The paging attributes for listing security signals.
      example:
        cursor: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        limit: 25
      properties:
        cursor:
          description: A list of results using the cursor provided in the previous
            query.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: The maximum number of security signals in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    SecurityMonitoringSignalsListResponse_links:
      description: Links attributes.
      example:
        next: https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        next:
          description: |-
            The link for the next set of results. **Note**: The request can also be made using the
            POST endpoint.
          example: https://app.datadoghq.com/api/v2/security_monitoring/signals?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    SecurityMonitoringSignalsListResponse_meta_page:
      description: Paging attributes.
      example:
        after: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        after:
          description: |-
            The cursor used to get the next results, if any. To make the next request, use the same
            parameters with the addition of the `page[cursor]`.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    SecurityMonitoringSignalsListResponse_meta:
      description: Meta attributes.
      example:
        page:
          after: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
      properties:
        page:
          $ref: '#/components/schemas/SecurityMonitoringSignalsListResponse_meta_page'
      type: object
  securitySchemes:
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
x-group-parameters: true