name: grafana
connection_types:
    grafana:
        name: grafana
        fields: {}
        reference: ""
icon_uri: ""
is_connection_optional: false
actions:
    - name: AddTeamMember
      display_name: Add Team Member By ID
      description: Add member to a team.
      enabled: true
      parameters:
        teamId:
            display_name: Team ID
            type: integer
            description: Team ID to add member to
            placeholder: ""
            required: true
            default: ""
            pattern: ""
            options: []
            index: 999
            format: int64
            is_multi: false
        userId:
            display_name: User ID
            type: integer
            description: The user ID to be added to the team.
            placeholder: ""
            required: true
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
      action_to_run: http.post
      action_to_run_param_values:
        body: '{"userId":"{{int(params.userId)}}"}'
        contentType: application/json
        url: '{{(exists(connection.grafana.REQUEST_URL) ? connection.grafana.REQUEST_URL : ''http://localhost:3000''), + ''/api/teams/'' + params.teamId + ''/members''}}'
      is_connection_optional: ""
    - name: CreateDashboard
      display_name: Create Or Update Dashboard
      description: Creates a new dashboard or updates an existing dashboard. When updating existing dashboards, if you do not define the folderId or the folderUid property, then the dashboard(s) are moved to the General folder. (You need to define only one property, not both).
      enabled: true
      parameters:
        folderUid:
            display_name: Folder Unique ID
            type: string
            description: The UID of the folder to save the dashboard in. Overrides the folderId. When updating existing dashboards, if you do not define the folderId or the folderUid property, then the dashboard(s) are moved to the General folder. (You need to define only one property, not both).
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
        message:
            display_name: Commit Message
            type: string
            description: Set a commit message for the version history.
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
      action_to_run: http.post
      action_to_run_param_values:
        body: '{"dashboard":{"id":"{{int(params.dashboard__id)}}","refresh":"{{params.dashboard__refresh}}","schemaVersion":"{{int(params.dashboard__schemaVersion)}}","tags":"[\"{{arr(params.dashboard__tags)}}\"]","timezone":"{{params.dashboard__timezone}}","title":"{{params.dashboard__title}}","uid":"{{params.dashboard__uid}}","version":"{{int(params.dashboard__version)}}"},"folderId":"{{int(params.folderId)}}","folderUid":"{{params.folderUid}}","message":"{{params.message}}","overwrite":"{{bool(params.overwrite)}}"}'
        contentType: application/json
        url: '{{(exists(connection.grafana.REQUEST_URL) ? connection.grafana.REQUEST_URL : ''http://localhost:3000''), + ''/api/dashboards/db''}}'
      is_connection_optional: ""
    - name: CreateFolder
      display_name: ""
      description: Creates a new folder.
      enabled: true
      parameters:
        title:
            display_name: Folder Title
            type: string
            description: ""
            placeholder: ""
            required: true
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
        uid:
            display_name: Folder Unique ID
            type: string
            description: The unique identifier (uid) of a folder can be used for uniquely identify folders between multiple Grafana installs. Itâ€™s automatically generated if not provided when creating a folder. The uid allows having consistent URLs for accessing folders and when syncing folders between multiple Grafana installs. This means that changing the title of a folder will not break any bookmarked links to that folder.
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
      action_to_run: http.post
      action_to_run_param_values:
        body: '{"title":"{{params.title}}","uid":"{{params.uid}}"}'
        contentType: application/json
        url: '{{(exists(connection.grafana.REQUEST_URL) ? connection.grafana.REQUEST_URL : ''http://localhost:3000''), + ''/api/folders''}}'
      is_connection_optional: ""
    - name: GetTeams
      display_name: ""
      description: Team search with paging.
      enabled: true
      parameters:
        name:
            display_name: Name
            type: string
            description: The name parameter returns a single team if the parameter matches the name field.
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
        page:
            display_name: Page
            type: string
            description: The page number. The default value is 1.
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
        perpage:
            display_name: Teams Per Page
            type: string
            description: The number of users to be returned per page. The default value is 1000
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
        query:
            display_name: Query
            type: string
            description: The query parameter is optional and it will return results where the query value is contained in the name field. Query values with spaces need to be URL encoded e.g. query=my%20team.
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
      action_to_run: http.get
      action_to_run_param_values:
        url: '{{(exists(connection.grafana.REQUEST_URL) ? connection.grafana.REQUEST_URL : ''http://localhost:3000''), + ''/api/teams/search''}}{{''?perpage='' + params.perpage + ''&page='' + params.page + ''&query='' + params.query + ''&name='' + params.name}}'
      is_connection_optional: ""
    - name: GetUsers
      display_name: ""
      description: Get all users within the current organization (lookup).
      enabled: true
      parameters: {}
      action_to_run: http.get
      action_to_run_param_values:
        url: '{{(exists(connection.grafana.REQUEST_URL) ? connection.grafana.REQUEST_URL : ''http://localhost:3000''), + ''/api/org/users/lookup''}}'
      is_connection_optional: ""
    - name: InviteOrgMember
      display_name: ""
      description: Invite member to organization.
      enabled: true
      parameters:
        loginOrEmail:
            display_name: Username/Email
            type: string
            description: Either the email or username that the user will use to sign in to Grafana.
            placeholder: ""
            required: true
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
        name:
            display_name: Name
            type: string
            description: (Optional) The value in the Name field of the account.
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
        role:
            display_name: Role
            type: dropdown
            description: The organization role to assign this user
            placeholder: ""
            required: true
            default: ""
            pattern: ""
            options:
                - Viewer
                - Editor
                - Admin
            index: 999
            format: ""
            is_multi: false
        sendEmail:
            display_name: Send Email
            type: bool
            description: Yes - If your organization has SMTP set up, then Grafana sends an email to the user inviting them to log in to Grafana and join your organization. No - The user is not sent an invitation, but they can sign in to the Grafana server with the email or username that you entered.
            placeholder: ""
            required: false
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
      action_to_run: http.post
      action_to_run_param_values:
        body: '{"loginOrEmail":"{{params.loginOrEmail}}","name":"{{params.name}}","role":"{{params.role}}","sendEmail":"{{bool(params.sendEmail)}}"}'
        contentType: application/json
        url: '{{(exists(connection.grafana.REQUEST_URL) ? connection.grafana.REQUEST_URL : ''http://localhost:3000''), + ''/api/org/invites''}}'
      is_connection_optional: ""
    - name: RemoveOrgMember
      display_name: Remove Org Member By ID
      description: Remove user from current organization.
      enabled: true
      parameters:
        userId:
            display_name: User ID
            type: string
            description: User ID to remove
            placeholder: ""
            required: true
            default: ""
            pattern: ""
            options: []
            index: 999
            format: ""
            is_multi: false
      action_to_run: http.delete
      action_to_run_param_values:
        url: '{{(exists(connection.grafana.REQUEST_URL) ? connection.grafana.REQUEST_URL : ''http://localhost:3000''), + ''/api/org/users/'' + params.userId}}'
      is_connection_optional: ""
